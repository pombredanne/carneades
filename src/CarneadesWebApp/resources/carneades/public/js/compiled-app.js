var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7612 = x == null ? null : x;
  if(p[goog.typeOf(x__7612)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7613__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7613 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7613__delegate.call(this, array, i, idxs)
    };
    G__7613.cljs$lang$maxFixedArity = 2;
    G__7613.cljs$lang$applyTo = function(arglist__7614) {
      var array = cljs.core.first(arglist__7614);
      var i = cljs.core.first(cljs.core.next(arglist__7614));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7614));
      return G__7613__delegate(array, i, idxs)
    };
    G__7613.cljs$lang$arity$variadic = G__7613__delegate;
    return G__7613
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7699 = this$;
      if(and__3822__auto____7699) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7699
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2431__auto____7700 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7701 = cljs.core._invoke[goog.typeOf(x__2431__auto____7700)];
        if(or__3824__auto____7701) {
          return or__3824__auto____7701
        }else {
          var or__3824__auto____7702 = cljs.core._invoke["_"];
          if(or__3824__auto____7702) {
            return or__3824__auto____7702
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7703 = this$;
      if(and__3822__auto____7703) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7703
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2431__auto____7704 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7705 = cljs.core._invoke[goog.typeOf(x__2431__auto____7704)];
        if(or__3824__auto____7705) {
          return or__3824__auto____7705
        }else {
          var or__3824__auto____7706 = cljs.core._invoke["_"];
          if(or__3824__auto____7706) {
            return or__3824__auto____7706
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7707 = this$;
      if(and__3822__auto____7707) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7707
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2431__auto____7708 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7709 = cljs.core._invoke[goog.typeOf(x__2431__auto____7708)];
        if(or__3824__auto____7709) {
          return or__3824__auto____7709
        }else {
          var or__3824__auto____7710 = cljs.core._invoke["_"];
          if(or__3824__auto____7710) {
            return or__3824__auto____7710
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7711 = this$;
      if(and__3822__auto____7711) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7711
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2431__auto____7712 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7713 = cljs.core._invoke[goog.typeOf(x__2431__auto____7712)];
        if(or__3824__auto____7713) {
          return or__3824__auto____7713
        }else {
          var or__3824__auto____7714 = cljs.core._invoke["_"];
          if(or__3824__auto____7714) {
            return or__3824__auto____7714
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7715 = this$;
      if(and__3822__auto____7715) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7715
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2431__auto____7716 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7717 = cljs.core._invoke[goog.typeOf(x__2431__auto____7716)];
        if(or__3824__auto____7717) {
          return or__3824__auto____7717
        }else {
          var or__3824__auto____7718 = cljs.core._invoke["_"];
          if(or__3824__auto____7718) {
            return or__3824__auto____7718
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7719 = this$;
      if(and__3822__auto____7719) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7719
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2431__auto____7720 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7721 = cljs.core._invoke[goog.typeOf(x__2431__auto____7720)];
        if(or__3824__auto____7721) {
          return or__3824__auto____7721
        }else {
          var or__3824__auto____7722 = cljs.core._invoke["_"];
          if(or__3824__auto____7722) {
            return or__3824__auto____7722
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7723 = this$;
      if(and__3822__auto____7723) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7723
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2431__auto____7724 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7725 = cljs.core._invoke[goog.typeOf(x__2431__auto____7724)];
        if(or__3824__auto____7725) {
          return or__3824__auto____7725
        }else {
          var or__3824__auto____7726 = cljs.core._invoke["_"];
          if(or__3824__auto____7726) {
            return or__3824__auto____7726
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7727 = this$;
      if(and__3822__auto____7727) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7727
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2431__auto____7728 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7729 = cljs.core._invoke[goog.typeOf(x__2431__auto____7728)];
        if(or__3824__auto____7729) {
          return or__3824__auto____7729
        }else {
          var or__3824__auto____7730 = cljs.core._invoke["_"];
          if(or__3824__auto____7730) {
            return or__3824__auto____7730
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7731 = this$;
      if(and__3822__auto____7731) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7731
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2431__auto____7732 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7733 = cljs.core._invoke[goog.typeOf(x__2431__auto____7732)];
        if(or__3824__auto____7733) {
          return or__3824__auto____7733
        }else {
          var or__3824__auto____7734 = cljs.core._invoke["_"];
          if(or__3824__auto____7734) {
            return or__3824__auto____7734
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7735 = this$;
      if(and__3822__auto____7735) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7735
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2431__auto____7736 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7737 = cljs.core._invoke[goog.typeOf(x__2431__auto____7736)];
        if(or__3824__auto____7737) {
          return or__3824__auto____7737
        }else {
          var or__3824__auto____7738 = cljs.core._invoke["_"];
          if(or__3824__auto____7738) {
            return or__3824__auto____7738
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7739 = this$;
      if(and__3822__auto____7739) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7739
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2431__auto____7740 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7741 = cljs.core._invoke[goog.typeOf(x__2431__auto____7740)];
        if(or__3824__auto____7741) {
          return or__3824__auto____7741
        }else {
          var or__3824__auto____7742 = cljs.core._invoke["_"];
          if(or__3824__auto____7742) {
            return or__3824__auto____7742
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7743 = this$;
      if(and__3822__auto____7743) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7743
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2431__auto____7744 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7745 = cljs.core._invoke[goog.typeOf(x__2431__auto____7744)];
        if(or__3824__auto____7745) {
          return or__3824__auto____7745
        }else {
          var or__3824__auto____7746 = cljs.core._invoke["_"];
          if(or__3824__auto____7746) {
            return or__3824__auto____7746
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7747 = this$;
      if(and__3822__auto____7747) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7747
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2431__auto____7748 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7749 = cljs.core._invoke[goog.typeOf(x__2431__auto____7748)];
        if(or__3824__auto____7749) {
          return or__3824__auto____7749
        }else {
          var or__3824__auto____7750 = cljs.core._invoke["_"];
          if(or__3824__auto____7750) {
            return or__3824__auto____7750
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7751 = this$;
      if(and__3822__auto____7751) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7751
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2431__auto____7752 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7753 = cljs.core._invoke[goog.typeOf(x__2431__auto____7752)];
        if(or__3824__auto____7753) {
          return or__3824__auto____7753
        }else {
          var or__3824__auto____7754 = cljs.core._invoke["_"];
          if(or__3824__auto____7754) {
            return or__3824__auto____7754
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7755 = this$;
      if(and__3822__auto____7755) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7755
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2431__auto____7756 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7757 = cljs.core._invoke[goog.typeOf(x__2431__auto____7756)];
        if(or__3824__auto____7757) {
          return or__3824__auto____7757
        }else {
          var or__3824__auto____7758 = cljs.core._invoke["_"];
          if(or__3824__auto____7758) {
            return or__3824__auto____7758
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7759 = this$;
      if(and__3822__auto____7759) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7759
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2431__auto____7760 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7761 = cljs.core._invoke[goog.typeOf(x__2431__auto____7760)];
        if(or__3824__auto____7761) {
          return or__3824__auto____7761
        }else {
          var or__3824__auto____7762 = cljs.core._invoke["_"];
          if(or__3824__auto____7762) {
            return or__3824__auto____7762
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7763 = this$;
      if(and__3822__auto____7763) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7763
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2431__auto____7764 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7765 = cljs.core._invoke[goog.typeOf(x__2431__auto____7764)];
        if(or__3824__auto____7765) {
          return or__3824__auto____7765
        }else {
          var or__3824__auto____7766 = cljs.core._invoke["_"];
          if(or__3824__auto____7766) {
            return or__3824__auto____7766
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7767 = this$;
      if(and__3822__auto____7767) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7767
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2431__auto____7768 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7769 = cljs.core._invoke[goog.typeOf(x__2431__auto____7768)];
        if(or__3824__auto____7769) {
          return or__3824__auto____7769
        }else {
          var or__3824__auto____7770 = cljs.core._invoke["_"];
          if(or__3824__auto____7770) {
            return or__3824__auto____7770
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7771 = this$;
      if(and__3822__auto____7771) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7771
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2431__auto____7772 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7773 = cljs.core._invoke[goog.typeOf(x__2431__auto____7772)];
        if(or__3824__auto____7773) {
          return or__3824__auto____7773
        }else {
          var or__3824__auto____7774 = cljs.core._invoke["_"];
          if(or__3824__auto____7774) {
            return or__3824__auto____7774
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7775 = this$;
      if(and__3822__auto____7775) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7775
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2431__auto____7776 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7777 = cljs.core._invoke[goog.typeOf(x__2431__auto____7776)];
        if(or__3824__auto____7777) {
          return or__3824__auto____7777
        }else {
          var or__3824__auto____7778 = cljs.core._invoke["_"];
          if(or__3824__auto____7778) {
            return or__3824__auto____7778
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7779 = this$;
      if(and__3822__auto____7779) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7779
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2431__auto____7780 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7781 = cljs.core._invoke[goog.typeOf(x__2431__auto____7780)];
        if(or__3824__auto____7781) {
          return or__3824__auto____7781
        }else {
          var or__3824__auto____7782 = cljs.core._invoke["_"];
          if(or__3824__auto____7782) {
            return or__3824__auto____7782
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7787 = coll;
    if(and__3822__auto____7787) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7787
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2431__auto____7788 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7789 = cljs.core._count[goog.typeOf(x__2431__auto____7788)];
      if(or__3824__auto____7789) {
        return or__3824__auto____7789
      }else {
        var or__3824__auto____7790 = cljs.core._count["_"];
        if(or__3824__auto____7790) {
          return or__3824__auto____7790
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7795 = coll;
    if(and__3822__auto____7795) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7795
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2431__auto____7796 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7797 = cljs.core._empty[goog.typeOf(x__2431__auto____7796)];
      if(or__3824__auto____7797) {
        return or__3824__auto____7797
      }else {
        var or__3824__auto____7798 = cljs.core._empty["_"];
        if(or__3824__auto____7798) {
          return or__3824__auto____7798
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7803 = coll;
    if(and__3822__auto____7803) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7803
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2431__auto____7804 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7805 = cljs.core._conj[goog.typeOf(x__2431__auto____7804)];
      if(or__3824__auto____7805) {
        return or__3824__auto____7805
      }else {
        var or__3824__auto____7806 = cljs.core._conj["_"];
        if(or__3824__auto____7806) {
          return or__3824__auto____7806
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7815 = coll;
      if(and__3822__auto____7815) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7815
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2431__auto____7816 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7817 = cljs.core._nth[goog.typeOf(x__2431__auto____7816)];
        if(or__3824__auto____7817) {
          return or__3824__auto____7817
        }else {
          var or__3824__auto____7818 = cljs.core._nth["_"];
          if(or__3824__auto____7818) {
            return or__3824__auto____7818
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7819 = coll;
      if(and__3822__auto____7819) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7819
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2431__auto____7820 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7821 = cljs.core._nth[goog.typeOf(x__2431__auto____7820)];
        if(or__3824__auto____7821) {
          return or__3824__auto____7821
        }else {
          var or__3824__auto____7822 = cljs.core._nth["_"];
          if(or__3824__auto____7822) {
            return or__3824__auto____7822
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7827 = coll;
    if(and__3822__auto____7827) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7827
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2431__auto____7828 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7829 = cljs.core._first[goog.typeOf(x__2431__auto____7828)];
      if(or__3824__auto____7829) {
        return or__3824__auto____7829
      }else {
        var or__3824__auto____7830 = cljs.core._first["_"];
        if(or__3824__auto____7830) {
          return or__3824__auto____7830
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7835 = coll;
    if(and__3822__auto____7835) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7835
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2431__auto____7836 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7837 = cljs.core._rest[goog.typeOf(x__2431__auto____7836)];
      if(or__3824__auto____7837) {
        return or__3824__auto____7837
      }else {
        var or__3824__auto____7838 = cljs.core._rest["_"];
        if(or__3824__auto____7838) {
          return or__3824__auto____7838
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7843 = coll;
    if(and__3822__auto____7843) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7843
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2431__auto____7844 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7845 = cljs.core._next[goog.typeOf(x__2431__auto____7844)];
      if(or__3824__auto____7845) {
        return or__3824__auto____7845
      }else {
        var or__3824__auto____7846 = cljs.core._next["_"];
        if(or__3824__auto____7846) {
          return or__3824__auto____7846
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7855 = o;
      if(and__3822__auto____7855) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7855
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2431__auto____7856 = o == null ? null : o;
      return function() {
        var or__3824__auto____7857 = cljs.core._lookup[goog.typeOf(x__2431__auto____7856)];
        if(or__3824__auto____7857) {
          return or__3824__auto____7857
        }else {
          var or__3824__auto____7858 = cljs.core._lookup["_"];
          if(or__3824__auto____7858) {
            return or__3824__auto____7858
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7859 = o;
      if(and__3822__auto____7859) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7859
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2431__auto____7860 = o == null ? null : o;
      return function() {
        var or__3824__auto____7861 = cljs.core._lookup[goog.typeOf(x__2431__auto____7860)];
        if(or__3824__auto____7861) {
          return or__3824__auto____7861
        }else {
          var or__3824__auto____7862 = cljs.core._lookup["_"];
          if(or__3824__auto____7862) {
            return or__3824__auto____7862
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7867 = coll;
    if(and__3822__auto____7867) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7867
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2431__auto____7868 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7869 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2431__auto____7868)];
      if(or__3824__auto____7869) {
        return or__3824__auto____7869
      }else {
        var or__3824__auto____7870 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7870) {
          return or__3824__auto____7870
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7875 = coll;
    if(and__3822__auto____7875) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7875
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2431__auto____7876 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7877 = cljs.core._assoc[goog.typeOf(x__2431__auto____7876)];
      if(or__3824__auto____7877) {
        return or__3824__auto____7877
      }else {
        var or__3824__auto____7878 = cljs.core._assoc["_"];
        if(or__3824__auto____7878) {
          return or__3824__auto____7878
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7883 = coll;
    if(and__3822__auto____7883) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7883
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2431__auto____7884 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7885 = cljs.core._dissoc[goog.typeOf(x__2431__auto____7884)];
      if(or__3824__auto____7885) {
        return or__3824__auto____7885
      }else {
        var or__3824__auto____7886 = cljs.core._dissoc["_"];
        if(or__3824__auto____7886) {
          return or__3824__auto____7886
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7891 = coll;
    if(and__3822__auto____7891) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7891
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2431__auto____7892 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7893 = cljs.core._key[goog.typeOf(x__2431__auto____7892)];
      if(or__3824__auto____7893) {
        return or__3824__auto____7893
      }else {
        var or__3824__auto____7894 = cljs.core._key["_"];
        if(or__3824__auto____7894) {
          return or__3824__auto____7894
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7899 = coll;
    if(and__3822__auto____7899) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7899
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2431__auto____7900 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7901 = cljs.core._val[goog.typeOf(x__2431__auto____7900)];
      if(or__3824__auto____7901) {
        return or__3824__auto____7901
      }else {
        var or__3824__auto____7902 = cljs.core._val["_"];
        if(or__3824__auto____7902) {
          return or__3824__auto____7902
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7907 = coll;
    if(and__3822__auto____7907) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7907
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2431__auto____7908 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7909 = cljs.core._disjoin[goog.typeOf(x__2431__auto____7908)];
      if(or__3824__auto____7909) {
        return or__3824__auto____7909
      }else {
        var or__3824__auto____7910 = cljs.core._disjoin["_"];
        if(or__3824__auto____7910) {
          return or__3824__auto____7910
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7915 = coll;
    if(and__3822__auto____7915) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7915
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2431__auto____7916 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7917 = cljs.core._peek[goog.typeOf(x__2431__auto____7916)];
      if(or__3824__auto____7917) {
        return or__3824__auto____7917
      }else {
        var or__3824__auto____7918 = cljs.core._peek["_"];
        if(or__3824__auto____7918) {
          return or__3824__auto____7918
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7923 = coll;
    if(and__3822__auto____7923) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7923
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2431__auto____7924 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7925 = cljs.core._pop[goog.typeOf(x__2431__auto____7924)];
      if(or__3824__auto____7925) {
        return or__3824__auto____7925
      }else {
        var or__3824__auto____7926 = cljs.core._pop["_"];
        if(or__3824__auto____7926) {
          return or__3824__auto____7926
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7931 = coll;
    if(and__3822__auto____7931) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7931
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2431__auto____7932 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7933 = cljs.core._assoc_n[goog.typeOf(x__2431__auto____7932)];
      if(or__3824__auto____7933) {
        return or__3824__auto____7933
      }else {
        var or__3824__auto____7934 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7934) {
          return or__3824__auto____7934
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7939 = o;
    if(and__3822__auto____7939) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7939
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2431__auto____7940 = o == null ? null : o;
    return function() {
      var or__3824__auto____7941 = cljs.core._deref[goog.typeOf(x__2431__auto____7940)];
      if(or__3824__auto____7941) {
        return or__3824__auto____7941
      }else {
        var or__3824__auto____7942 = cljs.core._deref["_"];
        if(or__3824__auto____7942) {
          return or__3824__auto____7942
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7947 = o;
    if(and__3822__auto____7947) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7947
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2431__auto____7948 = o == null ? null : o;
    return function() {
      var or__3824__auto____7949 = cljs.core._deref_with_timeout[goog.typeOf(x__2431__auto____7948)];
      if(or__3824__auto____7949) {
        return or__3824__auto____7949
      }else {
        var or__3824__auto____7950 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7950) {
          return or__3824__auto____7950
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7955 = o;
    if(and__3822__auto____7955) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7955
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2431__auto____7956 = o == null ? null : o;
    return function() {
      var or__3824__auto____7957 = cljs.core._meta[goog.typeOf(x__2431__auto____7956)];
      if(or__3824__auto____7957) {
        return or__3824__auto____7957
      }else {
        var or__3824__auto____7958 = cljs.core._meta["_"];
        if(or__3824__auto____7958) {
          return or__3824__auto____7958
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7963 = o;
    if(and__3822__auto____7963) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7963
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2431__auto____7964 = o == null ? null : o;
    return function() {
      var or__3824__auto____7965 = cljs.core._with_meta[goog.typeOf(x__2431__auto____7964)];
      if(or__3824__auto____7965) {
        return or__3824__auto____7965
      }else {
        var or__3824__auto____7966 = cljs.core._with_meta["_"];
        if(or__3824__auto____7966) {
          return or__3824__auto____7966
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7975 = coll;
      if(and__3822__auto____7975) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7975
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2431__auto____7976 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7977 = cljs.core._reduce[goog.typeOf(x__2431__auto____7976)];
        if(or__3824__auto____7977) {
          return or__3824__auto____7977
        }else {
          var or__3824__auto____7978 = cljs.core._reduce["_"];
          if(or__3824__auto____7978) {
            return or__3824__auto____7978
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7979 = coll;
      if(and__3822__auto____7979) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7979
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2431__auto____7980 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7981 = cljs.core._reduce[goog.typeOf(x__2431__auto____7980)];
        if(or__3824__auto____7981) {
          return or__3824__auto____7981
        }else {
          var or__3824__auto____7982 = cljs.core._reduce["_"];
          if(or__3824__auto____7982) {
            return or__3824__auto____7982
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7987 = coll;
    if(and__3822__auto____7987) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7987
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2431__auto____7988 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7989 = cljs.core._kv_reduce[goog.typeOf(x__2431__auto____7988)];
      if(or__3824__auto____7989) {
        return or__3824__auto____7989
      }else {
        var or__3824__auto____7990 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7990) {
          return or__3824__auto____7990
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7995 = o;
    if(and__3822__auto____7995) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7995
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2431__auto____7996 = o == null ? null : o;
    return function() {
      var or__3824__auto____7997 = cljs.core._equiv[goog.typeOf(x__2431__auto____7996)];
      if(or__3824__auto____7997) {
        return or__3824__auto____7997
      }else {
        var or__3824__auto____7998 = cljs.core._equiv["_"];
        if(or__3824__auto____7998) {
          return or__3824__auto____7998
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____8003 = o;
    if(and__3822__auto____8003) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____8003
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2431__auto____8004 = o == null ? null : o;
    return function() {
      var or__3824__auto____8005 = cljs.core._hash[goog.typeOf(x__2431__auto____8004)];
      if(or__3824__auto____8005) {
        return or__3824__auto____8005
      }else {
        var or__3824__auto____8006 = cljs.core._hash["_"];
        if(or__3824__auto____8006) {
          return or__3824__auto____8006
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____8011 = o;
    if(and__3822__auto____8011) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____8011
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2431__auto____8012 = o == null ? null : o;
    return function() {
      var or__3824__auto____8013 = cljs.core._seq[goog.typeOf(x__2431__auto____8012)];
      if(or__3824__auto____8013) {
        return or__3824__auto____8013
      }else {
        var or__3824__auto____8014 = cljs.core._seq["_"];
        if(or__3824__auto____8014) {
          return or__3824__auto____8014
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____8019 = coll;
    if(and__3822__auto____8019) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____8019
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2431__auto____8020 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8021 = cljs.core._rseq[goog.typeOf(x__2431__auto____8020)];
      if(or__3824__auto____8021) {
        return or__3824__auto____8021
      }else {
        var or__3824__auto____8022 = cljs.core._rseq["_"];
        if(or__3824__auto____8022) {
          return or__3824__auto____8022
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8027 = coll;
    if(and__3822__auto____8027) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____8027
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2431__auto____8028 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8029 = cljs.core._sorted_seq[goog.typeOf(x__2431__auto____8028)];
      if(or__3824__auto____8029) {
        return or__3824__auto____8029
      }else {
        var or__3824__auto____8030 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____8030) {
          return or__3824__auto____8030
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8035 = coll;
    if(and__3822__auto____8035) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____8035
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2431__auto____8036 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8037 = cljs.core._sorted_seq_from[goog.typeOf(x__2431__auto____8036)];
      if(or__3824__auto____8037) {
        return or__3824__auto____8037
      }else {
        var or__3824__auto____8038 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____8038) {
          return or__3824__auto____8038
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____8043 = coll;
    if(and__3822__auto____8043) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____8043
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2431__auto____8044 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8045 = cljs.core._entry_key[goog.typeOf(x__2431__auto____8044)];
      if(or__3824__auto____8045) {
        return or__3824__auto____8045
      }else {
        var or__3824__auto____8046 = cljs.core._entry_key["_"];
        if(or__3824__auto____8046) {
          return or__3824__auto____8046
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____8051 = coll;
    if(and__3822__auto____8051) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____8051
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2431__auto____8052 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8053 = cljs.core._comparator[goog.typeOf(x__2431__auto____8052)];
      if(or__3824__auto____8053) {
        return or__3824__auto____8053
      }else {
        var or__3824__auto____8054 = cljs.core._comparator["_"];
        if(or__3824__auto____8054) {
          return or__3824__auto____8054
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____8059 = o;
    if(and__3822__auto____8059) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____8059
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2431__auto____8060 = o == null ? null : o;
    return function() {
      var or__3824__auto____8061 = cljs.core._pr_seq[goog.typeOf(x__2431__auto____8060)];
      if(or__3824__auto____8061) {
        return or__3824__auto____8061
      }else {
        var or__3824__auto____8062 = cljs.core._pr_seq["_"];
        if(or__3824__auto____8062) {
          return or__3824__auto____8062
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3822__auto____8067 = writer;
    if(and__3822__auto____8067) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3822__auto____8067
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__2431__auto____8068 = writer == null ? null : writer;
    return function() {
      var or__3824__auto____8069 = cljs.core._write[goog.typeOf(x__2431__auto____8068)];
      if(or__3824__auto____8069) {
        return or__3824__auto____8069
      }else {
        var or__3824__auto____8070 = cljs.core._write["_"];
        if(or__3824__auto____8070) {
          return or__3824__auto____8070
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3822__auto____8075 = writer;
    if(and__3822__auto____8075) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3822__auto____8075
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__2431__auto____8076 = writer == null ? null : writer;
    return function() {
      var or__3824__auto____8077 = cljs.core._flush[goog.typeOf(x__2431__auto____8076)];
      if(or__3824__auto____8077) {
        return or__3824__auto____8077
      }else {
        var or__3824__auto____8078 = cljs.core._flush["_"];
        if(or__3824__auto____8078) {
          return or__3824__auto____8078
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3822__auto____8083 = o;
    if(and__3822__auto____8083) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3822__auto____8083
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__2431__auto____8084 = o == null ? null : o;
    return function() {
      var or__3824__auto____8085 = cljs.core._pr_writer[goog.typeOf(x__2431__auto____8084)];
      if(or__3824__auto____8085) {
        return or__3824__auto____8085
      }else {
        var or__3824__auto____8086 = cljs.core._pr_writer["_"];
        if(or__3824__auto____8086) {
          return or__3824__auto____8086
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8091 = d;
    if(and__3822__auto____8091) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8091
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2431__auto____8092 = d == null ? null : d;
    return function() {
      var or__3824__auto____8093 = cljs.core._realized_QMARK_[goog.typeOf(x__2431__auto____8092)];
      if(or__3824__auto____8093) {
        return or__3824__auto____8093
      }else {
        var or__3824__auto____8094 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8094) {
          return or__3824__auto____8094
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8099 = this$;
    if(and__3822__auto____8099) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8099
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2431__auto____8100 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8101 = cljs.core._notify_watches[goog.typeOf(x__2431__auto____8100)];
      if(or__3824__auto____8101) {
        return or__3824__auto____8101
      }else {
        var or__3824__auto____8102 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8102) {
          return or__3824__auto____8102
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8107 = this$;
    if(and__3822__auto____8107) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8107
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2431__auto____8108 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8109 = cljs.core._add_watch[goog.typeOf(x__2431__auto____8108)];
      if(or__3824__auto____8109) {
        return or__3824__auto____8109
      }else {
        var or__3824__auto____8110 = cljs.core._add_watch["_"];
        if(or__3824__auto____8110) {
          return or__3824__auto____8110
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8115 = this$;
    if(and__3822__auto____8115) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8115
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2431__auto____8116 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8117 = cljs.core._remove_watch[goog.typeOf(x__2431__auto____8116)];
      if(or__3824__auto____8117) {
        return or__3824__auto____8117
      }else {
        var or__3824__auto____8118 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8118) {
          return or__3824__auto____8118
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8123 = coll;
    if(and__3822__auto____8123) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8123
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2431__auto____8124 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8125 = cljs.core._as_transient[goog.typeOf(x__2431__auto____8124)];
      if(or__3824__auto____8125) {
        return or__3824__auto____8125
      }else {
        var or__3824__auto____8126 = cljs.core._as_transient["_"];
        if(or__3824__auto____8126) {
          return or__3824__auto____8126
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8131 = tcoll;
    if(and__3822__auto____8131) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8131
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2431__auto____8132 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8133 = cljs.core._conj_BANG_[goog.typeOf(x__2431__auto____8132)];
      if(or__3824__auto____8133) {
        return or__3824__auto____8133
      }else {
        var or__3824__auto____8134 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8134) {
          return or__3824__auto____8134
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8139 = tcoll;
    if(and__3822__auto____8139) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____8139
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2431__auto____8140 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8141 = cljs.core._persistent_BANG_[goog.typeOf(x__2431__auto____8140)];
      if(or__3824__auto____8141) {
        return or__3824__auto____8141
      }else {
        var or__3824__auto____8142 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____8142) {
          return or__3824__auto____8142
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____8147 = tcoll;
    if(and__3822__auto____8147) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____8147
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2431__auto____8148 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8149 = cljs.core._assoc_BANG_[goog.typeOf(x__2431__auto____8148)];
      if(or__3824__auto____8149) {
        return or__3824__auto____8149
      }else {
        var or__3824__auto____8150 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____8150) {
          return or__3824__auto____8150
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8155 = tcoll;
    if(and__3822__auto____8155) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8155
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2431__auto____8156 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8157 = cljs.core._dissoc_BANG_[goog.typeOf(x__2431__auto____8156)];
      if(or__3824__auto____8157) {
        return or__3824__auto____8157
      }else {
        var or__3824__auto____8158 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8158) {
          return or__3824__auto____8158
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8163 = tcoll;
    if(and__3822__auto____8163) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8163
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2431__auto____8164 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8165 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2431__auto____8164)];
      if(or__3824__auto____8165) {
        return or__3824__auto____8165
      }else {
        var or__3824__auto____8166 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8166) {
          return or__3824__auto____8166
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8171 = tcoll;
    if(and__3822__auto____8171) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8171
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2431__auto____8172 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8173 = cljs.core._pop_BANG_[goog.typeOf(x__2431__auto____8172)];
      if(or__3824__auto____8173) {
        return or__3824__auto____8173
      }else {
        var or__3824__auto____8174 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8174) {
          return or__3824__auto____8174
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8179 = tcoll;
    if(and__3822__auto____8179) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8179
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2431__auto____8180 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8181 = cljs.core._disjoin_BANG_[goog.typeOf(x__2431__auto____8180)];
      if(or__3824__auto____8181) {
        return or__3824__auto____8181
      }else {
        var or__3824__auto____8182 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8182) {
          return or__3824__auto____8182
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8187 = x;
    if(and__3822__auto____8187) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8187
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2431__auto____8188 = x == null ? null : x;
    return function() {
      var or__3824__auto____8189 = cljs.core._compare[goog.typeOf(x__2431__auto____8188)];
      if(or__3824__auto____8189) {
        return or__3824__auto____8189
      }else {
        var or__3824__auto____8190 = cljs.core._compare["_"];
        if(or__3824__auto____8190) {
          return or__3824__auto____8190
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8195 = coll;
    if(and__3822__auto____8195) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8195
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2431__auto____8196 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8197 = cljs.core._drop_first[goog.typeOf(x__2431__auto____8196)];
      if(or__3824__auto____8197) {
        return or__3824__auto____8197
      }else {
        var or__3824__auto____8198 = cljs.core._drop_first["_"];
        if(or__3824__auto____8198) {
          return or__3824__auto____8198
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8203 = coll;
    if(and__3822__auto____8203) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8203
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2431__auto____8204 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8205 = cljs.core._chunked_first[goog.typeOf(x__2431__auto____8204)];
      if(or__3824__auto____8205) {
        return or__3824__auto____8205
      }else {
        var or__3824__auto____8206 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8206) {
          return or__3824__auto____8206
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8211 = coll;
    if(and__3822__auto____8211) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8211
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2431__auto____8212 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8213 = cljs.core._chunked_rest[goog.typeOf(x__2431__auto____8212)];
      if(or__3824__auto____8213) {
        return or__3824__auto____8213
      }else {
        var or__3824__auto____8214 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8214) {
          return or__3824__auto____8214
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8219 = coll;
    if(and__3822__auto____8219) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8219
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2431__auto____8220 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8221 = cljs.core._chunked_next[goog.typeOf(x__2431__auto____8220)];
      if(or__3824__auto____8221) {
        return or__3824__auto____8221
      }else {
        var or__3824__auto____8222 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8222) {
          return or__3824__auto____8222
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8226__8227 = coll;
      if(G__8226__8227) {
        if(function() {
          var or__3824__auto____8228 = G__8226__8227.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8228) {
            return or__3824__auto____8228
          }else {
            return G__8226__8227.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8226__8227.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8226__8227)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8226__8227)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8233__8234 = coll;
      if(G__8233__8234) {
        if(function() {
          var or__3824__auto____8235 = G__8233__8234.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8235) {
            return or__3824__auto____8235
          }else {
            return G__8233__8234.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8233__8234.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8233__8234)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8233__8234)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8236 = cljs.core.seq.call(null, coll);
      if(s__8236 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8236)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8241__8242 = coll;
      if(G__8241__8242) {
        if(function() {
          var or__3824__auto____8243 = G__8241__8242.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8243) {
            return or__3824__auto____8243
          }else {
            return G__8241__8242.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8241__8242.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8241__8242)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8241__8242)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8244 = cljs.core.seq.call(null, coll);
      if(!(s__8244 == null)) {
        return cljs.core._rest.call(null, s__8244)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8248__8249 = coll;
      if(G__8248__8249) {
        if(function() {
          var or__3824__auto____8250 = G__8248__8249.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8250) {
            return or__3824__auto____8250
          }else {
            return G__8248__8249.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8248__8249.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8248__8249)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8248__8249)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8252 = x === y;
    if(or__3824__auto____8252) {
      return or__3824__auto____8252
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8253__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8254 = y;
            var G__8255 = cljs.core.first.call(null, more);
            var G__8256 = cljs.core.next.call(null, more);
            x = G__8254;
            y = G__8255;
            more = G__8256;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8253 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8253__delegate.call(this, x, y, more)
    };
    G__8253.cljs$lang$maxFixedArity = 2;
    G__8253.cljs$lang$applyTo = function(arglist__8257) {
      var x = cljs.core.first(arglist__8257);
      var y = cljs.core.first(cljs.core.next(arglist__8257));
      var more = cljs.core.rest(cljs.core.next(arglist__8257));
      return G__8253__delegate(x, y, more)
    };
    G__8253.cljs$lang$arity$variadic = G__8253__delegate;
    return G__8253
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8258 = null;
  var G__8258__2 = function(o, k) {
    return null
  };
  var G__8258__3 = function(o, k, not_found) {
    return not_found
  };
  G__8258 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8258__2.call(this, o, k);
      case 3:
        return G__8258__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8258
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IPrintWithWriter["null"] = true;
cljs.core._pr_writer["null"] = function(o, writer, _) {
  return cljs.core._write.call(null, writer, "nil")
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8259 = null;
  var G__8259__2 = function(_, f) {
    return f.call(null)
  };
  var G__8259__3 = function(_, f, start) {
    return start
  };
  G__8259 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8259__2.call(this, _, f);
      case 3:
        return G__8259__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8259
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8260 = null;
  var G__8260__2 = function(_, n) {
    return null
  };
  var G__8260__3 = function(_, n, not_found) {
    return not_found
  };
  G__8260 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8260__2.call(this, _, n);
      case 3:
        return G__8260__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8260
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8261 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8261) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8261
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8262 = this;
  return this__8262.val
};
cljs.core.Reduced;
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8275 = cljs.core._count.call(null, cicoll);
    if(cnt__8275 === 0) {
      return f.call(null)
    }else {
      var val__8276 = cljs.core._nth.call(null, cicoll, 0);
      var n__8277 = 1;
      while(true) {
        if(n__8277 < cnt__8275) {
          var nval__8278 = f.call(null, val__8276, cljs.core._nth.call(null, cicoll, n__8277));
          if(cljs.core.reduced_QMARK_.call(null, nval__8278)) {
            return cljs.core.deref.call(null, nval__8278)
          }else {
            var G__8287 = nval__8278;
            var G__8288 = n__8277 + 1;
            val__8276 = G__8287;
            n__8277 = G__8288;
            continue
          }
        }else {
          return val__8276
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8279 = cljs.core._count.call(null, cicoll);
    var val__8280 = val;
    var n__8281 = 0;
    while(true) {
      if(n__8281 < cnt__8279) {
        var nval__8282 = f.call(null, val__8280, cljs.core._nth.call(null, cicoll, n__8281));
        if(cljs.core.reduced_QMARK_.call(null, nval__8282)) {
          return cljs.core.deref.call(null, nval__8282)
        }else {
          var G__8289 = nval__8282;
          var G__8290 = n__8281 + 1;
          val__8280 = G__8289;
          n__8281 = G__8290;
          continue
        }
      }else {
        return val__8280
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8283 = cljs.core._count.call(null, cicoll);
    var val__8284 = val;
    var n__8285 = idx;
    while(true) {
      if(n__8285 < cnt__8283) {
        var nval__8286 = f.call(null, val__8284, cljs.core._nth.call(null, cicoll, n__8285));
        if(cljs.core.reduced_QMARK_.call(null, nval__8286)) {
          return cljs.core.deref.call(null, nval__8286)
        }else {
          var G__8291 = nval__8286;
          var G__8292 = n__8285 + 1;
          val__8284 = G__8291;
          n__8285 = G__8292;
          continue
        }
      }else {
        return val__8284
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8305 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8306 = arr[0];
      var n__8307 = 1;
      while(true) {
        if(n__8307 < cnt__8305) {
          var nval__8308 = f.call(null, val__8306, arr[n__8307]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8308)) {
            return cljs.core.deref.call(null, nval__8308)
          }else {
            var G__8317 = nval__8308;
            var G__8318 = n__8307 + 1;
            val__8306 = G__8317;
            n__8307 = G__8318;
            continue
          }
        }else {
          return val__8306
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8309 = arr.length;
    var val__8310 = val;
    var n__8311 = 0;
    while(true) {
      if(n__8311 < cnt__8309) {
        var nval__8312 = f.call(null, val__8310, arr[n__8311]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8312)) {
          return cljs.core.deref.call(null, nval__8312)
        }else {
          var G__8319 = nval__8312;
          var G__8320 = n__8311 + 1;
          val__8310 = G__8319;
          n__8311 = G__8320;
          continue
        }
      }else {
        return val__8310
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8313 = arr.length;
    var val__8314 = val;
    var n__8315 = idx;
    while(true) {
      if(n__8315 < cnt__8313) {
        var nval__8316 = f.call(null, val__8314, arr[n__8315]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8316)) {
          return cljs.core.deref.call(null, nval__8316)
        }else {
          var G__8321 = nval__8316;
          var G__8322 = n__8315 + 1;
          val__8314 = G__8321;
          n__8315 = G__8322;
          continue
        }
      }else {
        return val__8314
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8326__8327 = x;
  if(G__8326__8327) {
    if(function() {
      var or__3824__auto____8328 = G__8326__8327.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8328) {
        return or__3824__auto____8328
      }else {
        return G__8326__8327.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8326__8327.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8326__8327)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8326__8327)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8332__8333 = x;
  if(G__8332__8333) {
    if(function() {
      var or__3824__auto____8334 = G__8332__8333.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8334) {
        return or__3824__auto____8334
      }else {
        return G__8332__8333.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8332__8333.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8332__8333)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8332__8333)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8335 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8336 = this;
  if(this__8336.i + 1 < this__8336.a.length) {
    return new cljs.core.IndexedSeq(this__8336.a, this__8336.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8337 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8338 = this;
  var c__8339 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8339 > 0) {
    return new cljs.core.RSeq(coll, c__8339 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8340 = this;
  var this__8341 = this;
  return cljs.core.pr_str.call(null, this__8341)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8342 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8342.a)) {
    return cljs.core.ci_reduce.call(null, this__8342.a, f, this__8342.a[this__8342.i], this__8342.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8342.a[this__8342.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8343 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8343.a)) {
    return cljs.core.ci_reduce.call(null, this__8343.a, f, start, this__8343.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8344 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8345 = this;
  return this__8345.a.length - this__8345.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8346 = this;
  return this__8346.a[this__8346.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8347 = this;
  if(this__8347.i + 1 < this__8347.a.length) {
    return new cljs.core.IndexedSeq(this__8347.a, this__8347.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8348 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8349 = this;
  var i__8350 = n + this__8349.i;
  if(i__8350 < this__8349.a.length) {
    return this__8349.a[i__8350]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8351 = this;
  var i__8352 = n + this__8351.i;
  if(i__8352 < this__8351.a.length) {
    return this__8351.a[i__8352]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8353 = this;
  return cljs.core.List.EMPTY
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8354 = null;
  var G__8354__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8354__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8354 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8354__2.call(this, array, f);
      case 3:
        return G__8354__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8354
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8355 = null;
  var G__8355__2 = function(array, k) {
    return array[k]
  };
  var G__8355__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8355 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8355__2.call(this, array, k);
      case 3:
        return G__8355__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8355
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8356 = null;
  var G__8356__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8356__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8356 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8356__2.call(this, array, n);
      case 3:
        return G__8356__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8356
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8357 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8358 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8359 = this;
  var this__8360 = this;
  return cljs.core.pr_str.call(null, this__8360)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8361 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8362 = this;
  return this__8362.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8363 = this;
  return cljs.core._nth.call(null, this__8363.ci, this__8363.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8364 = this;
  if(this__8364.i > 0) {
    return new cljs.core.RSeq(this__8364.ci, this__8364.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8365 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8366 = this;
  return new cljs.core.RSeq(this__8366.ci, this__8366.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8367 = this;
  return this__8367.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8368 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8368.meta)
};
cljs.core.RSeq;
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8370 = cljs.core.next.call(null, s);
    if(!(sn__8370 == null)) {
      var G__8371 = sn__8370;
      s = G__8371;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8372__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8373 = conj.call(null, coll, x);
          var G__8374 = cljs.core.first.call(null, xs);
          var G__8375 = cljs.core.next.call(null, xs);
          coll = G__8373;
          x = G__8374;
          xs = G__8375;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8372 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8372__delegate.call(this, coll, x, xs)
    };
    G__8372.cljs$lang$maxFixedArity = 2;
    G__8372.cljs$lang$applyTo = function(arglist__8376) {
      var coll = cljs.core.first(arglist__8376);
      var x = cljs.core.first(cljs.core.next(arglist__8376));
      var xs = cljs.core.rest(cljs.core.next(arglist__8376));
      return G__8372__delegate(coll, x, xs)
    };
    G__8372.cljs$lang$arity$variadic = G__8372__delegate;
    return G__8372
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8379 = cljs.core.seq.call(null, coll);
  var acc__8380 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8379)) {
      return acc__8380 + cljs.core._count.call(null, s__8379)
    }else {
      var G__8381 = cljs.core.next.call(null, s__8379);
      var G__8382 = acc__8380 + 1;
      s__8379 = G__8381;
      acc__8380 = G__8382;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__8383 = cljs.core.next.call(null, coll);
              var G__8384 = n - 1;
              coll = G__8383;
              n = G__8384;
              continue
            }else {
              if("\ufdd0'else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__8385 = cljs.core.next.call(null, coll);
              var G__8386 = n - 1;
              var G__8387 = not_found;
              coll = G__8385;
              n = G__8386;
              not_found = G__8387;
              continue
            }else {
              if("\ufdd0'else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8394__8395 = coll;
        if(G__8394__8395) {
          if(function() {
            var or__3824__auto____8396 = G__8394__8395.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8396) {
              return or__3824__auto____8396
            }else {
              return G__8394__8395.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8394__8395.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8394__8395)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8394__8395)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8397__8398 = coll;
        if(G__8397__8398) {
          if(function() {
            var or__3824__auto____8399 = G__8397__8398.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8399) {
              return or__3824__auto____8399
            }else {
              return G__8397__8398.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8397__8398.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8397__8398)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8397__8398)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8402__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8401 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8403 = ret__8401;
          var G__8404 = cljs.core.first.call(null, kvs);
          var G__8405 = cljs.core.second.call(null, kvs);
          var G__8406 = cljs.core.nnext.call(null, kvs);
          coll = G__8403;
          k = G__8404;
          v = G__8405;
          kvs = G__8406;
          continue
        }else {
          return ret__8401
        }
        break
      }
    };
    var G__8402 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8402__delegate.call(this, coll, k, v, kvs)
    };
    G__8402.cljs$lang$maxFixedArity = 3;
    G__8402.cljs$lang$applyTo = function(arglist__8407) {
      var coll = cljs.core.first(arglist__8407);
      var k = cljs.core.first(cljs.core.next(arglist__8407));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8407)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8407)));
      return G__8402__delegate(coll, k, v, kvs)
    };
    G__8402.cljs$lang$arity$variadic = G__8402__delegate;
    return G__8402
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8410__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8409 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8411 = ret__8409;
          var G__8412 = cljs.core.first.call(null, ks);
          var G__8413 = cljs.core.next.call(null, ks);
          coll = G__8411;
          k = G__8412;
          ks = G__8413;
          continue
        }else {
          return ret__8409
        }
        break
      }
    };
    var G__8410 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8410__delegate.call(this, coll, k, ks)
    };
    G__8410.cljs$lang$maxFixedArity = 2;
    G__8410.cljs$lang$applyTo = function(arglist__8414) {
      var coll = cljs.core.first(arglist__8414);
      var k = cljs.core.first(cljs.core.next(arglist__8414));
      var ks = cljs.core.rest(cljs.core.next(arglist__8414));
      return G__8410__delegate(coll, k, ks)
    };
    G__8410.cljs$lang$arity$variadic = G__8410__delegate;
    return G__8410
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8418__8419 = o;
    if(G__8418__8419) {
      if(function() {
        var or__3824__auto____8420 = G__8418__8419.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8420) {
          return or__3824__auto____8420
        }else {
          return G__8418__8419.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8418__8419.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8418__8419)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8418__8419)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8423__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8422 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8424 = ret__8422;
          var G__8425 = cljs.core.first.call(null, ks);
          var G__8426 = cljs.core.next.call(null, ks);
          coll = G__8424;
          k = G__8425;
          ks = G__8426;
          continue
        }else {
          return ret__8422
        }
        break
      }
    };
    var G__8423 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8423__delegate.call(this, coll, k, ks)
    };
    G__8423.cljs$lang$maxFixedArity = 2;
    G__8423.cljs$lang$applyTo = function(arglist__8427) {
      var coll = cljs.core.first(arglist__8427);
      var k = cljs.core.first(cljs.core.next(arglist__8427));
      var ks = cljs.core.rest(cljs.core.next(arglist__8427));
      return G__8423__delegate(coll, k, ks)
    };
    G__8423.cljs$lang$arity$variadic = G__8423__delegate;
    return G__8423
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8429 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8429;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8429
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8431 = cljs.core.string_hash_cache[k];
  if(!(h__8431 == null)) {
    return h__8431
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8433 = goog.isString(o);
      if(and__3822__auto____8433) {
        return check_cache
      }else {
        return and__3822__auto____8433
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8437__8438 = x;
    if(G__8437__8438) {
      if(function() {
        var or__3824__auto____8439 = G__8437__8438.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8439) {
          return or__3824__auto____8439
        }else {
          return G__8437__8438.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8437__8438.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8437__8438)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8437__8438)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8443__8444 = x;
    if(G__8443__8444) {
      if(function() {
        var or__3824__auto____8445 = G__8443__8444.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8445) {
          return or__3824__auto____8445
        }else {
          return G__8443__8444.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8443__8444.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8443__8444)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8443__8444)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8449__8450 = x;
  if(G__8449__8450) {
    if(function() {
      var or__3824__auto____8451 = G__8449__8450.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8451) {
        return or__3824__auto____8451
      }else {
        return G__8449__8450.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8449__8450.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8449__8450)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8449__8450)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8455__8456 = x;
  if(G__8455__8456) {
    if(function() {
      var or__3824__auto____8457 = G__8455__8456.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8457) {
        return or__3824__auto____8457
      }else {
        return G__8455__8456.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8455__8456.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8455__8456)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8455__8456)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8461__8462 = x;
  if(G__8461__8462) {
    if(function() {
      var or__3824__auto____8463 = G__8461__8462.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8463) {
        return or__3824__auto____8463
      }else {
        return G__8461__8462.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8461__8462.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8461__8462)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8461__8462)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8467__8468 = x;
    if(G__8467__8468) {
      if(function() {
        var or__3824__auto____8469 = G__8467__8468.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8469) {
          return or__3824__auto____8469
        }else {
          return G__8467__8468.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8467__8468.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8467__8468)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8467__8468)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8473__8474 = x;
  if(G__8473__8474) {
    if(function() {
      var or__3824__auto____8475 = G__8473__8474.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8475) {
        return or__3824__auto____8475
      }else {
        return G__8473__8474.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8473__8474.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8473__8474)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8473__8474)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8479__8480 = x;
  if(G__8479__8480) {
    if(function() {
      var or__3824__auto____8481 = G__8479__8480.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3824__auto____8481) {
        return or__3824__auto____8481
      }else {
        return G__8479__8480.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      if(!G__8479__8480.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8479__8480)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8479__8480)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8482__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8482 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8482__delegate.call(this, keyvals)
    };
    G__8482.cljs$lang$maxFixedArity = 0;
    G__8482.cljs$lang$applyTo = function(arglist__8483) {
      var keyvals = cljs.core.seq(arglist__8483);
      return G__8482__delegate(keyvals)
    };
    G__8482.cljs$lang$arity$variadic = G__8482__delegate;
    return G__8482
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8485 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8485.push(key)
  });
  return keys__8485
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8489 = i;
  var j__8490 = j;
  var len__8491 = len;
  while(true) {
    if(len__8491 === 0) {
      return to
    }else {
      to[j__8490] = from[i__8489];
      var G__8492 = i__8489 + 1;
      var G__8493 = j__8490 + 1;
      var G__8494 = len__8491 - 1;
      i__8489 = G__8492;
      j__8490 = G__8493;
      len__8491 = G__8494;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8498 = i + (len - 1);
  var j__8499 = j + (len - 1);
  var len__8500 = len;
  while(true) {
    if(len__8500 === 0) {
      return to
    }else {
      to[j__8499] = from[i__8498];
      var G__8501 = i__8498 - 1;
      var G__8502 = j__8499 - 1;
      var G__8503 = len__8500 - 1;
      i__8498 = G__8501;
      j__8499 = G__8502;
      len__8500 = G__8503;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8507__8508 = s;
    if(G__8507__8508) {
      if(function() {
        var or__3824__auto____8509 = G__8507__8508.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8509) {
          return or__3824__auto____8509
        }else {
          return G__8507__8508.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8507__8508.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8507__8508)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8507__8508)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8513__8514 = s;
  if(G__8513__8514) {
    if(function() {
      var or__3824__auto____8515 = G__8513__8514.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8515) {
        return or__3824__auto____8515
      }else {
        return G__8513__8514.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8513__8514.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8513__8514)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8513__8514)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8518 = goog.isString(x);
  if(and__3822__auto____8518) {
    return!function() {
      var or__3824__auto____8519 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8519) {
        return or__3824__auto____8519
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8518
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8521 = goog.isString(x);
  if(and__3822__auto____8521) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8521
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8523 = goog.isString(x);
  if(and__3822__auto____8523) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8523
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8528 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8528) {
    return or__3824__auto____8528
  }else {
    var G__8529__8530 = f;
    if(G__8529__8530) {
      if(function() {
        var or__3824__auto____8531 = G__8529__8530.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8531) {
          return or__3824__auto____8531
        }else {
          return G__8529__8530.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8529__8530.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8529__8530)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8529__8530)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8535 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8535) {
    var and__3822__auto____8536 = !isNaN(n);
    if(and__3822__auto____8536) {
      var and__3822__auto____8537 = !(n === Infinity);
      if(and__3822__auto____8537) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3822__auto____8537
      }
    }else {
      return and__3822__auto____8536
    }
  }else {
    return and__3822__auto____8535
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3822__auto____8540 = !(coll == null);
    if(and__3822__auto____8540) {
      var and__3822__auto____8541 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8541) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8541
      }
    }else {
      return and__3822__auto____8540
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8550__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8546 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8547 = more;
        while(true) {
          var x__8548 = cljs.core.first.call(null, xs__8547);
          var etc__8549 = cljs.core.next.call(null, xs__8547);
          if(cljs.core.truth_(xs__8547)) {
            if(cljs.core.contains_QMARK_.call(null, s__8546, x__8548)) {
              return false
            }else {
              var G__8551 = cljs.core.conj.call(null, s__8546, x__8548);
              var G__8552 = etc__8549;
              s__8546 = G__8551;
              xs__8547 = G__8552;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8550 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8550__delegate.call(this, x, y, more)
    };
    G__8550.cljs$lang$maxFixedArity = 2;
    G__8550.cljs$lang$applyTo = function(arglist__8553) {
      var x = cljs.core.first(arglist__8553);
      var y = cljs.core.first(cljs.core.next(arglist__8553));
      var more = cljs.core.rest(cljs.core.next(arglist__8553));
      return G__8550__delegate(x, y, more)
    };
    G__8550.cljs$lang$arity$variadic = G__8550__delegate;
    return G__8550
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8557__8558 = x;
            if(G__8557__8558) {
              if(function() {
                var or__3824__auto____8559 = G__8557__8558.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3824__auto____8559) {
                  return or__3824__auto____8559
                }else {
                  return G__8557__8558.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                if(!G__8557__8558.cljs$lang$protocol_mask$partition1$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8557__8558)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8557__8558)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8564 = cljs.core.count.call(null, xs);
    var yl__8565 = cljs.core.count.call(null, ys);
    if(xl__8564 < yl__8565) {
      return-1
    }else {
      if(xl__8564 > yl__8565) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8564, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8566 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8567 = d__8566 === 0;
        if(and__3822__auto____8567) {
          return n + 1 < len
        }else {
          return and__3822__auto____8567
        }
      }()) {
        var G__8568 = xs;
        var G__8569 = ys;
        var G__8570 = len;
        var G__8571 = n + 1;
        xs = G__8568;
        ys = G__8569;
        len = G__8570;
        n = G__8571;
        continue
      }else {
        return d__8566
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8573 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8573)) {
        return r__8573
      }else {
        if(cljs.core.truth_(r__8573)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8575 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8575, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8575)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8581 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8581) {
      var s__8582 = temp__3971__auto____8581;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8582), cljs.core.next.call(null, s__8582))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8583 = val;
    var coll__8584 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8584) {
        var nval__8585 = f.call(null, val__8583, cljs.core.first.call(null, coll__8584));
        if(cljs.core.reduced_QMARK_.call(null, nval__8585)) {
          return cljs.core.deref.call(null, nval__8585)
        }else {
          var G__8586 = nval__8585;
          var G__8587 = cljs.core.next.call(null, coll__8584);
          val__8583 = G__8586;
          coll__8584 = G__8587;
          continue
        }
      }else {
        return val__8583
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8589 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8589);
  return cljs.core.vec.call(null, a__8589)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8596__8597 = coll;
      if(G__8596__8597) {
        if(function() {
          var or__3824__auto____8598 = G__8596__8597.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8598) {
            return or__3824__auto____8598
          }else {
            return G__8596__8597.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8596__8597.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8596__8597)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8596__8597)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8599__8600 = coll;
      if(G__8599__8600) {
        if(function() {
          var or__3824__auto____8601 = G__8599__8600.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8601) {
            return or__3824__auto____8601
          }else {
            return G__8599__8600.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8599__8600.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8599__8600)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8599__8600)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8602__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8602 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8602__delegate.call(this, x, y, more)
    };
    G__8602.cljs$lang$maxFixedArity = 2;
    G__8602.cljs$lang$applyTo = function(arglist__8603) {
      var x = cljs.core.first(arglist__8603);
      var y = cljs.core.first(cljs.core.next(arglist__8603));
      var more = cljs.core.rest(cljs.core.next(arglist__8603));
      return G__8602__delegate(x, y, more)
    };
    G__8602.cljs$lang$arity$variadic = G__8602__delegate;
    return G__8602
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8604__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8604 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8604__delegate.call(this, x, y, more)
    };
    G__8604.cljs$lang$maxFixedArity = 2;
    G__8604.cljs$lang$applyTo = function(arglist__8605) {
      var x = cljs.core.first(arglist__8605);
      var y = cljs.core.first(cljs.core.next(arglist__8605));
      var more = cljs.core.rest(cljs.core.next(arglist__8605));
      return G__8604__delegate(x, y, more)
    };
    G__8604.cljs$lang$arity$variadic = G__8604__delegate;
    return G__8604
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8606__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8606 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8606__delegate.call(this, x, y, more)
    };
    G__8606.cljs$lang$maxFixedArity = 2;
    G__8606.cljs$lang$applyTo = function(arglist__8607) {
      var x = cljs.core.first(arglist__8607);
      var y = cljs.core.first(cljs.core.next(arglist__8607));
      var more = cljs.core.rest(cljs.core.next(arglist__8607));
      return G__8606__delegate(x, y, more)
    };
    G__8606.cljs$lang$arity$variadic = G__8606__delegate;
    return G__8606
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8608__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8608 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8608__delegate.call(this, x, y, more)
    };
    G__8608.cljs$lang$maxFixedArity = 2;
    G__8608.cljs$lang$applyTo = function(arglist__8609) {
      var x = cljs.core.first(arglist__8609);
      var y = cljs.core.first(cljs.core.next(arglist__8609));
      var more = cljs.core.rest(cljs.core.next(arglist__8609));
      return G__8608__delegate(x, y, more)
    };
    G__8608.cljs$lang$arity$variadic = G__8608__delegate;
    return G__8608
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8610__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8611 = y;
            var G__8612 = cljs.core.first.call(null, more);
            var G__8613 = cljs.core.next.call(null, more);
            x = G__8611;
            y = G__8612;
            more = G__8613;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8610 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8610__delegate.call(this, x, y, more)
    };
    G__8610.cljs$lang$maxFixedArity = 2;
    G__8610.cljs$lang$applyTo = function(arglist__8614) {
      var x = cljs.core.first(arglist__8614);
      var y = cljs.core.first(cljs.core.next(arglist__8614));
      var more = cljs.core.rest(cljs.core.next(arglist__8614));
      return G__8610__delegate(x, y, more)
    };
    G__8610.cljs$lang$arity$variadic = G__8610__delegate;
    return G__8610
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8615__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8616 = y;
            var G__8617 = cljs.core.first.call(null, more);
            var G__8618 = cljs.core.next.call(null, more);
            x = G__8616;
            y = G__8617;
            more = G__8618;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8615 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8615__delegate.call(this, x, y, more)
    };
    G__8615.cljs$lang$maxFixedArity = 2;
    G__8615.cljs$lang$applyTo = function(arglist__8619) {
      var x = cljs.core.first(arglist__8619);
      var y = cljs.core.first(cljs.core.next(arglist__8619));
      var more = cljs.core.rest(cljs.core.next(arglist__8619));
      return G__8615__delegate(x, y, more)
    };
    G__8615.cljs$lang$arity$variadic = G__8615__delegate;
    return G__8615
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8620__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8621 = y;
            var G__8622 = cljs.core.first.call(null, more);
            var G__8623 = cljs.core.next.call(null, more);
            x = G__8621;
            y = G__8622;
            more = G__8623;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8620 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8620__delegate.call(this, x, y, more)
    };
    G__8620.cljs$lang$maxFixedArity = 2;
    G__8620.cljs$lang$applyTo = function(arglist__8624) {
      var x = cljs.core.first(arglist__8624);
      var y = cljs.core.first(cljs.core.next(arglist__8624));
      var more = cljs.core.rest(cljs.core.next(arglist__8624));
      return G__8620__delegate(x, y, more)
    };
    G__8620.cljs$lang$arity$variadic = G__8620__delegate;
    return G__8620
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8625__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8626 = y;
            var G__8627 = cljs.core.first.call(null, more);
            var G__8628 = cljs.core.next.call(null, more);
            x = G__8626;
            y = G__8627;
            more = G__8628;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8625 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8625__delegate.call(this, x, y, more)
    };
    G__8625.cljs$lang$maxFixedArity = 2;
    G__8625.cljs$lang$applyTo = function(arglist__8629) {
      var x = cljs.core.first(arglist__8629);
      var y = cljs.core.first(cljs.core.next(arglist__8629));
      var more = cljs.core.rest(cljs.core.next(arglist__8629));
      return G__8625__delegate(x, y, more)
    };
    G__8625.cljs$lang$arity$variadic = G__8625__delegate;
    return G__8625
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8630__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8630 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8630__delegate.call(this, x, y, more)
    };
    G__8630.cljs$lang$maxFixedArity = 2;
    G__8630.cljs$lang$applyTo = function(arglist__8631) {
      var x = cljs.core.first(arglist__8631);
      var y = cljs.core.first(cljs.core.next(arglist__8631));
      var more = cljs.core.rest(cljs.core.next(arglist__8631));
      return G__8630__delegate(x, y, more)
    };
    G__8630.cljs$lang$arity$variadic = G__8630__delegate;
    return G__8630
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8632__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8632 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8632__delegate.call(this, x, y, more)
    };
    G__8632.cljs$lang$maxFixedArity = 2;
    G__8632.cljs$lang$applyTo = function(arglist__8633) {
      var x = cljs.core.first(arglist__8633);
      var y = cljs.core.first(cljs.core.next(arglist__8633));
      var more = cljs.core.rest(cljs.core.next(arglist__8633));
      return G__8632__delegate(x, y, more)
    };
    G__8632.cljs$lang$arity$variadic = G__8632__delegate;
    return G__8632
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8635 = n % d;
  return cljs.core.fix.call(null, (n - rem__8635) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8637 = cljs.core.quot.call(null, n, d);
  return n - d * q__8637
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8640 = v - (v >> 1 & 1431655765);
  var v__8641 = (v__8640 & 858993459) + (v__8640 >> 2 & 858993459);
  return(v__8641 + (v__8641 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8642__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8643 = y;
            var G__8644 = cljs.core.first.call(null, more);
            var G__8645 = cljs.core.next.call(null, more);
            x = G__8643;
            y = G__8644;
            more = G__8645;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8642 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8642__delegate.call(this, x, y, more)
    };
    G__8642.cljs$lang$maxFixedArity = 2;
    G__8642.cljs$lang$applyTo = function(arglist__8646) {
      var x = cljs.core.first(arglist__8646);
      var y = cljs.core.first(cljs.core.next(arglist__8646));
      var more = cljs.core.rest(cljs.core.next(arglist__8646));
      return G__8642__delegate(x, y, more)
    };
    G__8642.cljs$lang$arity$variadic = G__8642__delegate;
    return G__8642
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8650 = n;
  var xs__8651 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8652 = xs__8651;
      if(and__3822__auto____8652) {
        return n__8650 > 0
      }else {
        return and__3822__auto____8652
      }
    }())) {
      var G__8653 = n__8650 - 1;
      var G__8654 = cljs.core.next.call(null, xs__8651);
      n__8650 = G__8653;
      xs__8651 = G__8654;
      continue
    }else {
      return xs__8651
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8655__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8656 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8657 = cljs.core.next.call(null, more);
            sb = G__8656;
            more = G__8657;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8655 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8655__delegate.call(this, x, ys)
    };
    G__8655.cljs$lang$maxFixedArity = 1;
    G__8655.cljs$lang$applyTo = function(arglist__8658) {
      var x = cljs.core.first(arglist__8658);
      var ys = cljs.core.rest(arglist__8658);
      return G__8655__delegate(x, ys)
    };
    G__8655.cljs$lang$arity$variadic = G__8655__delegate;
    return G__8655
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8659__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8660 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8661 = cljs.core.next.call(null, more);
            sb = G__8660;
            more = G__8661;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8659 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8659__delegate.call(this, x, ys)
    };
    G__8659.cljs$lang$maxFixedArity = 1;
    G__8659.cljs$lang$applyTo = function(arglist__8662) {
      var x = cljs.core.first(arglist__8662);
      var ys = cljs.core.rest(arglist__8662);
      return G__8659__delegate(x, ys)
    };
    G__8659.cljs$lang$arity$variadic = G__8659__delegate;
    return G__8659
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__8666 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3824__auto____8665 = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3824__auto____8665) {
          return or__3824__auto____8665
        }else {
          return cljs.core.symbol_QMARK_.call(null, x)
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__8666)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8667) {
    var fmt = cljs.core.first(arglist__8667);
    var args = cljs.core.rest(arglist__8667);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8670 = cljs.core.seq.call(null, x);
    var ys__8671 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8670 == null) {
        return ys__8671 == null
      }else {
        if(ys__8671 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8670), cljs.core.first.call(null, ys__8671))) {
            var G__8672 = cljs.core.next.call(null, xs__8670);
            var G__8673 = cljs.core.next.call(null, ys__8671);
            xs__8670 = G__8672;
            ys__8671 = G__8673;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8674_SHARP_, p2__8675_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8674_SHARP_, cljs.core.hash.call(null, p2__8675_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8679 = 0;
  var s__8680 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8680) {
      var e__8681 = cljs.core.first.call(null, s__8680);
      var G__8682 = (h__8679 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8681)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8681)))) % 4503599627370496;
      var G__8683 = cljs.core.next.call(null, s__8680);
      h__8679 = G__8682;
      s__8680 = G__8683;
      continue
    }else {
      return h__8679
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8687 = 0;
  var s__8688 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8688) {
      var e__8689 = cljs.core.first.call(null, s__8688);
      var G__8690 = (h__8687 + cljs.core.hash.call(null, e__8689)) % 4503599627370496;
      var G__8691 = cljs.core.next.call(null, s__8688);
      h__8687 = G__8690;
      s__8688 = G__8691;
      continue
    }else {
      return h__8687
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8699__8700 = cljs.core.seq.call(null, fn_map);
  while(true) {
    if(G__8699__8700) {
      var vec__8701__8702 = cljs.core.first.call(null, G__8699__8700);
      var key_name__8703 = cljs.core.nth.call(null, vec__8701__8702, 0, null);
      var f__8704 = cljs.core.nth.call(null, vec__8701__8702, 1, null);
      var str_name__8705 = cljs.core.name.call(null, key_name__8703);
      obj[str_name__8705] = f__8704;
      var G__8706 = cljs.core.next.call(null, G__8699__8700);
      G__8699__8700 = G__8706;
      continue
    }else {
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8707 = this;
  var h__2247__auto____8708 = this__8707.__hash;
  if(!(h__2247__auto____8708 == null)) {
    return h__2247__auto____8708
  }else {
    var h__2247__auto____8709 = cljs.core.hash_coll.call(null, coll);
    this__8707.__hash = h__2247__auto____8709;
    return h__2247__auto____8709
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8710 = this;
  if(this__8710.count === 1) {
    return null
  }else {
    return this__8710.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8711 = this;
  return new cljs.core.List(this__8711.meta, o, coll, this__8711.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8712 = this;
  var this__8713 = this;
  return cljs.core.pr_str.call(null, this__8713)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8714 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8715 = this;
  return this__8715.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8716 = this;
  return this__8716.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8717 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8718 = this;
  return this__8718.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8719 = this;
  if(this__8719.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8719.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8720 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8721 = this;
  return new cljs.core.List(meta, this__8721.first, this__8721.rest, this__8721.count, this__8721.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8722 = this;
  return this__8722.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8723 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8724 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8725 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8726 = this;
  return new cljs.core.List(this__8726.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8727 = this;
  var this__8728 = this;
  return cljs.core.pr_str.call(null, this__8728)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8729 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8730 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8731 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8732 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8733 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8734 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8735 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8736 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8737 = this;
  return this__8737.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8738 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8742__8743 = coll;
  if(G__8742__8743) {
    if(function() {
      var or__3824__auto____8744 = G__8742__8743.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8744) {
        return or__3824__auto____8744
      }else {
        return G__8742__8743.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8742__8743.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8742__8743)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8742__8743)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8745__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8745 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8745__delegate.call(this, x, y, z, items)
    };
    G__8745.cljs$lang$maxFixedArity = 3;
    G__8745.cljs$lang$applyTo = function(arglist__8746) {
      var x = cljs.core.first(arglist__8746);
      var y = cljs.core.first(cljs.core.next(arglist__8746));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8746)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8746)));
      return G__8745__delegate(x, y, z, items)
    };
    G__8745.cljs$lang$arity$variadic = G__8745__delegate;
    return G__8745
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8747 = this;
  var h__2247__auto____8748 = this__8747.__hash;
  if(!(h__2247__auto____8748 == null)) {
    return h__2247__auto____8748
  }else {
    var h__2247__auto____8749 = cljs.core.hash_coll.call(null, coll);
    this__8747.__hash = h__2247__auto____8749;
    return h__2247__auto____8749
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8750 = this;
  if(this__8750.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8750.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8751 = this;
  return new cljs.core.Cons(null, o, coll, this__8751.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8752 = this;
  var this__8753 = this;
  return cljs.core.pr_str.call(null, this__8753)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8754 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8755 = this;
  return this__8755.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8756 = this;
  if(this__8756.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8756.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8757 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8758 = this;
  return new cljs.core.Cons(meta, this__8758.first, this__8758.rest, this__8758.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8759 = this;
  return this__8759.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8760 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8760.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8765 = coll == null;
    if(or__3824__auto____8765) {
      return or__3824__auto____8765
    }else {
      var G__8766__8767 = coll;
      if(G__8766__8767) {
        if(function() {
          var or__3824__auto____8768 = G__8766__8767.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8768) {
            return or__3824__auto____8768
          }else {
            return G__8766__8767.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8766__8767.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8766__8767)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8766__8767)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8772__8773 = x;
  if(G__8772__8773) {
    if(function() {
      var or__3824__auto____8774 = G__8772__8773.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8774) {
        return or__3824__auto____8774
      }else {
        return G__8772__8773.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8772__8773.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8772__8773)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8772__8773)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8775 = null;
  var G__8775__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8775__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8775 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8775__2.call(this, string, f);
      case 3:
        return G__8775__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8775
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8776 = null;
  var G__8776__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8776__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8776 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8776__2.call(this, string, k);
      case 3:
        return G__8776__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8776
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8777 = null;
  var G__8777__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8777__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8777 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8777__2.call(this, string, n);
      case 3:
        return G__8777__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8777
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8789 = null;
  var G__8789__2 = function(this_sym8780, coll) {
    var this__8782 = this;
    var this_sym8780__8783 = this;
    var ___8784 = this_sym8780__8783;
    if(coll == null) {
      return null
    }else {
      var strobj__8785 = coll.strobj;
      if(strobj__8785 == null) {
        return cljs.core._lookup.call(null, coll, this__8782.k, null)
      }else {
        return strobj__8785[this__8782.k]
      }
    }
  };
  var G__8789__3 = function(this_sym8781, coll, not_found) {
    var this__8782 = this;
    var this_sym8781__8786 = this;
    var ___8787 = this_sym8781__8786;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8782.k, not_found)
    }
  };
  G__8789 = function(this_sym8781, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8789__2.call(this, this_sym8781, coll);
      case 3:
        return G__8789__3.call(this, this_sym8781, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8789
}();
cljs.core.Keyword.prototype.apply = function(this_sym8778, args8779) {
  var this__8788 = this;
  return this_sym8778.call.apply(this_sym8778, [this_sym8778].concat(args8779.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8798 = null;
  var G__8798__2 = function(this_sym8792, coll) {
    var this_sym8792__8794 = this;
    var this__8795 = this_sym8792__8794;
    return cljs.core._lookup.call(null, coll, this__8795.toString(), null)
  };
  var G__8798__3 = function(this_sym8793, coll, not_found) {
    var this_sym8793__8796 = this;
    var this__8797 = this_sym8793__8796;
    return cljs.core._lookup.call(null, coll, this__8797.toString(), not_found)
  };
  G__8798 = function(this_sym8793, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8798__2.call(this, this_sym8793, coll);
      case 3:
        return G__8798__3.call(this, this_sym8793, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8798
}();
String.prototype.apply = function(this_sym8790, args8791) {
  return this_sym8790.call.apply(this_sym8790, [this_sym8790].concat(args8791.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8800 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8800
  }else {
    lazy_seq.x = x__8800.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8801 = this;
  var h__2247__auto____8802 = this__8801.__hash;
  if(!(h__2247__auto____8802 == null)) {
    return h__2247__auto____8802
  }else {
    var h__2247__auto____8803 = cljs.core.hash_coll.call(null, coll);
    this__8801.__hash = h__2247__auto____8803;
    return h__2247__auto____8803
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8804 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8805 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8806 = this;
  var this__8807 = this;
  return cljs.core.pr_str.call(null, this__8807)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8808 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8809 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8810 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8811 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8812 = this;
  return new cljs.core.LazySeq(meta, this__8812.realized, this__8812.x, this__8812.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8813 = this;
  return this__8813.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8814 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8814.meta)
};
cljs.core.LazySeq;
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8815 = this;
  return this__8815.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8816 = this;
  var ___8817 = this;
  this__8816.buf[this__8816.end] = o;
  return this__8816.end = this__8816.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8818 = this;
  var ___8819 = this;
  var ret__8820 = new cljs.core.ArrayChunk(this__8818.buf, 0, this__8818.end);
  this__8818.buf = null;
  return ret__8820
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8821 = this;
  return cljs.core.array_reduce.call(null, this__8821.arr, f, this__8821.arr[this__8821.off], this__8821.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8822 = this;
  return cljs.core.array_reduce.call(null, this__8822.arr, f, start, this__8822.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8823 = this;
  if(this__8823.off === this__8823.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8823.arr, this__8823.off + 1, this__8823.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8824 = this;
  return this__8824.arr[this__8824.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8825 = this;
  if(function() {
    var and__3822__auto____8826 = i >= 0;
    if(and__3822__auto____8826) {
      return i < this__8825.end - this__8825.off
    }else {
      return and__3822__auto____8826
    }
  }()) {
    return this__8825.arr[this__8825.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8827 = this;
  return this__8827.end - this__8827.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8828 = this;
  var h__2247__auto____8829 = this__8828.__hash;
  if(!(h__2247__auto____8829 == null)) {
    return h__2247__auto____8829
  }else {
    var h__2247__auto____8830 = cljs.core.hash_coll.call(null, coll);
    this__8828.__hash = h__2247__auto____8830;
    return h__2247__auto____8830
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8831 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8832 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8833 = this;
  return cljs.core._nth.call(null, this__8833.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8834 = this;
  if(cljs.core._count.call(null, this__8834.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8834.chunk), this__8834.more, this__8834.meta, null)
  }else {
    if(this__8834.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8834.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8835 = this;
  if(this__8835.more == null) {
    return null
  }else {
    return this__8835.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8836 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8837 = this;
  return new cljs.core.ChunkedCons(this__8837.chunk, this__8837.more, m, this__8837.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8838 = this;
  return this__8838.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8839 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8839.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8840 = this;
  return this__8840.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8841 = this;
  if(this__8841.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8841.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8845__8846 = s;
    if(G__8845__8846) {
      if(function() {
        var or__3824__auto____8847 = G__8845__8846.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3824__auto____8847) {
          return or__3824__auto____8847
        }else {
          return G__8845__8846.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        if(!G__8845__8846.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8845__8846)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8845__8846)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8850 = [];
  var s__8851 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8851)) {
      ary__8850.push(cljs.core.first.call(null, s__8851));
      var G__8852 = cljs.core.next.call(null, s__8851);
      s__8851 = G__8852;
      continue
    }else {
      return ary__8850
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8856 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8857 = 0;
  var xs__8858 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8858) {
      ret__8856[i__8857] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8858));
      var G__8859 = i__8857 + 1;
      var G__8860 = cljs.core.next.call(null, xs__8858);
      i__8857 = G__8859;
      xs__8858 = G__8860;
      continue
    }else {
    }
    break
  }
  return ret__8856
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8868 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8869 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8870 = 0;
      var s__8871 = s__8869;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8872 = s__8871;
          if(and__3822__auto____8872) {
            return i__8870 < size
          }else {
            return and__3822__auto____8872
          }
        }())) {
          a__8868[i__8870] = cljs.core.first.call(null, s__8871);
          var G__8875 = i__8870 + 1;
          var G__8876 = cljs.core.next.call(null, s__8871);
          i__8870 = G__8875;
          s__8871 = G__8876;
          continue
        }else {
          return a__8868
        }
        break
      }
    }else {
      var n__2593__auto____8873 = size;
      var i__8874 = 0;
      while(true) {
        if(i__8874 < n__2593__auto____8873) {
          a__8868[i__8874] = init_val_or_seq;
          var G__8877 = i__8874 + 1;
          i__8874 = G__8877;
          continue
        }else {
        }
        break
      }
      return a__8868
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8885 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8886 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8887 = 0;
      var s__8888 = s__8886;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8889 = s__8888;
          if(and__3822__auto____8889) {
            return i__8887 < size
          }else {
            return and__3822__auto____8889
          }
        }())) {
          a__8885[i__8887] = cljs.core.first.call(null, s__8888);
          var G__8892 = i__8887 + 1;
          var G__8893 = cljs.core.next.call(null, s__8888);
          i__8887 = G__8892;
          s__8888 = G__8893;
          continue
        }else {
          return a__8885
        }
        break
      }
    }else {
      var n__2593__auto____8890 = size;
      var i__8891 = 0;
      while(true) {
        if(i__8891 < n__2593__auto____8890) {
          a__8885[i__8891] = init_val_or_seq;
          var G__8894 = i__8891 + 1;
          i__8891 = G__8894;
          continue
        }else {
        }
        break
      }
      return a__8885
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8902 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8903 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8904 = 0;
      var s__8905 = s__8903;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8906 = s__8905;
          if(and__3822__auto____8906) {
            return i__8904 < size
          }else {
            return and__3822__auto____8906
          }
        }())) {
          a__8902[i__8904] = cljs.core.first.call(null, s__8905);
          var G__8909 = i__8904 + 1;
          var G__8910 = cljs.core.next.call(null, s__8905);
          i__8904 = G__8909;
          s__8905 = G__8910;
          continue
        }else {
          return a__8902
        }
        break
      }
    }else {
      var n__2593__auto____8907 = size;
      var i__8908 = 0;
      while(true) {
        if(i__8908 < n__2593__auto____8907) {
          a__8902[i__8908] = init_val_or_seq;
          var G__8911 = i__8908 + 1;
          i__8908 = G__8911;
          continue
        }else {
        }
        break
      }
      return a__8902
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8916 = s;
    var i__8917 = n;
    var sum__8918 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8919 = i__8917 > 0;
        if(and__3822__auto____8919) {
          return cljs.core.seq.call(null, s__8916)
        }else {
          return and__3822__auto____8919
        }
      }())) {
        var G__8920 = cljs.core.next.call(null, s__8916);
        var G__8921 = i__8917 - 1;
        var G__8922 = sum__8918 + 1;
        s__8916 = G__8920;
        i__8917 = G__8921;
        sum__8918 = G__8922;
        continue
      }else {
        return sum__8918
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8927 = cljs.core.seq.call(null, x);
      if(s__8927) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8927)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8927), concat.call(null, cljs.core.chunk_rest.call(null, s__8927), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8927), concat.call(null, cljs.core.rest.call(null, s__8927), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8931__delegate = function(x, y, zs) {
      var cat__8930 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8929 = cljs.core.seq.call(null, xys);
          if(xys__8929) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8929)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8929), cat.call(null, cljs.core.chunk_rest.call(null, xys__8929), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8929), cat.call(null, cljs.core.rest.call(null, xys__8929), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8930.call(null, concat.call(null, x, y), zs)
    };
    var G__8931 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8931__delegate.call(this, x, y, zs)
    };
    G__8931.cljs$lang$maxFixedArity = 2;
    G__8931.cljs$lang$applyTo = function(arglist__8932) {
      var x = cljs.core.first(arglist__8932);
      var y = cljs.core.first(cljs.core.next(arglist__8932));
      var zs = cljs.core.rest(cljs.core.next(arglist__8932));
      return G__8931__delegate(x, y, zs)
    };
    G__8931.cljs$lang$arity$variadic = G__8931__delegate;
    return G__8931
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8933__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8933 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8933__delegate.call(this, a, b, c, d, more)
    };
    G__8933.cljs$lang$maxFixedArity = 4;
    G__8933.cljs$lang$applyTo = function(arglist__8934) {
      var a = cljs.core.first(arglist__8934);
      var b = cljs.core.first(cljs.core.next(arglist__8934));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8934)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8934))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8934))));
      return G__8933__delegate(a, b, c, d, more)
    };
    G__8933.cljs$lang$arity$variadic = G__8933__delegate;
    return G__8933
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8976 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8977 = cljs.core._first.call(null, args__8976);
    var args__8978 = cljs.core._rest.call(null, args__8976);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8977)
      }else {
        return f.call(null, a__8977)
      }
    }else {
      var b__8979 = cljs.core._first.call(null, args__8978);
      var args__8980 = cljs.core._rest.call(null, args__8978);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8977, b__8979)
        }else {
          return f.call(null, a__8977, b__8979)
        }
      }else {
        var c__8981 = cljs.core._first.call(null, args__8980);
        var args__8982 = cljs.core._rest.call(null, args__8980);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8977, b__8979, c__8981)
          }else {
            return f.call(null, a__8977, b__8979, c__8981)
          }
        }else {
          var d__8983 = cljs.core._first.call(null, args__8982);
          var args__8984 = cljs.core._rest.call(null, args__8982);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8977, b__8979, c__8981, d__8983)
            }else {
              return f.call(null, a__8977, b__8979, c__8981, d__8983)
            }
          }else {
            var e__8985 = cljs.core._first.call(null, args__8984);
            var args__8986 = cljs.core._rest.call(null, args__8984);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8977, b__8979, c__8981, d__8983, e__8985)
              }else {
                return f.call(null, a__8977, b__8979, c__8981, d__8983, e__8985)
              }
            }else {
              var f__8987 = cljs.core._first.call(null, args__8986);
              var args__8988 = cljs.core._rest.call(null, args__8986);
              if(argc === 6) {
                if(f__8987.cljs$lang$arity$6) {
                  return f__8987.cljs$lang$arity$6(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987)
                }else {
                  return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987)
                }
              }else {
                var g__8989 = cljs.core._first.call(null, args__8988);
                var args__8990 = cljs.core._rest.call(null, args__8988);
                if(argc === 7) {
                  if(f__8987.cljs$lang$arity$7) {
                    return f__8987.cljs$lang$arity$7(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989)
                  }else {
                    return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989)
                  }
                }else {
                  var h__8991 = cljs.core._first.call(null, args__8990);
                  var args__8992 = cljs.core._rest.call(null, args__8990);
                  if(argc === 8) {
                    if(f__8987.cljs$lang$arity$8) {
                      return f__8987.cljs$lang$arity$8(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991)
                    }else {
                      return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991)
                    }
                  }else {
                    var i__8993 = cljs.core._first.call(null, args__8992);
                    var args__8994 = cljs.core._rest.call(null, args__8992);
                    if(argc === 9) {
                      if(f__8987.cljs$lang$arity$9) {
                        return f__8987.cljs$lang$arity$9(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993)
                      }else {
                        return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993)
                      }
                    }else {
                      var j__8995 = cljs.core._first.call(null, args__8994);
                      var args__8996 = cljs.core._rest.call(null, args__8994);
                      if(argc === 10) {
                        if(f__8987.cljs$lang$arity$10) {
                          return f__8987.cljs$lang$arity$10(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995)
                        }else {
                          return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995)
                        }
                      }else {
                        var k__8997 = cljs.core._first.call(null, args__8996);
                        var args__8998 = cljs.core._rest.call(null, args__8996);
                        if(argc === 11) {
                          if(f__8987.cljs$lang$arity$11) {
                            return f__8987.cljs$lang$arity$11(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997)
                          }else {
                            return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997)
                          }
                        }else {
                          var l__8999 = cljs.core._first.call(null, args__8998);
                          var args__9000 = cljs.core._rest.call(null, args__8998);
                          if(argc === 12) {
                            if(f__8987.cljs$lang$arity$12) {
                              return f__8987.cljs$lang$arity$12(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999)
                            }else {
                              return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999)
                            }
                          }else {
                            var m__9001 = cljs.core._first.call(null, args__9000);
                            var args__9002 = cljs.core._rest.call(null, args__9000);
                            if(argc === 13) {
                              if(f__8987.cljs$lang$arity$13) {
                                return f__8987.cljs$lang$arity$13(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001)
                              }else {
                                return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001)
                              }
                            }else {
                              var n__9003 = cljs.core._first.call(null, args__9002);
                              var args__9004 = cljs.core._rest.call(null, args__9002);
                              if(argc === 14) {
                                if(f__8987.cljs$lang$arity$14) {
                                  return f__8987.cljs$lang$arity$14(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003)
                                }else {
                                  return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003)
                                }
                              }else {
                                var o__9005 = cljs.core._first.call(null, args__9004);
                                var args__9006 = cljs.core._rest.call(null, args__9004);
                                if(argc === 15) {
                                  if(f__8987.cljs$lang$arity$15) {
                                    return f__8987.cljs$lang$arity$15(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005)
                                  }else {
                                    return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005)
                                  }
                                }else {
                                  var p__9007 = cljs.core._first.call(null, args__9006);
                                  var args__9008 = cljs.core._rest.call(null, args__9006);
                                  if(argc === 16) {
                                    if(f__8987.cljs$lang$arity$16) {
                                      return f__8987.cljs$lang$arity$16(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007)
                                    }else {
                                      return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007)
                                    }
                                  }else {
                                    var q__9009 = cljs.core._first.call(null, args__9008);
                                    var args__9010 = cljs.core._rest.call(null, args__9008);
                                    if(argc === 17) {
                                      if(f__8987.cljs$lang$arity$17) {
                                        return f__8987.cljs$lang$arity$17(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009)
                                      }else {
                                        return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009)
                                      }
                                    }else {
                                      var r__9011 = cljs.core._first.call(null, args__9010);
                                      var args__9012 = cljs.core._rest.call(null, args__9010);
                                      if(argc === 18) {
                                        if(f__8987.cljs$lang$arity$18) {
                                          return f__8987.cljs$lang$arity$18(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009, r__9011)
                                        }else {
                                          return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009, r__9011)
                                        }
                                      }else {
                                        var s__9013 = cljs.core._first.call(null, args__9012);
                                        var args__9014 = cljs.core._rest.call(null, args__9012);
                                        if(argc === 19) {
                                          if(f__8987.cljs$lang$arity$19) {
                                            return f__8987.cljs$lang$arity$19(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009, r__9011, s__9013)
                                          }else {
                                            return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009, r__9011, s__9013)
                                          }
                                        }else {
                                          var t__9015 = cljs.core._first.call(null, args__9014);
                                          var args__9016 = cljs.core._rest.call(null, args__9014);
                                          if(argc === 20) {
                                            if(f__8987.cljs$lang$arity$20) {
                                              return f__8987.cljs$lang$arity$20(a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009, r__9011, s__9013, t__9015)
                                            }else {
                                              return f__8987.call(null, a__8977, b__8979, c__8981, d__8983, e__8985, f__8987, g__8989, h__8991, i__8993, j__8995, k__8997, l__8999, m__9001, n__9003, o__9005, p__9007, q__9009, r__9011, s__9013, t__9015)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__9031 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__9032 = cljs.core.bounded_count.call(null, args, fixed_arity__9031 + 1);
      if(bc__9032 <= fixed_arity__9031) {
        return cljs.core.apply_to.call(null, f, bc__9032, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__9033 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__9034 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__9035 = cljs.core.bounded_count.call(null, arglist__9033, fixed_arity__9034 + 1);
      if(bc__9035 <= fixed_arity__9034) {
        return cljs.core.apply_to.call(null, f, bc__9035, arglist__9033)
      }else {
        return f.cljs$lang$applyTo(arglist__9033)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9033))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__9036 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__9037 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__9038 = cljs.core.bounded_count.call(null, arglist__9036, fixed_arity__9037 + 1);
      if(bc__9038 <= fixed_arity__9037) {
        return cljs.core.apply_to.call(null, f, bc__9038, arglist__9036)
      }else {
        return f.cljs$lang$applyTo(arglist__9036)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9036))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__9039 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__9040 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__9041 = cljs.core.bounded_count.call(null, arglist__9039, fixed_arity__9040 + 1);
      if(bc__9041 <= fixed_arity__9040) {
        return cljs.core.apply_to.call(null, f, bc__9041, arglist__9039)
      }else {
        return f.cljs$lang$applyTo(arglist__9039)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9039))
    }
  };
  var apply__6 = function() {
    var G__9045__delegate = function(f, a, b, c, d, args) {
      var arglist__9042 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__9043 = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc__9044 = cljs.core.bounded_count.call(null, arglist__9042, fixed_arity__9043 + 1);
        if(bc__9044 <= fixed_arity__9043) {
          return cljs.core.apply_to.call(null, f, bc__9044, arglist__9042)
        }else {
          return f.cljs$lang$applyTo(arglist__9042)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__9042))
      }
    };
    var G__9045 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__9045__delegate.call(this, f, a, b, c, d, args)
    };
    G__9045.cljs$lang$maxFixedArity = 5;
    G__9045.cljs$lang$applyTo = function(arglist__9046) {
      var f = cljs.core.first(arglist__9046);
      var a = cljs.core.first(cljs.core.next(arglist__9046));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9046)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9046))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9046)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9046)))));
      return G__9045__delegate(f, a, b, c, d, args)
    };
    G__9045.cljs$lang$arity$variadic = G__9045__delegate;
    return G__9045
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__9047) {
    var obj = cljs.core.first(arglist__9047);
    var f = cljs.core.first(cljs.core.next(arglist__9047));
    var args = cljs.core.rest(cljs.core.next(arglist__9047));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__9048__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__9048 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9048__delegate.call(this, x, y, more)
    };
    G__9048.cljs$lang$maxFixedArity = 2;
    G__9048.cljs$lang$applyTo = function(arglist__9049) {
      var x = cljs.core.first(arglist__9049);
      var y = cljs.core.first(cljs.core.next(arglist__9049));
      var more = cljs.core.rest(cljs.core.next(arglist__9049));
      return G__9048__delegate(x, y, more)
    };
    G__9048.cljs$lang$arity$variadic = G__9048__delegate;
    return G__9048
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9050 = pred;
        var G__9051 = cljs.core.next.call(null, coll);
        pred = G__9050;
        coll = G__9051;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____9053 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____9053)) {
        return or__3824__auto____9053
      }else {
        var G__9054 = pred;
        var G__9055 = cljs.core.next.call(null, coll);
        pred = G__9054;
        coll = G__9055;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9056 = null;
    var G__9056__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__9056__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__9056__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__9056__3 = function() {
      var G__9057__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__9057 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__9057__delegate.call(this, x, y, zs)
      };
      G__9057.cljs$lang$maxFixedArity = 2;
      G__9057.cljs$lang$applyTo = function(arglist__9058) {
        var x = cljs.core.first(arglist__9058);
        var y = cljs.core.first(cljs.core.next(arglist__9058));
        var zs = cljs.core.rest(cljs.core.next(arglist__9058));
        return G__9057__delegate(x, y, zs)
      };
      G__9057.cljs$lang$arity$variadic = G__9057__delegate;
      return G__9057
    }();
    G__9056 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9056__0.call(this);
        case 1:
          return G__9056__1.call(this, x);
        case 2:
          return G__9056__2.call(this, x, y);
        default:
          return G__9056__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__9056.cljs$lang$maxFixedArity = 2;
    G__9056.cljs$lang$applyTo = G__9056__3.cljs$lang$applyTo;
    return G__9056
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9059__delegate = function(args) {
      return x
    };
    var G__9059 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9059__delegate.call(this, args)
    };
    G__9059.cljs$lang$maxFixedArity = 0;
    G__9059.cljs$lang$applyTo = function(arglist__9060) {
      var args = cljs.core.seq(arglist__9060);
      return G__9059__delegate(args)
    };
    G__9059.cljs$lang$arity$variadic = G__9059__delegate;
    return G__9059
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9067 = null;
      var G__9067__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__9067__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__9067__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__9067__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__9067__4 = function() {
        var G__9068__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9068 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9068__delegate.call(this, x, y, z, args)
        };
        G__9068.cljs$lang$maxFixedArity = 3;
        G__9068.cljs$lang$applyTo = function(arglist__9069) {
          var x = cljs.core.first(arglist__9069);
          var y = cljs.core.first(cljs.core.next(arglist__9069));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9069)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9069)));
          return G__9068__delegate(x, y, z, args)
        };
        G__9068.cljs$lang$arity$variadic = G__9068__delegate;
        return G__9068
      }();
      G__9067 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9067__0.call(this);
          case 1:
            return G__9067__1.call(this, x);
          case 2:
            return G__9067__2.call(this, x, y);
          case 3:
            return G__9067__3.call(this, x, y, z);
          default:
            return G__9067__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9067.cljs$lang$maxFixedArity = 3;
      G__9067.cljs$lang$applyTo = G__9067__4.cljs$lang$applyTo;
      return G__9067
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9070 = null;
      var G__9070__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__9070__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__9070__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__9070__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__9070__4 = function() {
        var G__9071__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__9071 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9071__delegate.call(this, x, y, z, args)
        };
        G__9071.cljs$lang$maxFixedArity = 3;
        G__9071.cljs$lang$applyTo = function(arglist__9072) {
          var x = cljs.core.first(arglist__9072);
          var y = cljs.core.first(cljs.core.next(arglist__9072));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9072)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9072)));
          return G__9071__delegate(x, y, z, args)
        };
        G__9071.cljs$lang$arity$variadic = G__9071__delegate;
        return G__9071
      }();
      G__9070 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9070__0.call(this);
          case 1:
            return G__9070__1.call(this, x);
          case 2:
            return G__9070__2.call(this, x, y);
          case 3:
            return G__9070__3.call(this, x, y, z);
          default:
            return G__9070__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9070.cljs$lang$maxFixedArity = 3;
      G__9070.cljs$lang$applyTo = G__9070__4.cljs$lang$applyTo;
      return G__9070
    }()
  };
  var comp__4 = function() {
    var G__9073__delegate = function(f1, f2, f3, fs) {
      var fs__9064 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9074__delegate = function(args) {
          var ret__9065 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__9064), args);
          var fs__9066 = cljs.core.next.call(null, fs__9064);
          while(true) {
            if(fs__9066) {
              var G__9075 = cljs.core.first.call(null, fs__9066).call(null, ret__9065);
              var G__9076 = cljs.core.next.call(null, fs__9066);
              ret__9065 = G__9075;
              fs__9066 = G__9076;
              continue
            }else {
              return ret__9065
            }
            break
          }
        };
        var G__9074 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9074__delegate.call(this, args)
        };
        G__9074.cljs$lang$maxFixedArity = 0;
        G__9074.cljs$lang$applyTo = function(arglist__9077) {
          var args = cljs.core.seq(arglist__9077);
          return G__9074__delegate(args)
        };
        G__9074.cljs$lang$arity$variadic = G__9074__delegate;
        return G__9074
      }()
    };
    var G__9073 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9073__delegate.call(this, f1, f2, f3, fs)
    };
    G__9073.cljs$lang$maxFixedArity = 3;
    G__9073.cljs$lang$applyTo = function(arglist__9078) {
      var f1 = cljs.core.first(arglist__9078);
      var f2 = cljs.core.first(cljs.core.next(arglist__9078));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9078)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9078)));
      return G__9073__delegate(f1, f2, f3, fs)
    };
    G__9073.cljs$lang$arity$variadic = G__9073__delegate;
    return G__9073
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9079__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__9079 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9079__delegate.call(this, args)
      };
      G__9079.cljs$lang$maxFixedArity = 0;
      G__9079.cljs$lang$applyTo = function(arglist__9080) {
        var args = cljs.core.seq(arglist__9080);
        return G__9079__delegate(args)
      };
      G__9079.cljs$lang$arity$variadic = G__9079__delegate;
      return G__9079
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9081__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__9081 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9081__delegate.call(this, args)
      };
      G__9081.cljs$lang$maxFixedArity = 0;
      G__9081.cljs$lang$applyTo = function(arglist__9082) {
        var args = cljs.core.seq(arglist__9082);
        return G__9081__delegate(args)
      };
      G__9081.cljs$lang$arity$variadic = G__9081__delegate;
      return G__9081
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9083__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9083 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9083__delegate.call(this, args)
      };
      G__9083.cljs$lang$maxFixedArity = 0;
      G__9083.cljs$lang$applyTo = function(arglist__9084) {
        var args = cljs.core.seq(arglist__9084);
        return G__9083__delegate(args)
      };
      G__9083.cljs$lang$arity$variadic = G__9083__delegate;
      return G__9083
    }()
  };
  var partial__5 = function() {
    var G__9085__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9086__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9086 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9086__delegate.call(this, args)
        };
        G__9086.cljs$lang$maxFixedArity = 0;
        G__9086.cljs$lang$applyTo = function(arglist__9087) {
          var args = cljs.core.seq(arglist__9087);
          return G__9086__delegate(args)
        };
        G__9086.cljs$lang$arity$variadic = G__9086__delegate;
        return G__9086
      }()
    };
    var G__9085 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9085__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9085.cljs$lang$maxFixedArity = 4;
    G__9085.cljs$lang$applyTo = function(arglist__9088) {
      var f = cljs.core.first(arglist__9088);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9088));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9088)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9088))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9088))));
      return G__9085__delegate(f, arg1, arg2, arg3, more)
    };
    G__9085.cljs$lang$arity$variadic = G__9085__delegate;
    return G__9085
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9089 = null;
      var G__9089__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9089__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9089__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9089__4 = function() {
        var G__9090__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9090 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9090__delegate.call(this, a, b, c, ds)
        };
        G__9090.cljs$lang$maxFixedArity = 3;
        G__9090.cljs$lang$applyTo = function(arglist__9091) {
          var a = cljs.core.first(arglist__9091);
          var b = cljs.core.first(cljs.core.next(arglist__9091));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9091)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9091)));
          return G__9090__delegate(a, b, c, ds)
        };
        G__9090.cljs$lang$arity$variadic = G__9090__delegate;
        return G__9090
      }();
      G__9089 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9089__1.call(this, a);
          case 2:
            return G__9089__2.call(this, a, b);
          case 3:
            return G__9089__3.call(this, a, b, c);
          default:
            return G__9089__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9089.cljs$lang$maxFixedArity = 3;
      G__9089.cljs$lang$applyTo = G__9089__4.cljs$lang$applyTo;
      return G__9089
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9092 = null;
      var G__9092__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9092__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9092__4 = function() {
        var G__9093__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9093 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9093__delegate.call(this, a, b, c, ds)
        };
        G__9093.cljs$lang$maxFixedArity = 3;
        G__9093.cljs$lang$applyTo = function(arglist__9094) {
          var a = cljs.core.first(arglist__9094);
          var b = cljs.core.first(cljs.core.next(arglist__9094));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9094)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9094)));
          return G__9093__delegate(a, b, c, ds)
        };
        G__9093.cljs$lang$arity$variadic = G__9093__delegate;
        return G__9093
      }();
      G__9092 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9092__2.call(this, a, b);
          case 3:
            return G__9092__3.call(this, a, b, c);
          default:
            return G__9092__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9092.cljs$lang$maxFixedArity = 3;
      G__9092.cljs$lang$applyTo = G__9092__4.cljs$lang$applyTo;
      return G__9092
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9095 = null;
      var G__9095__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9095__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9095__4 = function() {
        var G__9096__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9096 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9096__delegate.call(this, a, b, c, ds)
        };
        G__9096.cljs$lang$maxFixedArity = 3;
        G__9096.cljs$lang$applyTo = function(arglist__9097) {
          var a = cljs.core.first(arglist__9097);
          var b = cljs.core.first(cljs.core.next(arglist__9097));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9097)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9097)));
          return G__9096__delegate(a, b, c, ds)
        };
        G__9096.cljs$lang$arity$variadic = G__9096__delegate;
        return G__9096
      }();
      G__9095 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9095__2.call(this, a, b);
          case 3:
            return G__9095__3.call(this, a, b, c);
          default:
            return G__9095__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9095.cljs$lang$maxFixedArity = 3;
      G__9095.cljs$lang$applyTo = G__9095__4.cljs$lang$applyTo;
      return G__9095
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9113 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9121 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9121) {
        var s__9122 = temp__3974__auto____9121;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9122)) {
          var c__9123 = cljs.core.chunk_first.call(null, s__9122);
          var size__9124 = cljs.core.count.call(null, c__9123);
          var b__9125 = cljs.core.chunk_buffer.call(null, size__9124);
          var n__2593__auto____9126 = size__9124;
          var i__9127 = 0;
          while(true) {
            if(i__9127 < n__2593__auto____9126) {
              cljs.core.chunk_append.call(null, b__9125, f.call(null, idx + i__9127, cljs.core._nth.call(null, c__9123, i__9127)));
              var G__9128 = i__9127 + 1;
              i__9127 = G__9128;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9125), mapi.call(null, idx + size__9124, cljs.core.chunk_rest.call(null, s__9122)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9122)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9122)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9113.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9138 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9138) {
      var s__9139 = temp__3974__auto____9138;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9139)) {
        var c__9140 = cljs.core.chunk_first.call(null, s__9139);
        var size__9141 = cljs.core.count.call(null, c__9140);
        var b__9142 = cljs.core.chunk_buffer.call(null, size__9141);
        var n__2593__auto____9143 = size__9141;
        var i__9144 = 0;
        while(true) {
          if(i__9144 < n__2593__auto____9143) {
            var x__9145 = f.call(null, cljs.core._nth.call(null, c__9140, i__9144));
            if(x__9145 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__9142, x__9145)
            }
            var G__9147 = i__9144 + 1;
            i__9144 = G__9147;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9142), keep.call(null, f, cljs.core.chunk_rest.call(null, s__9139)))
      }else {
        var x__9146 = f.call(null, cljs.core.first.call(null, s__9139));
        if(x__9146 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__9139))
        }else {
          return cljs.core.cons.call(null, x__9146, keep.call(null, f, cljs.core.rest.call(null, s__9139)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9173 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9183 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9183) {
        var s__9184 = temp__3974__auto____9183;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9184)) {
          var c__9185 = cljs.core.chunk_first.call(null, s__9184);
          var size__9186 = cljs.core.count.call(null, c__9185);
          var b__9187 = cljs.core.chunk_buffer.call(null, size__9186);
          var n__2593__auto____9188 = size__9186;
          var i__9189 = 0;
          while(true) {
            if(i__9189 < n__2593__auto____9188) {
              var x__9190 = f.call(null, idx + i__9189, cljs.core._nth.call(null, c__9185, i__9189));
              if(x__9190 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9187, x__9190)
              }
              var G__9192 = i__9189 + 1;
              i__9189 = G__9192;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9187), keepi.call(null, idx + size__9186, cljs.core.chunk_rest.call(null, s__9184)))
        }else {
          var x__9191 = f.call(null, idx, cljs.core.first.call(null, s__9184));
          if(x__9191 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9184))
          }else {
            return cljs.core.cons.call(null, x__9191, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9184)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9173.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9278 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9278)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9278
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9279 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9279)) {
            var and__3822__auto____9280 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9280)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9280
            }
          }else {
            return and__3822__auto____9279
          }
        }())
      };
      var ep1__4 = function() {
        var G__9349__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9281 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9281)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9281
            }
          }())
        };
        var G__9349 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9349__delegate.call(this, x, y, z, args)
        };
        G__9349.cljs$lang$maxFixedArity = 3;
        G__9349.cljs$lang$applyTo = function(arglist__9350) {
          var x = cljs.core.first(arglist__9350);
          var y = cljs.core.first(cljs.core.next(arglist__9350));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9350)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9350)));
          return G__9349__delegate(x, y, z, args)
        };
        G__9349.cljs$lang$arity$variadic = G__9349__delegate;
        return G__9349
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9293 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9293)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9293
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9294 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9294)) {
            var and__3822__auto____9295 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9295)) {
              var and__3822__auto____9296 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9296)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9296
              }
            }else {
              return and__3822__auto____9295
            }
          }else {
            return and__3822__auto____9294
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9297 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9297)) {
            var and__3822__auto____9298 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9298)) {
              var and__3822__auto____9299 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9299)) {
                var and__3822__auto____9300 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9300)) {
                  var and__3822__auto____9301 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9301)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9301
                  }
                }else {
                  return and__3822__auto____9300
                }
              }else {
                return and__3822__auto____9299
              }
            }else {
              return and__3822__auto____9298
            }
          }else {
            return and__3822__auto____9297
          }
        }())
      };
      var ep2__4 = function() {
        var G__9351__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9302 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9302)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9148_SHARP_) {
                var and__3822__auto____9303 = p1.call(null, p1__9148_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9303)) {
                  return p2.call(null, p1__9148_SHARP_)
                }else {
                  return and__3822__auto____9303
                }
              }, args)
            }else {
              return and__3822__auto____9302
            }
          }())
        };
        var G__9351 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9351__delegate.call(this, x, y, z, args)
        };
        G__9351.cljs$lang$maxFixedArity = 3;
        G__9351.cljs$lang$applyTo = function(arglist__9352) {
          var x = cljs.core.first(arglist__9352);
          var y = cljs.core.first(cljs.core.next(arglist__9352));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9352)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9352)));
          return G__9351__delegate(x, y, z, args)
        };
        G__9351.cljs$lang$arity$variadic = G__9351__delegate;
        return G__9351
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9322 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9322)) {
            var and__3822__auto____9323 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9323)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9323
            }
          }else {
            return and__3822__auto____9322
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9324 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9324)) {
            var and__3822__auto____9325 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9325)) {
              var and__3822__auto____9326 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9326)) {
                var and__3822__auto____9327 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9327)) {
                  var and__3822__auto____9328 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9328)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9328
                  }
                }else {
                  return and__3822__auto____9327
                }
              }else {
                return and__3822__auto____9326
              }
            }else {
              return and__3822__auto____9325
            }
          }else {
            return and__3822__auto____9324
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9329 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9329)) {
            var and__3822__auto____9330 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9330)) {
              var and__3822__auto____9331 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9331)) {
                var and__3822__auto____9332 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9332)) {
                  var and__3822__auto____9333 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9333)) {
                    var and__3822__auto____9334 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9334)) {
                      var and__3822__auto____9335 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9335)) {
                        var and__3822__auto____9336 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9336)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9336
                        }
                      }else {
                        return and__3822__auto____9335
                      }
                    }else {
                      return and__3822__auto____9334
                    }
                  }else {
                    return and__3822__auto____9333
                  }
                }else {
                  return and__3822__auto____9332
                }
              }else {
                return and__3822__auto____9331
              }
            }else {
              return and__3822__auto____9330
            }
          }else {
            return and__3822__auto____9329
          }
        }())
      };
      var ep3__4 = function() {
        var G__9353__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9337 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9337)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9149_SHARP_) {
                var and__3822__auto____9338 = p1.call(null, p1__9149_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9338)) {
                  var and__3822__auto____9339 = p2.call(null, p1__9149_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9339)) {
                    return p3.call(null, p1__9149_SHARP_)
                  }else {
                    return and__3822__auto____9339
                  }
                }else {
                  return and__3822__auto____9338
                }
              }, args)
            }else {
              return and__3822__auto____9337
            }
          }())
        };
        var G__9353 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9353__delegate.call(this, x, y, z, args)
        };
        G__9353.cljs$lang$maxFixedArity = 3;
        G__9353.cljs$lang$applyTo = function(arglist__9354) {
          var x = cljs.core.first(arglist__9354);
          var y = cljs.core.first(cljs.core.next(arglist__9354));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9354)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9354)));
          return G__9353__delegate(x, y, z, args)
        };
        G__9353.cljs$lang$arity$variadic = G__9353__delegate;
        return G__9353
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9355__delegate = function(p1, p2, p3, ps) {
      var ps__9340 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9150_SHARP_) {
            return p1__9150_SHARP_.call(null, x)
          }, ps__9340)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9151_SHARP_) {
            var and__3822__auto____9345 = p1__9151_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9345)) {
              return p1__9151_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9345
            }
          }, ps__9340)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9152_SHARP_) {
            var and__3822__auto____9346 = p1__9152_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9346)) {
              var and__3822__auto____9347 = p1__9152_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9347)) {
                return p1__9152_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9347
              }
            }else {
              return and__3822__auto____9346
            }
          }, ps__9340)
        };
        var epn__4 = function() {
          var G__9356__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9348 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9348)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9153_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9153_SHARP_, args)
                }, ps__9340)
              }else {
                return and__3822__auto____9348
              }
            }())
          };
          var G__9356 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9356__delegate.call(this, x, y, z, args)
          };
          G__9356.cljs$lang$maxFixedArity = 3;
          G__9356.cljs$lang$applyTo = function(arglist__9357) {
            var x = cljs.core.first(arglist__9357);
            var y = cljs.core.first(cljs.core.next(arglist__9357));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9357)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9357)));
            return G__9356__delegate(x, y, z, args)
          };
          G__9356.cljs$lang$arity$variadic = G__9356__delegate;
          return G__9356
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9355 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9355__delegate.call(this, p1, p2, p3, ps)
    };
    G__9355.cljs$lang$maxFixedArity = 3;
    G__9355.cljs$lang$applyTo = function(arglist__9358) {
      var p1 = cljs.core.first(arglist__9358);
      var p2 = cljs.core.first(cljs.core.next(arglist__9358));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9358)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9358)));
      return G__9355__delegate(p1, p2, p3, ps)
    };
    G__9355.cljs$lang$arity$variadic = G__9355__delegate;
    return G__9355
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9439 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9439)) {
          return or__3824__auto____9439
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9440 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9440)) {
          return or__3824__auto____9440
        }else {
          var or__3824__auto____9441 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9441)) {
            return or__3824__auto____9441
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9510__delegate = function(x, y, z, args) {
          var or__3824__auto____9442 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9442)) {
            return or__3824__auto____9442
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9510 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9510__delegate.call(this, x, y, z, args)
        };
        G__9510.cljs$lang$maxFixedArity = 3;
        G__9510.cljs$lang$applyTo = function(arglist__9511) {
          var x = cljs.core.first(arglist__9511);
          var y = cljs.core.first(cljs.core.next(arglist__9511));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9511)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9511)));
          return G__9510__delegate(x, y, z, args)
        };
        G__9510.cljs$lang$arity$variadic = G__9510__delegate;
        return G__9510
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9454 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9454)) {
          return or__3824__auto____9454
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9455 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9455)) {
          return or__3824__auto____9455
        }else {
          var or__3824__auto____9456 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9456)) {
            return or__3824__auto____9456
          }else {
            var or__3824__auto____9457 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9457)) {
              return or__3824__auto____9457
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9458 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9458)) {
          return or__3824__auto____9458
        }else {
          var or__3824__auto____9459 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9459)) {
            return or__3824__auto____9459
          }else {
            var or__3824__auto____9460 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9460)) {
              return or__3824__auto____9460
            }else {
              var or__3824__auto____9461 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9461)) {
                return or__3824__auto____9461
              }else {
                var or__3824__auto____9462 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9462)) {
                  return or__3824__auto____9462
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9512__delegate = function(x, y, z, args) {
          var or__3824__auto____9463 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9463)) {
            return or__3824__auto____9463
          }else {
            return cljs.core.some.call(null, function(p1__9193_SHARP_) {
              var or__3824__auto____9464 = p1.call(null, p1__9193_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9464)) {
                return or__3824__auto____9464
              }else {
                return p2.call(null, p1__9193_SHARP_)
              }
            }, args)
          }
        };
        var G__9512 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9512__delegate.call(this, x, y, z, args)
        };
        G__9512.cljs$lang$maxFixedArity = 3;
        G__9512.cljs$lang$applyTo = function(arglist__9513) {
          var x = cljs.core.first(arglist__9513);
          var y = cljs.core.first(cljs.core.next(arglist__9513));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9513)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9513)));
          return G__9512__delegate(x, y, z, args)
        };
        G__9512.cljs$lang$arity$variadic = G__9512__delegate;
        return G__9512
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9483 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9483)) {
          return or__3824__auto____9483
        }else {
          var or__3824__auto____9484 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9484)) {
            return or__3824__auto____9484
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9485 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9485)) {
          return or__3824__auto____9485
        }else {
          var or__3824__auto____9486 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9486)) {
            return or__3824__auto____9486
          }else {
            var or__3824__auto____9487 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9487)) {
              return or__3824__auto____9487
            }else {
              var or__3824__auto____9488 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9488)) {
                return or__3824__auto____9488
              }else {
                var or__3824__auto____9489 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9489)) {
                  return or__3824__auto____9489
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9490 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9490)) {
          return or__3824__auto____9490
        }else {
          var or__3824__auto____9491 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9491)) {
            return or__3824__auto____9491
          }else {
            var or__3824__auto____9492 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9492)) {
              return or__3824__auto____9492
            }else {
              var or__3824__auto____9493 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9493)) {
                return or__3824__auto____9493
              }else {
                var or__3824__auto____9494 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9494)) {
                  return or__3824__auto____9494
                }else {
                  var or__3824__auto____9495 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9495)) {
                    return or__3824__auto____9495
                  }else {
                    var or__3824__auto____9496 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9496)) {
                      return or__3824__auto____9496
                    }else {
                      var or__3824__auto____9497 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9497)) {
                        return or__3824__auto____9497
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9514__delegate = function(x, y, z, args) {
          var or__3824__auto____9498 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9498)) {
            return or__3824__auto____9498
          }else {
            return cljs.core.some.call(null, function(p1__9194_SHARP_) {
              var or__3824__auto____9499 = p1.call(null, p1__9194_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9499)) {
                return or__3824__auto____9499
              }else {
                var or__3824__auto____9500 = p2.call(null, p1__9194_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9500)) {
                  return or__3824__auto____9500
                }else {
                  return p3.call(null, p1__9194_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9514 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9514__delegate.call(this, x, y, z, args)
        };
        G__9514.cljs$lang$maxFixedArity = 3;
        G__9514.cljs$lang$applyTo = function(arglist__9515) {
          var x = cljs.core.first(arglist__9515);
          var y = cljs.core.first(cljs.core.next(arglist__9515));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9515)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9515)));
          return G__9514__delegate(x, y, z, args)
        };
        G__9514.cljs$lang$arity$variadic = G__9514__delegate;
        return G__9514
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9516__delegate = function(p1, p2, p3, ps) {
      var ps__9501 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9195_SHARP_) {
            return p1__9195_SHARP_.call(null, x)
          }, ps__9501)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9196_SHARP_) {
            var or__3824__auto____9506 = p1__9196_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9506)) {
              return or__3824__auto____9506
            }else {
              return p1__9196_SHARP_.call(null, y)
            }
          }, ps__9501)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9197_SHARP_) {
            var or__3824__auto____9507 = p1__9197_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9507)) {
              return or__3824__auto____9507
            }else {
              var or__3824__auto____9508 = p1__9197_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9508)) {
                return or__3824__auto____9508
              }else {
                return p1__9197_SHARP_.call(null, z)
              }
            }
          }, ps__9501)
        };
        var spn__4 = function() {
          var G__9517__delegate = function(x, y, z, args) {
            var or__3824__auto____9509 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9509)) {
              return or__3824__auto____9509
            }else {
              return cljs.core.some.call(null, function(p1__9198_SHARP_) {
                return cljs.core.some.call(null, p1__9198_SHARP_, args)
              }, ps__9501)
            }
          };
          var G__9517 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9517__delegate.call(this, x, y, z, args)
          };
          G__9517.cljs$lang$maxFixedArity = 3;
          G__9517.cljs$lang$applyTo = function(arglist__9518) {
            var x = cljs.core.first(arglist__9518);
            var y = cljs.core.first(cljs.core.next(arglist__9518));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9518)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9518)));
            return G__9517__delegate(x, y, z, args)
          };
          G__9517.cljs$lang$arity$variadic = G__9517__delegate;
          return G__9517
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9516 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9516__delegate.call(this, p1, p2, p3, ps)
    };
    G__9516.cljs$lang$maxFixedArity = 3;
    G__9516.cljs$lang$applyTo = function(arglist__9519) {
      var p1 = cljs.core.first(arglist__9519);
      var p2 = cljs.core.first(cljs.core.next(arglist__9519));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9519)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9519)));
      return G__9516__delegate(p1, p2, p3, ps)
    };
    G__9516.cljs$lang$arity$variadic = G__9516__delegate;
    return G__9516
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9538 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9538) {
        var s__9539 = temp__3974__auto____9538;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9539)) {
          var c__9540 = cljs.core.chunk_first.call(null, s__9539);
          var size__9541 = cljs.core.count.call(null, c__9540);
          var b__9542 = cljs.core.chunk_buffer.call(null, size__9541);
          var n__2593__auto____9543 = size__9541;
          var i__9544 = 0;
          while(true) {
            if(i__9544 < n__2593__auto____9543) {
              cljs.core.chunk_append.call(null, b__9542, f.call(null, cljs.core._nth.call(null, c__9540, i__9544)));
              var G__9556 = i__9544 + 1;
              i__9544 = G__9556;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9542), map.call(null, f, cljs.core.chunk_rest.call(null, s__9539)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9539)), map.call(null, f, cljs.core.rest.call(null, s__9539)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9545 = cljs.core.seq.call(null, c1);
      var s2__9546 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9547 = s1__9545;
        if(and__3822__auto____9547) {
          return s2__9546
        }else {
          return and__3822__auto____9547
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9545), cljs.core.first.call(null, s2__9546)), map.call(null, f, cljs.core.rest.call(null, s1__9545), cljs.core.rest.call(null, s2__9546)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9548 = cljs.core.seq.call(null, c1);
      var s2__9549 = cljs.core.seq.call(null, c2);
      var s3__9550 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9551 = s1__9548;
        if(and__3822__auto____9551) {
          var and__3822__auto____9552 = s2__9549;
          if(and__3822__auto____9552) {
            return s3__9550
          }else {
            return and__3822__auto____9552
          }
        }else {
          return and__3822__auto____9551
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9548), cljs.core.first.call(null, s2__9549), cljs.core.first.call(null, s3__9550)), map.call(null, f, cljs.core.rest.call(null, s1__9548), cljs.core.rest.call(null, s2__9549), cljs.core.rest.call(null, s3__9550)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9557__delegate = function(f, c1, c2, c3, colls) {
      var step__9555 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9554 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9554)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9554), step.call(null, map.call(null, cljs.core.rest, ss__9554)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9359_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9359_SHARP_)
      }, step__9555.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9557 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9557__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9557.cljs$lang$maxFixedArity = 4;
    G__9557.cljs$lang$applyTo = function(arglist__9558) {
      var f = cljs.core.first(arglist__9558);
      var c1 = cljs.core.first(cljs.core.next(arglist__9558));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9558)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9558))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9558))));
      return G__9557__delegate(f, c1, c2, c3, colls)
    };
    G__9557.cljs$lang$arity$variadic = G__9557__delegate;
    return G__9557
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9561 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9561) {
        var s__9562 = temp__3974__auto____9561;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9562), take.call(null, n - 1, cljs.core.rest.call(null, s__9562)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9568 = function(n, coll) {
    while(true) {
      var s__9566 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9567 = n > 0;
        if(and__3822__auto____9567) {
          return s__9566
        }else {
          return and__3822__auto____9567
        }
      }())) {
        var G__9569 = n - 1;
        var G__9570 = cljs.core.rest.call(null, s__9566);
        n = G__9569;
        coll = G__9570;
        continue
      }else {
        return s__9566
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9568.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9573 = cljs.core.seq.call(null, coll);
  var lead__9574 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9574) {
      var G__9575 = cljs.core.next.call(null, s__9573);
      var G__9576 = cljs.core.next.call(null, lead__9574);
      s__9573 = G__9575;
      lead__9574 = G__9576;
      continue
    }else {
      return s__9573
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9582 = function(pred, coll) {
    while(true) {
      var s__9580 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9581 = s__9580;
        if(and__3822__auto____9581) {
          return pred.call(null, cljs.core.first.call(null, s__9580))
        }else {
          return and__3822__auto____9581
        }
      }())) {
        var G__9583 = pred;
        var G__9584 = cljs.core.rest.call(null, s__9580);
        pred = G__9583;
        coll = G__9584;
        continue
      }else {
        return s__9580
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9582.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9587 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9587) {
      var s__9588 = temp__3974__auto____9587;
      return cljs.core.concat.call(null, s__9588, cycle.call(null, s__9588))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9593 = cljs.core.seq.call(null, c1);
      var s2__9594 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9595 = s1__9593;
        if(and__3822__auto____9595) {
          return s2__9594
        }else {
          return and__3822__auto____9595
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9593), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9594), interleave.call(null, cljs.core.rest.call(null, s1__9593), cljs.core.rest.call(null, s2__9594))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9597__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9596 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9596)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9596), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9596)))
        }else {
          return null
        }
      }, null)
    };
    var G__9597 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9597__delegate.call(this, c1, c2, colls)
    };
    G__9597.cljs$lang$maxFixedArity = 2;
    G__9597.cljs$lang$applyTo = function(arglist__9598) {
      var c1 = cljs.core.first(arglist__9598);
      var c2 = cljs.core.first(cljs.core.next(arglist__9598));
      var colls = cljs.core.rest(cljs.core.next(arglist__9598));
      return G__9597__delegate(c1, c2, colls)
    };
    G__9597.cljs$lang$arity$variadic = G__9597__delegate;
    return G__9597
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9608 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9606 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9606) {
        var coll__9607 = temp__3971__auto____9606;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9607), cat.call(null, cljs.core.rest.call(null, coll__9607), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9608.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9609__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9609 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9609__delegate.call(this, f, coll, colls)
    };
    G__9609.cljs$lang$maxFixedArity = 2;
    G__9609.cljs$lang$applyTo = function(arglist__9610) {
      var f = cljs.core.first(arglist__9610);
      var coll = cljs.core.first(cljs.core.next(arglist__9610));
      var colls = cljs.core.rest(cljs.core.next(arglist__9610));
      return G__9609__delegate(f, coll, colls)
    };
    G__9609.cljs$lang$arity$variadic = G__9609__delegate;
    return G__9609
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9620 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9620) {
      var s__9621 = temp__3974__auto____9620;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9621)) {
        var c__9622 = cljs.core.chunk_first.call(null, s__9621);
        var size__9623 = cljs.core.count.call(null, c__9622);
        var b__9624 = cljs.core.chunk_buffer.call(null, size__9623);
        var n__2593__auto____9625 = size__9623;
        var i__9626 = 0;
        while(true) {
          if(i__9626 < n__2593__auto____9625) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9622, i__9626)))) {
              cljs.core.chunk_append.call(null, b__9624, cljs.core._nth.call(null, c__9622, i__9626))
            }else {
            }
            var G__9629 = i__9626 + 1;
            i__9626 = G__9629;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9624), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9621)))
      }else {
        var f__9627 = cljs.core.first.call(null, s__9621);
        var r__9628 = cljs.core.rest.call(null, s__9621);
        if(cljs.core.truth_(pred.call(null, f__9627))) {
          return cljs.core.cons.call(null, f__9627, filter.call(null, pred, r__9628))
        }else {
          return filter.call(null, pred, r__9628)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9632 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9632.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9630_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9630_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9636__9637 = to;
    if(G__9636__9637) {
      if(function() {
        var or__3824__auto____9638 = G__9636__9637.cljs$lang$protocol_mask$partition1$ & 4;
        if(or__3824__auto____9638) {
          return or__3824__auto____9638
        }else {
          return G__9636__9637.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9636__9637.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9636__9637)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9636__9637)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9639__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9639 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9639__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9639.cljs$lang$maxFixedArity = 4;
    G__9639.cljs$lang$applyTo = function(arglist__9640) {
      var f = cljs.core.first(arglist__9640);
      var c1 = cljs.core.first(cljs.core.next(arglist__9640));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9640)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9640))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9640))));
      return G__9639__delegate(f, c1, c2, c3, colls)
    };
    G__9639.cljs$lang$arity$variadic = G__9639__delegate;
    return G__9639
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9647 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9647) {
        var s__9648 = temp__3974__auto____9647;
        var p__9649 = cljs.core.take.call(null, n, s__9648);
        if(n === cljs.core.count.call(null, p__9649)) {
          return cljs.core.cons.call(null, p__9649, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9648)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9650 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9650) {
        var s__9651 = temp__3974__auto____9650;
        var p__9652 = cljs.core.take.call(null, n, s__9651);
        if(n === cljs.core.count.call(null, p__9652)) {
          return cljs.core.cons.call(null, p__9652, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9651)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9652, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9657 = cljs.core.lookup_sentinel;
    var m__9658 = m;
    var ks__9659 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9659) {
        var m__9660 = cljs.core._lookup.call(null, m__9658, cljs.core.first.call(null, ks__9659), sentinel__9657);
        if(sentinel__9657 === m__9660) {
          return not_found
        }else {
          var G__9661 = sentinel__9657;
          var G__9662 = m__9660;
          var G__9663 = cljs.core.next.call(null, ks__9659);
          sentinel__9657 = G__9661;
          m__9658 = G__9662;
          ks__9659 = G__9663;
          continue
        }
      }else {
        return m__9658
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9664, v) {
  var vec__9669__9670 = p__9664;
  var k__9671 = cljs.core.nth.call(null, vec__9669__9670, 0, null);
  var ks__9672 = cljs.core.nthnext.call(null, vec__9669__9670, 1);
  if(cljs.core.truth_(ks__9672)) {
    return cljs.core.assoc.call(null, m, k__9671, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9671, null), ks__9672, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9671, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9673, f, args) {
    var vec__9678__9679 = p__9673;
    var k__9680 = cljs.core.nth.call(null, vec__9678__9679, 0, null);
    var ks__9681 = cljs.core.nthnext.call(null, vec__9678__9679, 1);
    if(cljs.core.truth_(ks__9681)) {
      return cljs.core.assoc.call(null, m, k__9680, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9680, null), ks__9681, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9680, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9680, null), args))
    }
  };
  var update_in = function(m, p__9673, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9673, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9682) {
    var m = cljs.core.first(arglist__9682);
    var p__9673 = cljs.core.first(cljs.core.next(arglist__9682));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9682)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9682)));
    return update_in__delegate(m, p__9673, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
goog.provide("cljs.core.Vector");
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9685 = this;
  var h__2247__auto____9686 = this__9685.__hash;
  if(!(h__2247__auto____9686 == null)) {
    return h__2247__auto____9686
  }else {
    var h__2247__auto____9687 = cljs.core.hash_coll.call(null, coll);
    this__9685.__hash = h__2247__auto____9687;
    return h__2247__auto____9687
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9688 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9689 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9690 = this;
  var new_array__9691 = this__9690.array.slice();
  new_array__9691[k] = v;
  return new cljs.core.Vector(this__9690.meta, new_array__9691, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9722 = null;
  var G__9722__2 = function(this_sym9692, k) {
    var this__9694 = this;
    var this_sym9692__9695 = this;
    var coll__9696 = this_sym9692__9695;
    return coll__9696.cljs$core$ILookup$_lookup$arity$2(coll__9696, k)
  };
  var G__9722__3 = function(this_sym9693, k, not_found) {
    var this__9694 = this;
    var this_sym9693__9697 = this;
    var coll__9698 = this_sym9693__9697;
    return coll__9698.cljs$core$ILookup$_lookup$arity$3(coll__9698, k, not_found)
  };
  G__9722 = function(this_sym9693, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9722__2.call(this, this_sym9693, k);
      case 3:
        return G__9722__3.call(this, this_sym9693, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9722
}();
cljs.core.Vector.prototype.apply = function(this_sym9683, args9684) {
  var this__9699 = this;
  return this_sym9683.call.apply(this_sym9683, [this_sym9683].concat(args9684.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9700 = this;
  var new_array__9701 = this__9700.array.slice();
  new_array__9701.push(o);
  return new cljs.core.Vector(this__9700.meta, new_array__9701, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9702 = this;
  var this__9703 = this;
  return cljs.core.pr_str.call(null, this__9703)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9704 = this;
  return cljs.core.ci_reduce.call(null, this__9704.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9705 = this;
  return cljs.core.ci_reduce.call(null, this__9705.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9706 = this;
  if(this__9706.array.length > 0) {
    var vector_seq__9707 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9706.array.length) {
          return cljs.core.cons.call(null, this__9706.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9707.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9708 = this;
  return this__9708.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9709 = this;
  var count__9710 = this__9709.array.length;
  if(count__9710 > 0) {
    return this__9709.array[count__9710 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9711 = this;
  if(this__9711.array.length > 0) {
    var new_array__9712 = this__9711.array.slice();
    new_array__9712.pop();
    return new cljs.core.Vector(this__9711.meta, new_array__9712, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9713 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9714 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9715 = this;
  return new cljs.core.Vector(meta, this__9715.array, this__9715.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9716 = this;
  return this__9716.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9717 = this;
  if(function() {
    var and__3822__auto____9718 = 0 <= n;
    if(and__3822__auto____9718) {
      return n < this__9717.array.length
    }else {
      return and__3822__auto____9718
    }
  }()) {
    return this__9717.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9719 = this;
  if(function() {
    var and__3822__auto____9720 = 0 <= n;
    if(and__3822__auto____9720) {
      return n < this__9719.array.length
    }else {
      return and__3822__auto____9720
    }
  }()) {
    return this__9719.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9721 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9721.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2368__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__2368__auto__, writer__2369__auto__) {
  return cljs.core._write.call(null, writer__2369__auto__, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9724 = pv.cnt;
  if(cnt__9724 < 32) {
    return 0
  }else {
    return cnt__9724 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9730 = level;
  var ret__9731 = node;
  while(true) {
    if(ll__9730 === 0) {
      return ret__9731
    }else {
      var embed__9732 = ret__9731;
      var r__9733 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9734 = cljs.core.pv_aset.call(null, r__9733, 0, embed__9732);
      var G__9735 = ll__9730 - 5;
      var G__9736 = r__9733;
      ll__9730 = G__9735;
      ret__9731 = G__9736;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9742 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9743 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9742, subidx__9743, tailnode);
    return ret__9742
  }else {
    var child__9744 = cljs.core.pv_aget.call(null, parent, subidx__9743);
    if(!(child__9744 == null)) {
      var node_to_insert__9745 = push_tail.call(null, pv, level - 5, child__9744, tailnode);
      cljs.core.pv_aset.call(null, ret__9742, subidx__9743, node_to_insert__9745);
      return ret__9742
    }else {
      var node_to_insert__9746 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9742, subidx__9743, node_to_insert__9746);
      return ret__9742
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9750 = 0 <= i;
    if(and__3822__auto____9750) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9750
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9751 = pv.root;
      var level__9752 = pv.shift;
      while(true) {
        if(level__9752 > 0) {
          var G__9753 = cljs.core.pv_aget.call(null, node__9751, i >>> level__9752 & 31);
          var G__9754 = level__9752 - 5;
          node__9751 = G__9753;
          level__9752 = G__9754;
          continue
        }else {
          return node__9751.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9757 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9757, i & 31, val);
    return ret__9757
  }else {
    var subidx__9758 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9757, subidx__9758, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9758), i, val));
    return ret__9757
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9764 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9765 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9764));
    if(function() {
      var and__3822__auto____9766 = new_child__9765 == null;
      if(and__3822__auto____9766) {
        return subidx__9764 === 0
      }else {
        return and__3822__auto____9766
      }
    }()) {
      return null
    }else {
      var ret__9767 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9767, subidx__9764, new_child__9765);
      return ret__9767
    }
  }else {
    if(subidx__9764 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9768 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9768, subidx__9764, null);
        return ret__9768
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9771 = this;
  return new cljs.core.TransientVector(this__9771.cnt, this__9771.shift, cljs.core.tv_editable_root.call(null, this__9771.root), cljs.core.tv_editable_tail.call(null, this__9771.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9772 = this;
  var h__2247__auto____9773 = this__9772.__hash;
  if(!(h__2247__auto____9773 == null)) {
    return h__2247__auto____9773
  }else {
    var h__2247__auto____9774 = cljs.core.hash_coll.call(null, coll);
    this__9772.__hash = h__2247__auto____9774;
    return h__2247__auto____9774
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9775 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9776 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9777 = this;
  if(function() {
    var and__3822__auto____9778 = 0 <= k;
    if(and__3822__auto____9778) {
      return k < this__9777.cnt
    }else {
      return and__3822__auto____9778
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9779 = this__9777.tail.slice();
      new_tail__9779[k & 31] = v;
      return new cljs.core.PersistentVector(this__9777.meta, this__9777.cnt, this__9777.shift, this__9777.root, new_tail__9779, null)
    }else {
      return new cljs.core.PersistentVector(this__9777.meta, this__9777.cnt, this__9777.shift, cljs.core.do_assoc.call(null, coll, this__9777.shift, this__9777.root, k, v), this__9777.tail, null)
    }
  }else {
    if(k === this__9777.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9777.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9827 = null;
  var G__9827__2 = function(this_sym9780, k) {
    var this__9782 = this;
    var this_sym9780__9783 = this;
    var coll__9784 = this_sym9780__9783;
    return coll__9784.cljs$core$ILookup$_lookup$arity$2(coll__9784, k)
  };
  var G__9827__3 = function(this_sym9781, k, not_found) {
    var this__9782 = this;
    var this_sym9781__9785 = this;
    var coll__9786 = this_sym9781__9785;
    return coll__9786.cljs$core$ILookup$_lookup$arity$3(coll__9786, k, not_found)
  };
  G__9827 = function(this_sym9781, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9827__2.call(this, this_sym9781, k);
      case 3:
        return G__9827__3.call(this, this_sym9781, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9827
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9769, args9770) {
  var this__9787 = this;
  return this_sym9769.call.apply(this_sym9769, [this_sym9769].concat(args9770.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9788 = this;
  var step_init__9789 = [0, init];
  var i__9790 = 0;
  while(true) {
    if(i__9790 < this__9788.cnt) {
      var arr__9791 = cljs.core.array_for.call(null, v, i__9790);
      var len__9792 = arr__9791.length;
      var init__9796 = function() {
        var j__9793 = 0;
        var init__9794 = step_init__9789[1];
        while(true) {
          if(j__9793 < len__9792) {
            var init__9795 = f.call(null, init__9794, j__9793 + i__9790, arr__9791[j__9793]);
            if(cljs.core.reduced_QMARK_.call(null, init__9795)) {
              return init__9795
            }else {
              var G__9828 = j__9793 + 1;
              var G__9829 = init__9795;
              j__9793 = G__9828;
              init__9794 = G__9829;
              continue
            }
          }else {
            step_init__9789[0] = len__9792;
            step_init__9789[1] = init__9794;
            return init__9794
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9796)) {
        return cljs.core.deref.call(null, init__9796)
      }else {
        var G__9830 = i__9790 + step_init__9789[0];
        i__9790 = G__9830;
        continue
      }
    }else {
      return step_init__9789[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9797 = this;
  if(this__9797.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9798 = this__9797.tail.slice();
    new_tail__9798.push(o);
    return new cljs.core.PersistentVector(this__9797.meta, this__9797.cnt + 1, this__9797.shift, this__9797.root, new_tail__9798, null)
  }else {
    var root_overflow_QMARK___9799 = this__9797.cnt >>> 5 > 1 << this__9797.shift;
    var new_shift__9800 = root_overflow_QMARK___9799 ? this__9797.shift + 5 : this__9797.shift;
    var new_root__9802 = root_overflow_QMARK___9799 ? function() {
      var n_r__9801 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9801, 0, this__9797.root);
      cljs.core.pv_aset.call(null, n_r__9801, 1, cljs.core.new_path.call(null, null, this__9797.shift, new cljs.core.VectorNode(null, this__9797.tail)));
      return n_r__9801
    }() : cljs.core.push_tail.call(null, coll, this__9797.shift, this__9797.root, new cljs.core.VectorNode(null, this__9797.tail));
    return new cljs.core.PersistentVector(this__9797.meta, this__9797.cnt + 1, new_shift__9800, new_root__9802, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9803 = this;
  if(this__9803.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9803.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9804 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9805 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9806 = this;
  var this__9807 = this;
  return cljs.core.pr_str.call(null, this__9807)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9808 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9809 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9810 = this;
  if(this__9810.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9811 = this;
  return this__9811.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9812 = this;
  if(this__9812.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9812.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9813 = this;
  if(this__9813.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9813.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9813.meta)
    }else {
      if(1 < this__9813.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9813.meta, this__9813.cnt - 1, this__9813.shift, this__9813.root, this__9813.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9814 = cljs.core.array_for.call(null, coll, this__9813.cnt - 2);
          var nr__9815 = cljs.core.pop_tail.call(null, coll, this__9813.shift, this__9813.root);
          var new_root__9816 = nr__9815 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9815;
          var cnt_1__9817 = this__9813.cnt - 1;
          if(function() {
            var and__3822__auto____9818 = 5 < this__9813.shift;
            if(and__3822__auto____9818) {
              return cljs.core.pv_aget.call(null, new_root__9816, 1) == null
            }else {
              return and__3822__auto____9818
            }
          }()) {
            return new cljs.core.PersistentVector(this__9813.meta, cnt_1__9817, this__9813.shift - 5, cljs.core.pv_aget.call(null, new_root__9816, 0), new_tail__9814, null)
          }else {
            return new cljs.core.PersistentVector(this__9813.meta, cnt_1__9817, this__9813.shift, new_root__9816, new_tail__9814, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9819 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9820 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9821 = this;
  return new cljs.core.PersistentVector(meta, this__9821.cnt, this__9821.shift, this__9821.root, this__9821.tail, this__9821.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9822 = this;
  return this__9822.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9823 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9824 = this;
  if(function() {
    var and__3822__auto____9825 = 0 <= n;
    if(and__3822__auto____9825) {
      return n < this__9824.cnt
    }else {
      return and__3822__auto____9825
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9826 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9826.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9831 = xs.length;
  var xs__9832 = no_clone === true ? xs : xs.slice();
  if(l__9831 < 32) {
    return new cljs.core.PersistentVector(null, l__9831, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9832, null)
  }else {
    var node__9833 = xs__9832.slice(0, 32);
    var v__9834 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9833, null);
    var i__9835 = 32;
    var out__9836 = cljs.core._as_transient.call(null, v__9834);
    while(true) {
      if(i__9835 < l__9831) {
        var G__9837 = i__9835 + 1;
        var G__9838 = cljs.core.conj_BANG_.call(null, out__9836, xs__9832[i__9835]);
        i__9835 = G__9837;
        out__9836 = G__9838;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9836)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9839) {
    var args = cljs.core.seq(arglist__9839);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31719660;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9840 = this;
  var h__2247__auto____9841 = this__9840.__hash;
  if(!(h__2247__auto____9841 == null)) {
    return h__2247__auto____9841
  }else {
    var h__2247__auto____9842 = cljs.core.hash_coll.call(null, coll);
    this__9840.__hash = h__2247__auto____9842;
    return h__2247__auto____9842
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9843 = this;
  if(this__9843.off + 1 < this__9843.node.length) {
    var s__9844 = cljs.core.chunked_seq.call(null, this__9843.vec, this__9843.node, this__9843.i, this__9843.off + 1);
    if(s__9844 == null) {
      return null
    }else {
      return s__9844
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9845 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9846 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9847 = this;
  return this__9847.node[this__9847.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9848 = this;
  if(this__9848.off + 1 < this__9848.node.length) {
    var s__9849 = cljs.core.chunked_seq.call(null, this__9848.vec, this__9848.node, this__9848.i, this__9848.off + 1);
    if(s__9849 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9849
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9850 = this;
  var l__9851 = this__9850.node.length;
  var s__9852 = this__9850.i + l__9851 < cljs.core._count.call(null, this__9850.vec) ? cljs.core.chunked_seq.call(null, this__9850.vec, this__9850.i + l__9851, 0) : null;
  if(s__9852 == null) {
    return null
  }else {
    return s__9852
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9853 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9854 = this;
  return cljs.core.chunked_seq.call(null, this__9854.vec, this__9854.node, this__9854.i, this__9854.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9855 = this;
  return this__9855.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9856 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9856.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9857 = this;
  return cljs.core.array_chunk.call(null, this__9857.node, this__9857.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9858 = this;
  var l__9859 = this__9858.node.length;
  var s__9860 = this__9858.i + l__9859 < cljs.core._count.call(null, this__9858.vec) ? cljs.core.chunked_seq.call(null, this__9858.vec, this__9858.i + l__9859, 0) : null;
  if(s__9860 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9860
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9863 = this;
  var h__2247__auto____9864 = this__9863.__hash;
  if(!(h__2247__auto____9864 == null)) {
    return h__2247__auto____9864
  }else {
    var h__2247__auto____9865 = cljs.core.hash_coll.call(null, coll);
    this__9863.__hash = h__2247__auto____9865;
    return h__2247__auto____9865
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9866 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9867 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9868 = this;
  var v_pos__9869 = this__9868.start + key;
  return new cljs.core.Subvec(this__9868.meta, cljs.core._assoc.call(null, this__9868.v, v_pos__9869, val), this__9868.start, this__9868.end > v_pos__9869 + 1 ? this__9868.end : v_pos__9869 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9895 = null;
  var G__9895__2 = function(this_sym9870, k) {
    var this__9872 = this;
    var this_sym9870__9873 = this;
    var coll__9874 = this_sym9870__9873;
    return coll__9874.cljs$core$ILookup$_lookup$arity$2(coll__9874, k)
  };
  var G__9895__3 = function(this_sym9871, k, not_found) {
    var this__9872 = this;
    var this_sym9871__9875 = this;
    var coll__9876 = this_sym9871__9875;
    return coll__9876.cljs$core$ILookup$_lookup$arity$3(coll__9876, k, not_found)
  };
  G__9895 = function(this_sym9871, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9895__2.call(this, this_sym9871, k);
      case 3:
        return G__9895__3.call(this, this_sym9871, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9895
}();
cljs.core.Subvec.prototype.apply = function(this_sym9861, args9862) {
  var this__9877 = this;
  return this_sym9861.call.apply(this_sym9861, [this_sym9861].concat(args9862.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9878 = this;
  return new cljs.core.Subvec(this__9878.meta, cljs.core._assoc_n.call(null, this__9878.v, this__9878.end, o), this__9878.start, this__9878.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9879 = this;
  var this__9880 = this;
  return cljs.core.pr_str.call(null, this__9880)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9881 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9882 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9883 = this;
  var subvec_seq__9884 = function subvec_seq(i) {
    if(i === this__9883.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9883.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9884.call(null, this__9883.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9885 = this;
  return this__9885.end - this__9885.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9886 = this;
  return cljs.core._nth.call(null, this__9886.v, this__9886.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9887 = this;
  if(this__9887.start === this__9887.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9887.meta, this__9887.v, this__9887.start, this__9887.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9888 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9889 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9890 = this;
  return new cljs.core.Subvec(meta, this__9890.v, this__9890.start, this__9890.end, this__9890.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9891 = this;
  return this__9891.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9892 = this;
  return cljs.core._nth.call(null, this__9892.v, this__9892.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9893 = this;
  return cljs.core._nth.call(null, this__9893.v, this__9893.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9894 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9894.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9897 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9897, 0, tl.length);
  return ret__9897
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9901 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9902 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9901, subidx__9902, level === 5 ? tail_node : function() {
    var child__9903 = cljs.core.pv_aget.call(null, ret__9901, subidx__9902);
    if(!(child__9903 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9903, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9901
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9908 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9909 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9910 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9908, subidx__9909));
    if(function() {
      var and__3822__auto____9911 = new_child__9910 == null;
      if(and__3822__auto____9911) {
        return subidx__9909 === 0
      }else {
        return and__3822__auto____9911
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9908, subidx__9909, new_child__9910);
      return node__9908
    }
  }else {
    if(subidx__9909 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9908, subidx__9909, null);
        return node__9908
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9916 = 0 <= i;
    if(and__3822__auto____9916) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9916
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9917 = tv.root;
      var node__9918 = root__9917;
      var level__9919 = tv.shift;
      while(true) {
        if(level__9919 > 0) {
          var G__9920 = cljs.core.tv_ensure_editable.call(null, root__9917.edit, cljs.core.pv_aget.call(null, node__9918, i >>> level__9919 & 31));
          var G__9921 = level__9919 - 5;
          node__9918 = G__9920;
          level__9919 = G__9921;
          continue
        }else {
          return node__9918.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9961 = null;
  var G__9961__2 = function(this_sym9924, k) {
    var this__9926 = this;
    var this_sym9924__9927 = this;
    var coll__9928 = this_sym9924__9927;
    return coll__9928.cljs$core$ILookup$_lookup$arity$2(coll__9928, k)
  };
  var G__9961__3 = function(this_sym9925, k, not_found) {
    var this__9926 = this;
    var this_sym9925__9929 = this;
    var coll__9930 = this_sym9925__9929;
    return coll__9930.cljs$core$ILookup$_lookup$arity$3(coll__9930, k, not_found)
  };
  G__9961 = function(this_sym9925, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9961__2.call(this, this_sym9925, k);
      case 3:
        return G__9961__3.call(this, this_sym9925, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9961
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9922, args9923) {
  var this__9931 = this;
  return this_sym9922.call.apply(this_sym9922, [this_sym9922].concat(args9923.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9932 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9933 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9934 = this;
  if(this__9934.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9935 = this;
  if(function() {
    var and__3822__auto____9936 = 0 <= n;
    if(and__3822__auto____9936) {
      return n < this__9935.cnt
    }else {
      return and__3822__auto____9936
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9937 = this;
  if(this__9937.root.edit) {
    return this__9937.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9938 = this;
  if(this__9938.root.edit) {
    if(function() {
      var and__3822__auto____9939 = 0 <= n;
      if(and__3822__auto____9939) {
        return n < this__9938.cnt
      }else {
        return and__3822__auto____9939
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9938.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9944 = function go(level, node) {
          var node__9942 = cljs.core.tv_ensure_editable.call(null, this__9938.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9942, n & 31, val);
            return node__9942
          }else {
            var subidx__9943 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9942, subidx__9943, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9942, subidx__9943)));
            return node__9942
          }
        }.call(null, this__9938.shift, this__9938.root);
        this__9938.root = new_root__9944;
        return tcoll
      }
    }else {
      if(n === this__9938.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9938.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9945 = this;
  if(this__9945.root.edit) {
    if(this__9945.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9945.cnt) {
        this__9945.cnt = 0;
        return tcoll
      }else {
        if((this__9945.cnt - 1 & 31) > 0) {
          this__9945.cnt = this__9945.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9946 = cljs.core.editable_array_for.call(null, tcoll, this__9945.cnt - 2);
            var new_root__9948 = function() {
              var nr__9947 = cljs.core.tv_pop_tail.call(null, tcoll, this__9945.shift, this__9945.root);
              if(!(nr__9947 == null)) {
                return nr__9947
              }else {
                return new cljs.core.VectorNode(this__9945.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9949 = 5 < this__9945.shift;
              if(and__3822__auto____9949) {
                return cljs.core.pv_aget.call(null, new_root__9948, 1) == null
              }else {
                return and__3822__auto____9949
              }
            }()) {
              var new_root__9950 = cljs.core.tv_ensure_editable.call(null, this__9945.root.edit, cljs.core.pv_aget.call(null, new_root__9948, 0));
              this__9945.root = new_root__9950;
              this__9945.shift = this__9945.shift - 5;
              this__9945.cnt = this__9945.cnt - 1;
              this__9945.tail = new_tail__9946;
              return tcoll
            }else {
              this__9945.root = new_root__9948;
              this__9945.cnt = this__9945.cnt - 1;
              this__9945.tail = new_tail__9946;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9951 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9952 = this;
  if(this__9952.root.edit) {
    if(this__9952.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9952.tail[this__9952.cnt & 31] = o;
      this__9952.cnt = this__9952.cnt + 1;
      return tcoll
    }else {
      var tail_node__9953 = new cljs.core.VectorNode(this__9952.root.edit, this__9952.tail);
      var new_tail__9954 = cljs.core.make_array.call(null, 32);
      new_tail__9954[0] = o;
      this__9952.tail = new_tail__9954;
      if(this__9952.cnt >>> 5 > 1 << this__9952.shift) {
        var new_root_array__9955 = cljs.core.make_array.call(null, 32);
        var new_shift__9956 = this__9952.shift + 5;
        new_root_array__9955[0] = this__9952.root;
        new_root_array__9955[1] = cljs.core.new_path.call(null, this__9952.root.edit, this__9952.shift, tail_node__9953);
        this__9952.root = new cljs.core.VectorNode(this__9952.root.edit, new_root_array__9955);
        this__9952.shift = new_shift__9956;
        this__9952.cnt = this__9952.cnt + 1;
        return tcoll
      }else {
        var new_root__9957 = cljs.core.tv_push_tail.call(null, tcoll, this__9952.shift, this__9952.root, tail_node__9953);
        this__9952.root = new_root__9957;
        this__9952.cnt = this__9952.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9958 = this;
  if(this__9958.root.edit) {
    this__9958.root.edit = null;
    var len__9959 = this__9958.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9960 = cljs.core.make_array.call(null, len__9959);
    cljs.core.array_copy.call(null, this__9958.tail, 0, trimmed_tail__9960, 0, len__9959);
    return new cljs.core.PersistentVector(null, this__9958.cnt, this__9958.shift, this__9958.root, trimmed_tail__9960, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9962 = this;
  var h__2247__auto____9963 = this__9962.__hash;
  if(!(h__2247__auto____9963 == null)) {
    return h__2247__auto____9963
  }else {
    var h__2247__auto____9964 = cljs.core.hash_coll.call(null, coll);
    this__9962.__hash = h__2247__auto____9964;
    return h__2247__auto____9964
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9965 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9966 = this;
  var this__9967 = this;
  return cljs.core.pr_str.call(null, this__9967)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9968 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9969 = this;
  return cljs.core._first.call(null, this__9969.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9970 = this;
  var temp__3971__auto____9971 = cljs.core.next.call(null, this__9970.front);
  if(temp__3971__auto____9971) {
    var f1__9972 = temp__3971__auto____9971;
    return new cljs.core.PersistentQueueSeq(this__9970.meta, f1__9972, this__9970.rear, null)
  }else {
    if(this__9970.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9970.meta, this__9970.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9973 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9974 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9974.front, this__9974.rear, this__9974.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9975 = this;
  return this__9975.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9976 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9976.meta)
};
cljs.core.PersistentQueueSeq;
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9977 = this;
  var h__2247__auto____9978 = this__9977.__hash;
  if(!(h__2247__auto____9978 == null)) {
    return h__2247__auto____9978
  }else {
    var h__2247__auto____9979 = cljs.core.hash_coll.call(null, coll);
    this__9977.__hash = h__2247__auto____9979;
    return h__2247__auto____9979
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9980 = this;
  if(cljs.core.truth_(this__9980.front)) {
    return new cljs.core.PersistentQueue(this__9980.meta, this__9980.count + 1, this__9980.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9981 = this__9980.rear;
      if(cljs.core.truth_(or__3824__auto____9981)) {
        return or__3824__auto____9981
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9980.meta, this__9980.count + 1, cljs.core.conj.call(null, this__9980.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9982 = this;
  var this__9983 = this;
  return cljs.core.pr_str.call(null, this__9983)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9984 = this;
  var rear__9985 = cljs.core.seq.call(null, this__9984.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9986 = this__9984.front;
    if(cljs.core.truth_(or__3824__auto____9986)) {
      return or__3824__auto____9986
    }else {
      return rear__9985
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9984.front, cljs.core.seq.call(null, rear__9985), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9987 = this;
  return this__9987.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9988 = this;
  return cljs.core._first.call(null, this__9988.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9989 = this;
  if(cljs.core.truth_(this__9989.front)) {
    var temp__3971__auto____9990 = cljs.core.next.call(null, this__9989.front);
    if(temp__3971__auto____9990) {
      var f1__9991 = temp__3971__auto____9990;
      return new cljs.core.PersistentQueue(this__9989.meta, this__9989.count - 1, f1__9991, this__9989.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9989.meta, this__9989.count - 1, cljs.core.seq.call(null, this__9989.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9992 = this;
  return cljs.core.first.call(null, this__9992.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9993 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9994 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9995 = this;
  return new cljs.core.PersistentQueue(meta, this__9995.count, this__9995.front, this__9995.rear, this__9995.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9996 = this;
  return this__9996.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9997 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9998 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__10001 = array.length;
  var i__10002 = 0;
  while(true) {
    if(i__10002 < len__10001) {
      if(k === array[i__10002]) {
        return i__10002
      }else {
        var G__10003 = i__10002 + incr;
        i__10002 = G__10003;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__10006 = cljs.core.hash.call(null, a);
  var b__10007 = cljs.core.hash.call(null, b);
  if(a__10006 < b__10007) {
    return-1
  }else {
    if(a__10006 > b__10007) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__10015 = m.keys;
  var len__10016 = ks__10015.length;
  var so__10017 = m.strobj;
  var out__10018 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__10019 = 0;
  var out__10020 = cljs.core.transient$.call(null, out__10018);
  while(true) {
    if(i__10019 < len__10016) {
      var k__10021 = ks__10015[i__10019];
      var G__10022 = i__10019 + 1;
      var G__10023 = cljs.core.assoc_BANG_.call(null, out__10020, k__10021, so__10017[k__10021]);
      i__10019 = G__10022;
      out__10020 = G__10023;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__10020, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__10029 = {};
  var l__10030 = ks.length;
  var i__10031 = 0;
  while(true) {
    if(i__10031 < l__10030) {
      var k__10032 = ks[i__10031];
      new_obj__10029[k__10032] = obj[k__10032];
      var G__10033 = i__10031 + 1;
      i__10031 = G__10033;
      continue
    }else {
    }
    break
  }
  return new_obj__10029
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10036 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10037 = this;
  var h__2247__auto____10038 = this__10037.__hash;
  if(!(h__2247__auto____10038 == null)) {
    return h__2247__auto____10038
  }else {
    var h__2247__auto____10039 = cljs.core.hash_imap.call(null, coll);
    this__10037.__hash = h__2247__auto____10039;
    return h__2247__auto____10039
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10040 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10041 = this;
  if(function() {
    var and__3822__auto____10042 = goog.isString(k);
    if(and__3822__auto____10042) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10041.keys) == null)
    }else {
      return and__3822__auto____10042
    }
  }()) {
    return this__10041.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10043 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____10044 = this__10043.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____10044) {
        return or__3824__auto____10044
      }else {
        return this__10043.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__10043.keys) == null)) {
        var new_strobj__10045 = cljs.core.obj_clone.call(null, this__10043.strobj, this__10043.keys);
        new_strobj__10045[k] = v;
        return new cljs.core.ObjMap(this__10043.meta, this__10043.keys, new_strobj__10045, this__10043.update_count + 1, null)
      }else {
        var new_strobj__10046 = cljs.core.obj_clone.call(null, this__10043.strobj, this__10043.keys);
        var new_keys__10047 = this__10043.keys.slice();
        new_strobj__10046[k] = v;
        new_keys__10047.push(k);
        return new cljs.core.ObjMap(this__10043.meta, new_keys__10047, new_strobj__10046, this__10043.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10048 = this;
  if(function() {
    var and__3822__auto____10049 = goog.isString(k);
    if(and__3822__auto____10049) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10048.keys) == null)
    }else {
      return and__3822__auto____10049
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10071 = null;
  var G__10071__2 = function(this_sym10050, k) {
    var this__10052 = this;
    var this_sym10050__10053 = this;
    var coll__10054 = this_sym10050__10053;
    return coll__10054.cljs$core$ILookup$_lookup$arity$2(coll__10054, k)
  };
  var G__10071__3 = function(this_sym10051, k, not_found) {
    var this__10052 = this;
    var this_sym10051__10055 = this;
    var coll__10056 = this_sym10051__10055;
    return coll__10056.cljs$core$ILookup$_lookup$arity$3(coll__10056, k, not_found)
  };
  G__10071 = function(this_sym10051, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10071__2.call(this, this_sym10051, k);
      case 3:
        return G__10071__3.call(this, this_sym10051, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10071
}();
cljs.core.ObjMap.prototype.apply = function(this_sym10034, args10035) {
  var this__10057 = this;
  return this_sym10034.call.apply(this_sym10034, [this_sym10034].concat(args10035.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10058 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__10059 = this;
  var this__10060 = this;
  return cljs.core.pr_str.call(null, this__10060)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10061 = this;
  if(this__10061.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10024_SHARP_) {
      return cljs.core.vector.call(null, p1__10024_SHARP_, this__10061.strobj[p1__10024_SHARP_])
    }, this__10061.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10062 = this;
  return this__10062.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10063 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10064 = this;
  return new cljs.core.ObjMap(meta, this__10064.keys, this__10064.strobj, this__10064.update_count, this__10064.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10065 = this;
  return this__10065.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10066 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__10066.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10067 = this;
  if(function() {
    var and__3822__auto____10068 = goog.isString(k);
    if(and__3822__auto____10068) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10067.keys) == null)
    }else {
      return and__3822__auto____10068
    }
  }()) {
    var new_keys__10069 = this__10067.keys.slice();
    var new_strobj__10070 = cljs.core.obj_clone.call(null, this__10067.strobj, this__10067.keys);
    new_keys__10069.splice(cljs.core.scan_array.call(null, 1, k, new_keys__10069), 1);
    cljs.core.js_delete.call(null, new_strobj__10070, k);
    return new cljs.core.ObjMap(this__10067.meta, new_keys__10069, new_strobj__10070, this__10067.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
goog.provide("cljs.core.HashMap");
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10075 = this;
  var h__2247__auto____10076 = this__10075.__hash;
  if(!(h__2247__auto____10076 == null)) {
    return h__2247__auto____10076
  }else {
    var h__2247__auto____10077 = cljs.core.hash_imap.call(null, coll);
    this__10075.__hash = h__2247__auto____10077;
    return h__2247__auto____10077
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10078 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10079 = this;
  var bucket__10080 = this__10079.hashobj[cljs.core.hash.call(null, k)];
  var i__10081 = cljs.core.truth_(bucket__10080) ? cljs.core.scan_array.call(null, 2, k, bucket__10080) : null;
  if(cljs.core.truth_(i__10081)) {
    return bucket__10080[i__10081 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10082 = this;
  var h__10083 = cljs.core.hash.call(null, k);
  var bucket__10084 = this__10082.hashobj[h__10083];
  if(cljs.core.truth_(bucket__10084)) {
    var new_bucket__10085 = bucket__10084.slice();
    var new_hashobj__10086 = goog.object.clone(this__10082.hashobj);
    new_hashobj__10086[h__10083] = new_bucket__10085;
    var temp__3971__auto____10087 = cljs.core.scan_array.call(null, 2, k, new_bucket__10085);
    if(cljs.core.truth_(temp__3971__auto____10087)) {
      var i__10088 = temp__3971__auto____10087;
      new_bucket__10085[i__10088 + 1] = v;
      return new cljs.core.HashMap(this__10082.meta, this__10082.count, new_hashobj__10086, null)
    }else {
      new_bucket__10085.push(k, v);
      return new cljs.core.HashMap(this__10082.meta, this__10082.count + 1, new_hashobj__10086, null)
    }
  }else {
    var new_hashobj__10089 = goog.object.clone(this__10082.hashobj);
    new_hashobj__10089[h__10083] = [k, v];
    return new cljs.core.HashMap(this__10082.meta, this__10082.count + 1, new_hashobj__10089, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10090 = this;
  var bucket__10091 = this__10090.hashobj[cljs.core.hash.call(null, k)];
  var i__10092 = cljs.core.truth_(bucket__10091) ? cljs.core.scan_array.call(null, 2, k, bucket__10091) : null;
  if(cljs.core.truth_(i__10092)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10117 = null;
  var G__10117__2 = function(this_sym10093, k) {
    var this__10095 = this;
    var this_sym10093__10096 = this;
    var coll__10097 = this_sym10093__10096;
    return coll__10097.cljs$core$ILookup$_lookup$arity$2(coll__10097, k)
  };
  var G__10117__3 = function(this_sym10094, k, not_found) {
    var this__10095 = this;
    var this_sym10094__10098 = this;
    var coll__10099 = this_sym10094__10098;
    return coll__10099.cljs$core$ILookup$_lookup$arity$3(coll__10099, k, not_found)
  };
  G__10117 = function(this_sym10094, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10117__2.call(this, this_sym10094, k);
      case 3:
        return G__10117__3.call(this, this_sym10094, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10117
}();
cljs.core.HashMap.prototype.apply = function(this_sym10073, args10074) {
  var this__10100 = this;
  return this_sym10073.call.apply(this_sym10073, [this_sym10073].concat(args10074.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10101 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10102 = this;
  var this__10103 = this;
  return cljs.core.pr_str.call(null, this__10103)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10104 = this;
  if(this__10104.count > 0) {
    var hashes__10105 = cljs.core.js_keys.call(null, this__10104.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__10072_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10104.hashobj[p1__10072_SHARP_]))
    }, hashes__10105)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10106 = this;
  return this__10106.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10107 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10108 = this;
  return new cljs.core.HashMap(meta, this__10108.count, this__10108.hashobj, this__10108.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10109 = this;
  return this__10109.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10110 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10110.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10111 = this;
  var h__10112 = cljs.core.hash.call(null, k);
  var bucket__10113 = this__10111.hashobj[h__10112];
  var i__10114 = cljs.core.truth_(bucket__10113) ? cljs.core.scan_array.call(null, 2, k, bucket__10113) : null;
  if(cljs.core.not.call(null, i__10114)) {
    return coll
  }else {
    var new_hashobj__10115 = goog.object.clone(this__10111.hashobj);
    if(3 > bucket__10113.length) {
      cljs.core.js_delete.call(null, new_hashobj__10115, h__10112)
    }else {
      var new_bucket__10116 = bucket__10113.slice();
      new_bucket__10116.splice(i__10114, 2);
      new_hashobj__10115[h__10112] = new_bucket__10116
    }
    return new cljs.core.HashMap(this__10111.meta, this__10111.count - 1, new_hashobj__10115, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10118 = ks.length;
  var i__10119 = 0;
  var out__10120 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10119 < len__10118) {
      var G__10121 = i__10119 + 1;
      var G__10122 = cljs.core.assoc.call(null, out__10120, ks[i__10119], vs[i__10119]);
      i__10119 = G__10121;
      out__10120 = G__10122;
      continue
    }else {
      return out__10120
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10126 = m.arr;
  var len__10127 = arr__10126.length;
  var i__10128 = 0;
  while(true) {
    if(len__10127 <= i__10128) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10126[i__10128], k)) {
        return i__10128
      }else {
        if("\ufdd0'else") {
          var G__10129 = i__10128 + 2;
          i__10128 = G__10129;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10132 = this;
  return new cljs.core.TransientArrayMap({}, this__10132.arr.length, this__10132.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10133 = this;
  var h__2247__auto____10134 = this__10133.__hash;
  if(!(h__2247__auto____10134 == null)) {
    return h__2247__auto____10134
  }else {
    var h__2247__auto____10135 = cljs.core.hash_imap.call(null, coll);
    this__10133.__hash = h__2247__auto____10135;
    return h__2247__auto____10135
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10136 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10137 = this;
  var idx__10138 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10138 === -1) {
    return not_found
  }else {
    return this__10137.arr[idx__10138 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10139 = this;
  var idx__10140 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10140 === -1) {
    if(this__10139.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__10139.meta, this__10139.cnt + 1, function() {
        var G__10141__10142 = this__10139.arr.slice();
        G__10141__10142.push(k);
        G__10141__10142.push(v);
        return G__10141__10142
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__10139.arr[idx__10140 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__10139.meta, this__10139.cnt, function() {
          var G__10143__10144 = this__10139.arr.slice();
          G__10143__10144[idx__10140 + 1] = v;
          return G__10143__10144
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10145 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10177 = null;
  var G__10177__2 = function(this_sym10146, k) {
    var this__10148 = this;
    var this_sym10146__10149 = this;
    var coll__10150 = this_sym10146__10149;
    return coll__10150.cljs$core$ILookup$_lookup$arity$2(coll__10150, k)
  };
  var G__10177__3 = function(this_sym10147, k, not_found) {
    var this__10148 = this;
    var this_sym10147__10151 = this;
    var coll__10152 = this_sym10147__10151;
    return coll__10152.cljs$core$ILookup$_lookup$arity$3(coll__10152, k, not_found)
  };
  G__10177 = function(this_sym10147, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10177__2.call(this, this_sym10147, k);
      case 3:
        return G__10177__3.call(this, this_sym10147, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10177
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10130, args10131) {
  var this__10153 = this;
  return this_sym10130.call.apply(this_sym10130, [this_sym10130].concat(args10131.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10154 = this;
  var len__10155 = this__10154.arr.length;
  var i__10156 = 0;
  var init__10157 = init;
  while(true) {
    if(i__10156 < len__10155) {
      var init__10158 = f.call(null, init__10157, this__10154.arr[i__10156], this__10154.arr[i__10156 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10158)) {
        return cljs.core.deref.call(null, init__10158)
      }else {
        var G__10178 = i__10156 + 2;
        var G__10179 = init__10158;
        i__10156 = G__10178;
        init__10157 = G__10179;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10159 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10160 = this;
  var this__10161 = this;
  return cljs.core.pr_str.call(null, this__10161)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10162 = this;
  if(this__10162.cnt > 0) {
    var len__10163 = this__10162.arr.length;
    var array_map_seq__10164 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10163) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10162.arr[i], this__10162.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10164.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10165 = this;
  return this__10165.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10166 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10167 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10167.cnt, this__10167.arr, this__10167.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10168 = this;
  return this__10168.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10169 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10169.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10170 = this;
  var idx__10171 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10171 >= 0) {
    var len__10172 = this__10170.arr.length;
    var new_len__10173 = len__10172 - 2;
    if(new_len__10173 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10174 = cljs.core.make_array.call(null, new_len__10173);
      var s__10175 = 0;
      var d__10176 = 0;
      while(true) {
        if(s__10175 >= len__10172) {
          return new cljs.core.PersistentArrayMap(this__10170.meta, this__10170.cnt - 1, new_arr__10174, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10170.arr[s__10175])) {
            var G__10180 = s__10175 + 2;
            var G__10181 = d__10176;
            s__10175 = G__10180;
            d__10176 = G__10181;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10174[d__10176] = this__10170.arr[s__10175];
              new_arr__10174[d__10176 + 1] = this__10170.arr[s__10175 + 1];
              var G__10182 = s__10175 + 2;
              var G__10183 = d__10176 + 2;
              s__10175 = G__10182;
              d__10176 = G__10183;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10184 = cljs.core.count.call(null, ks);
  var i__10185 = 0;
  var out__10186 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10185 < len__10184) {
      var G__10187 = i__10185 + 1;
      var G__10188 = cljs.core.assoc_BANG_.call(null, out__10186, ks[i__10185], vs[i__10185]);
      i__10185 = G__10187;
      out__10186 = G__10188;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10186)
    }
    break
  }
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10189 = this;
  if(cljs.core.truth_(this__10189.editable_QMARK_)) {
    var idx__10190 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10190 >= 0) {
      this__10189.arr[idx__10190] = this__10189.arr[this__10189.len - 2];
      this__10189.arr[idx__10190 + 1] = this__10189.arr[this__10189.len - 1];
      var G__10191__10192 = this__10189.arr;
      G__10191__10192.pop();
      G__10191__10192.pop();
      G__10191__10192;
      this__10189.len = this__10189.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10193 = this;
  if(cljs.core.truth_(this__10193.editable_QMARK_)) {
    var idx__10194 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10194 === -1) {
      if(this__10193.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10193.len = this__10193.len + 2;
        this__10193.arr.push(key);
        this__10193.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10193.len, this__10193.arr), key, val)
      }
    }else {
      if(val === this__10193.arr[idx__10194 + 1]) {
        return tcoll
      }else {
        this__10193.arr[idx__10194 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10195 = this;
  if(cljs.core.truth_(this__10195.editable_QMARK_)) {
    if(function() {
      var G__10196__10197 = o;
      if(G__10196__10197) {
        if(function() {
          var or__3824__auto____10198 = G__10196__10197.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10198) {
            return or__3824__auto____10198
          }else {
            return G__10196__10197.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10196__10197.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10196__10197)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10196__10197)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10199 = cljs.core.seq.call(null, o);
      var tcoll__10200 = tcoll;
      while(true) {
        var temp__3971__auto____10201 = cljs.core.first.call(null, es__10199);
        if(cljs.core.truth_(temp__3971__auto____10201)) {
          var e__10202 = temp__3971__auto____10201;
          var G__10208 = cljs.core.next.call(null, es__10199);
          var G__10209 = tcoll__10200.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10200, cljs.core.key.call(null, e__10202), cljs.core.val.call(null, e__10202));
          es__10199 = G__10208;
          tcoll__10200 = G__10209;
          continue
        }else {
          return tcoll__10200
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10203 = this;
  if(cljs.core.truth_(this__10203.editable_QMARK_)) {
    this__10203.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10203.len, 2), this__10203.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10204 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10205 = this;
  if(cljs.core.truth_(this__10205.editable_QMARK_)) {
    var idx__10206 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10206 === -1) {
      return not_found
    }else {
      return this__10205.arr[idx__10206 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10207 = this;
  if(cljs.core.truth_(this__10207.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10207.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10212 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10213 = 0;
  while(true) {
    if(i__10213 < len) {
      var G__10214 = cljs.core.assoc_BANG_.call(null, out__10212, arr[i__10213], arr[i__10213 + 1]);
      var G__10215 = i__10213 + 2;
      out__10212 = G__10214;
      i__10213 = G__10215;
      continue
    }else {
      return out__10212
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2368__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__2368__auto__, writer__2369__auto__) {
  return cljs.core._write.call(null, writer__2369__auto__, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10220__10221 = arr.slice();
    G__10220__10221[i] = a;
    return G__10220__10221
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10222__10223 = arr.slice();
    G__10222__10223[i] = a;
    G__10222__10223[j] = b;
    return G__10222__10223
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10225 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10225, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10225, 2 * i, new_arr__10225.length - 2 * i);
  return new_arr__10225
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10228 = inode.ensure_editable(edit);
    editable__10228.arr[i] = a;
    return editable__10228
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10229 = inode.ensure_editable(edit);
    editable__10229.arr[i] = a;
    editable__10229.arr[j] = b;
    return editable__10229
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10236 = arr.length;
  var i__10237 = 0;
  var init__10238 = init;
  while(true) {
    if(i__10237 < len__10236) {
      var init__10241 = function() {
        var k__10239 = arr[i__10237];
        if(!(k__10239 == null)) {
          return f.call(null, init__10238, k__10239, arr[i__10237 + 1])
        }else {
          var node__10240 = arr[i__10237 + 1];
          if(!(node__10240 == null)) {
            return node__10240.kv_reduce(f, init__10238)
          }else {
            return init__10238
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10241)) {
        return cljs.core.deref.call(null, init__10241)
      }else {
        var G__10242 = i__10237 + 2;
        var G__10243 = init__10241;
        i__10237 = G__10242;
        init__10238 = G__10243;
        continue
      }
    }else {
      return init__10238
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10244 = this;
  var inode__10245 = this;
  if(this__10244.bitmap === bit) {
    return null
  }else {
    var editable__10246 = inode__10245.ensure_editable(e);
    var earr__10247 = editable__10246.arr;
    var len__10248 = earr__10247.length;
    editable__10246.bitmap = bit ^ editable__10246.bitmap;
    cljs.core.array_copy.call(null, earr__10247, 2 * (i + 1), earr__10247, 2 * i, len__10248 - 2 * (i + 1));
    earr__10247[len__10248 - 2] = null;
    earr__10247[len__10248 - 1] = null;
    return editable__10246
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10249 = this;
  var inode__10250 = this;
  var bit__10251 = 1 << (hash >>> shift & 31);
  var idx__10252 = cljs.core.bitmap_indexed_node_index.call(null, this__10249.bitmap, bit__10251);
  if((this__10249.bitmap & bit__10251) === 0) {
    var n__10253 = cljs.core.bit_count.call(null, this__10249.bitmap);
    if(2 * n__10253 < this__10249.arr.length) {
      var editable__10254 = inode__10250.ensure_editable(edit);
      var earr__10255 = editable__10254.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10255, 2 * idx__10252, earr__10255, 2 * (idx__10252 + 1), 2 * (n__10253 - idx__10252));
      earr__10255[2 * idx__10252] = key;
      earr__10255[2 * idx__10252 + 1] = val;
      editable__10254.bitmap = editable__10254.bitmap | bit__10251;
      return editable__10254
    }else {
      if(n__10253 >= 16) {
        var nodes__10256 = cljs.core.make_array.call(null, 32);
        var jdx__10257 = hash >>> shift & 31;
        nodes__10256[jdx__10257] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10258 = 0;
        var j__10259 = 0;
        while(true) {
          if(i__10258 < 32) {
            if((this__10249.bitmap >>> i__10258 & 1) === 0) {
              var G__10312 = i__10258 + 1;
              var G__10313 = j__10259;
              i__10258 = G__10312;
              j__10259 = G__10313;
              continue
            }else {
              nodes__10256[i__10258] = !(this__10249.arr[j__10259] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10249.arr[j__10259]), this__10249.arr[j__10259], this__10249.arr[j__10259 + 1], added_leaf_QMARK_) : this__10249.arr[j__10259 + 1];
              var G__10314 = i__10258 + 1;
              var G__10315 = j__10259 + 2;
              i__10258 = G__10314;
              j__10259 = G__10315;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10253 + 1, nodes__10256)
      }else {
        if("\ufdd0'else") {
          var new_arr__10260 = cljs.core.make_array.call(null, 2 * (n__10253 + 4));
          cljs.core.array_copy.call(null, this__10249.arr, 0, new_arr__10260, 0, 2 * idx__10252);
          new_arr__10260[2 * idx__10252] = key;
          new_arr__10260[2 * idx__10252 + 1] = val;
          cljs.core.array_copy.call(null, this__10249.arr, 2 * idx__10252, new_arr__10260, 2 * (idx__10252 + 1), 2 * (n__10253 - idx__10252));
          added_leaf_QMARK_.val = true;
          var editable__10261 = inode__10250.ensure_editable(edit);
          editable__10261.arr = new_arr__10260;
          editable__10261.bitmap = editable__10261.bitmap | bit__10251;
          return editable__10261
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10262 = this__10249.arr[2 * idx__10252];
    var val_or_node__10263 = this__10249.arr[2 * idx__10252 + 1];
    if(key_or_nil__10262 == null) {
      var n__10264 = val_or_node__10263.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10264 === val_or_node__10263) {
        return inode__10250
      }else {
        return cljs.core.edit_and_set.call(null, inode__10250, edit, 2 * idx__10252 + 1, n__10264)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10262)) {
        if(val === val_or_node__10263) {
          return inode__10250
        }else {
          return cljs.core.edit_and_set.call(null, inode__10250, edit, 2 * idx__10252 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10250, edit, 2 * idx__10252, null, 2 * idx__10252 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10262, val_or_node__10263, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10265 = this;
  var inode__10266 = this;
  return cljs.core.create_inode_seq.call(null, this__10265.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10267 = this;
  var inode__10268 = this;
  var bit__10269 = 1 << (hash >>> shift & 31);
  if((this__10267.bitmap & bit__10269) === 0) {
    return inode__10268
  }else {
    var idx__10270 = cljs.core.bitmap_indexed_node_index.call(null, this__10267.bitmap, bit__10269);
    var key_or_nil__10271 = this__10267.arr[2 * idx__10270];
    var val_or_node__10272 = this__10267.arr[2 * idx__10270 + 1];
    if(key_or_nil__10271 == null) {
      var n__10273 = val_or_node__10272.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10273 === val_or_node__10272) {
        return inode__10268
      }else {
        if(!(n__10273 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10268, edit, 2 * idx__10270 + 1, n__10273)
        }else {
          if(this__10267.bitmap === bit__10269) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10268.edit_and_remove_pair(edit, bit__10269, idx__10270)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10271)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10268.edit_and_remove_pair(edit, bit__10269, idx__10270)
      }else {
        if("\ufdd0'else") {
          return inode__10268
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10274 = this;
  var inode__10275 = this;
  if(e === this__10274.edit) {
    return inode__10275
  }else {
    var n__10276 = cljs.core.bit_count.call(null, this__10274.bitmap);
    var new_arr__10277 = cljs.core.make_array.call(null, n__10276 < 0 ? 4 : 2 * (n__10276 + 1));
    cljs.core.array_copy.call(null, this__10274.arr, 0, new_arr__10277, 0, 2 * n__10276);
    return new cljs.core.BitmapIndexedNode(e, this__10274.bitmap, new_arr__10277)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10278 = this;
  var inode__10279 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10278.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10280 = this;
  var inode__10281 = this;
  var bit__10282 = 1 << (hash >>> shift & 31);
  if((this__10280.bitmap & bit__10282) === 0) {
    return not_found
  }else {
    var idx__10283 = cljs.core.bitmap_indexed_node_index.call(null, this__10280.bitmap, bit__10282);
    var key_or_nil__10284 = this__10280.arr[2 * idx__10283];
    var val_or_node__10285 = this__10280.arr[2 * idx__10283 + 1];
    if(key_or_nil__10284 == null) {
      return val_or_node__10285.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10284)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10284, val_or_node__10285], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10286 = this;
  var inode__10287 = this;
  var bit__10288 = 1 << (hash >>> shift & 31);
  if((this__10286.bitmap & bit__10288) === 0) {
    return inode__10287
  }else {
    var idx__10289 = cljs.core.bitmap_indexed_node_index.call(null, this__10286.bitmap, bit__10288);
    var key_or_nil__10290 = this__10286.arr[2 * idx__10289];
    var val_or_node__10291 = this__10286.arr[2 * idx__10289 + 1];
    if(key_or_nil__10290 == null) {
      var n__10292 = val_or_node__10291.inode_without(shift + 5, hash, key);
      if(n__10292 === val_or_node__10291) {
        return inode__10287
      }else {
        if(!(n__10292 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10286.bitmap, cljs.core.clone_and_set.call(null, this__10286.arr, 2 * idx__10289 + 1, n__10292))
        }else {
          if(this__10286.bitmap === bit__10288) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10286.bitmap ^ bit__10288, cljs.core.remove_pair.call(null, this__10286.arr, idx__10289))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10290)) {
        return new cljs.core.BitmapIndexedNode(null, this__10286.bitmap ^ bit__10288, cljs.core.remove_pair.call(null, this__10286.arr, idx__10289))
      }else {
        if("\ufdd0'else") {
          return inode__10287
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10293 = this;
  var inode__10294 = this;
  var bit__10295 = 1 << (hash >>> shift & 31);
  var idx__10296 = cljs.core.bitmap_indexed_node_index.call(null, this__10293.bitmap, bit__10295);
  if((this__10293.bitmap & bit__10295) === 0) {
    var n__10297 = cljs.core.bit_count.call(null, this__10293.bitmap);
    if(n__10297 >= 16) {
      var nodes__10298 = cljs.core.make_array.call(null, 32);
      var jdx__10299 = hash >>> shift & 31;
      nodes__10298[jdx__10299] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10300 = 0;
      var j__10301 = 0;
      while(true) {
        if(i__10300 < 32) {
          if((this__10293.bitmap >>> i__10300 & 1) === 0) {
            var G__10316 = i__10300 + 1;
            var G__10317 = j__10301;
            i__10300 = G__10316;
            j__10301 = G__10317;
            continue
          }else {
            nodes__10298[i__10300] = !(this__10293.arr[j__10301] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10293.arr[j__10301]), this__10293.arr[j__10301], this__10293.arr[j__10301 + 1], added_leaf_QMARK_) : this__10293.arr[j__10301 + 1];
            var G__10318 = i__10300 + 1;
            var G__10319 = j__10301 + 2;
            i__10300 = G__10318;
            j__10301 = G__10319;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10297 + 1, nodes__10298)
    }else {
      var new_arr__10302 = cljs.core.make_array.call(null, 2 * (n__10297 + 1));
      cljs.core.array_copy.call(null, this__10293.arr, 0, new_arr__10302, 0, 2 * idx__10296);
      new_arr__10302[2 * idx__10296] = key;
      new_arr__10302[2 * idx__10296 + 1] = val;
      cljs.core.array_copy.call(null, this__10293.arr, 2 * idx__10296, new_arr__10302, 2 * (idx__10296 + 1), 2 * (n__10297 - idx__10296));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10293.bitmap | bit__10295, new_arr__10302)
    }
  }else {
    var key_or_nil__10303 = this__10293.arr[2 * idx__10296];
    var val_or_node__10304 = this__10293.arr[2 * idx__10296 + 1];
    if(key_or_nil__10303 == null) {
      var n__10305 = val_or_node__10304.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10305 === val_or_node__10304) {
        return inode__10294
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10293.bitmap, cljs.core.clone_and_set.call(null, this__10293.arr, 2 * idx__10296 + 1, n__10305))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10303)) {
        if(val === val_or_node__10304) {
          return inode__10294
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10293.bitmap, cljs.core.clone_and_set.call(null, this__10293.arr, 2 * idx__10296 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10293.bitmap, cljs.core.clone_and_set.call(null, this__10293.arr, 2 * idx__10296, null, 2 * idx__10296 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10303, val_or_node__10304, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10306 = this;
  var inode__10307 = this;
  var bit__10308 = 1 << (hash >>> shift & 31);
  if((this__10306.bitmap & bit__10308) === 0) {
    return not_found
  }else {
    var idx__10309 = cljs.core.bitmap_indexed_node_index.call(null, this__10306.bitmap, bit__10308);
    var key_or_nil__10310 = this__10306.arr[2 * idx__10309];
    var val_or_node__10311 = this__10306.arr[2 * idx__10309 + 1];
    if(key_or_nil__10310 == null) {
      return val_or_node__10311.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10310)) {
        return val_or_node__10311
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10327 = array_node.arr;
  var len__10328 = 2 * (array_node.cnt - 1);
  var new_arr__10329 = cljs.core.make_array.call(null, len__10328);
  var i__10330 = 0;
  var j__10331 = 1;
  var bitmap__10332 = 0;
  while(true) {
    if(i__10330 < len__10328) {
      if(function() {
        var and__3822__auto____10333 = !(i__10330 === idx);
        if(and__3822__auto____10333) {
          return!(arr__10327[i__10330] == null)
        }else {
          return and__3822__auto____10333
        }
      }()) {
        new_arr__10329[j__10331] = arr__10327[i__10330];
        var G__10334 = i__10330 + 1;
        var G__10335 = j__10331 + 2;
        var G__10336 = bitmap__10332 | 1 << i__10330;
        i__10330 = G__10334;
        j__10331 = G__10335;
        bitmap__10332 = G__10336;
        continue
      }else {
        var G__10337 = i__10330 + 1;
        var G__10338 = j__10331;
        var G__10339 = bitmap__10332;
        i__10330 = G__10337;
        j__10331 = G__10338;
        bitmap__10332 = G__10339;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10332, new_arr__10329)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10340 = this;
  var inode__10341 = this;
  var idx__10342 = hash >>> shift & 31;
  var node__10343 = this__10340.arr[idx__10342];
  if(node__10343 == null) {
    var editable__10344 = cljs.core.edit_and_set.call(null, inode__10341, edit, idx__10342, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10344.cnt = editable__10344.cnt + 1;
    return editable__10344
  }else {
    var n__10345 = node__10343.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10345 === node__10343) {
      return inode__10341
    }else {
      return cljs.core.edit_and_set.call(null, inode__10341, edit, idx__10342, n__10345)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10346 = this;
  var inode__10347 = this;
  return cljs.core.create_array_node_seq.call(null, this__10346.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10348 = this;
  var inode__10349 = this;
  var idx__10350 = hash >>> shift & 31;
  var node__10351 = this__10348.arr[idx__10350];
  if(node__10351 == null) {
    return inode__10349
  }else {
    var n__10352 = node__10351.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10352 === node__10351) {
      return inode__10349
    }else {
      if(n__10352 == null) {
        if(this__10348.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10349, edit, idx__10350)
        }else {
          var editable__10353 = cljs.core.edit_and_set.call(null, inode__10349, edit, idx__10350, n__10352);
          editable__10353.cnt = editable__10353.cnt - 1;
          return editable__10353
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10349, edit, idx__10350, n__10352)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10354 = this;
  var inode__10355 = this;
  if(e === this__10354.edit) {
    return inode__10355
  }else {
    return new cljs.core.ArrayNode(e, this__10354.cnt, this__10354.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10356 = this;
  var inode__10357 = this;
  var len__10358 = this__10356.arr.length;
  var i__10359 = 0;
  var init__10360 = init;
  while(true) {
    if(i__10359 < len__10358) {
      var node__10361 = this__10356.arr[i__10359];
      if(!(node__10361 == null)) {
        var init__10362 = node__10361.kv_reduce(f, init__10360);
        if(cljs.core.reduced_QMARK_.call(null, init__10362)) {
          return cljs.core.deref.call(null, init__10362)
        }else {
          var G__10381 = i__10359 + 1;
          var G__10382 = init__10362;
          i__10359 = G__10381;
          init__10360 = G__10382;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10360
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10363 = this;
  var inode__10364 = this;
  var idx__10365 = hash >>> shift & 31;
  var node__10366 = this__10363.arr[idx__10365];
  if(!(node__10366 == null)) {
    return node__10366.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10367 = this;
  var inode__10368 = this;
  var idx__10369 = hash >>> shift & 31;
  var node__10370 = this__10367.arr[idx__10369];
  if(!(node__10370 == null)) {
    var n__10371 = node__10370.inode_without(shift + 5, hash, key);
    if(n__10371 === node__10370) {
      return inode__10368
    }else {
      if(n__10371 == null) {
        if(this__10367.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10368, null, idx__10369)
        }else {
          return new cljs.core.ArrayNode(null, this__10367.cnt - 1, cljs.core.clone_and_set.call(null, this__10367.arr, idx__10369, n__10371))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10367.cnt, cljs.core.clone_and_set.call(null, this__10367.arr, idx__10369, n__10371))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10368
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10372 = this;
  var inode__10373 = this;
  var idx__10374 = hash >>> shift & 31;
  var node__10375 = this__10372.arr[idx__10374];
  if(node__10375 == null) {
    return new cljs.core.ArrayNode(null, this__10372.cnt + 1, cljs.core.clone_and_set.call(null, this__10372.arr, idx__10374, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10376 = node__10375.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10376 === node__10375) {
      return inode__10373
    }else {
      return new cljs.core.ArrayNode(null, this__10372.cnt, cljs.core.clone_and_set.call(null, this__10372.arr, idx__10374, n__10376))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10377 = this;
  var inode__10378 = this;
  var idx__10379 = hash >>> shift & 31;
  var node__10380 = this__10377.arr[idx__10379];
  if(!(node__10380 == null)) {
    return node__10380.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10385 = 2 * cnt;
  var i__10386 = 0;
  while(true) {
    if(i__10386 < lim__10385) {
      if(cljs.core.key_test.call(null, key, arr[i__10386])) {
        return i__10386
      }else {
        var G__10387 = i__10386 + 2;
        i__10386 = G__10387;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10388 = this;
  var inode__10389 = this;
  if(hash === this__10388.collision_hash) {
    var idx__10390 = cljs.core.hash_collision_node_find_index.call(null, this__10388.arr, this__10388.cnt, key);
    if(idx__10390 === -1) {
      if(this__10388.arr.length > 2 * this__10388.cnt) {
        var editable__10391 = cljs.core.edit_and_set.call(null, inode__10389, edit, 2 * this__10388.cnt, key, 2 * this__10388.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10391.cnt = editable__10391.cnt + 1;
        return editable__10391
      }else {
        var len__10392 = this__10388.arr.length;
        var new_arr__10393 = cljs.core.make_array.call(null, len__10392 + 2);
        cljs.core.array_copy.call(null, this__10388.arr, 0, new_arr__10393, 0, len__10392);
        new_arr__10393[len__10392] = key;
        new_arr__10393[len__10392 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10389.ensure_editable_array(edit, this__10388.cnt + 1, new_arr__10393)
      }
    }else {
      if(this__10388.arr[idx__10390 + 1] === val) {
        return inode__10389
      }else {
        return cljs.core.edit_and_set.call(null, inode__10389, edit, idx__10390 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10388.collision_hash >>> shift & 31), [null, inode__10389, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10394 = this;
  var inode__10395 = this;
  return cljs.core.create_inode_seq.call(null, this__10394.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10396 = this;
  var inode__10397 = this;
  var idx__10398 = cljs.core.hash_collision_node_find_index.call(null, this__10396.arr, this__10396.cnt, key);
  if(idx__10398 === -1) {
    return inode__10397
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10396.cnt === 1) {
      return null
    }else {
      var editable__10399 = inode__10397.ensure_editable(edit);
      var earr__10400 = editable__10399.arr;
      earr__10400[idx__10398] = earr__10400[2 * this__10396.cnt - 2];
      earr__10400[idx__10398 + 1] = earr__10400[2 * this__10396.cnt - 1];
      earr__10400[2 * this__10396.cnt - 1] = null;
      earr__10400[2 * this__10396.cnt - 2] = null;
      editable__10399.cnt = editable__10399.cnt - 1;
      return editable__10399
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10401 = this;
  var inode__10402 = this;
  if(e === this__10401.edit) {
    return inode__10402
  }else {
    var new_arr__10403 = cljs.core.make_array.call(null, 2 * (this__10401.cnt + 1));
    cljs.core.array_copy.call(null, this__10401.arr, 0, new_arr__10403, 0, 2 * this__10401.cnt);
    return new cljs.core.HashCollisionNode(e, this__10401.collision_hash, this__10401.cnt, new_arr__10403)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10404 = this;
  var inode__10405 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10404.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10406 = this;
  var inode__10407 = this;
  var idx__10408 = cljs.core.hash_collision_node_find_index.call(null, this__10406.arr, this__10406.cnt, key);
  if(idx__10408 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10406.arr[idx__10408])) {
      return cljs.core.PersistentVector.fromArray([this__10406.arr[idx__10408], this__10406.arr[idx__10408 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10409 = this;
  var inode__10410 = this;
  var idx__10411 = cljs.core.hash_collision_node_find_index.call(null, this__10409.arr, this__10409.cnt, key);
  if(idx__10411 === -1) {
    return inode__10410
  }else {
    if(this__10409.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10409.collision_hash, this__10409.cnt - 1, cljs.core.remove_pair.call(null, this__10409.arr, cljs.core.quot.call(null, idx__10411, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10412 = this;
  var inode__10413 = this;
  if(hash === this__10412.collision_hash) {
    var idx__10414 = cljs.core.hash_collision_node_find_index.call(null, this__10412.arr, this__10412.cnt, key);
    if(idx__10414 === -1) {
      var len__10415 = this__10412.arr.length;
      var new_arr__10416 = cljs.core.make_array.call(null, len__10415 + 2);
      cljs.core.array_copy.call(null, this__10412.arr, 0, new_arr__10416, 0, len__10415);
      new_arr__10416[len__10415] = key;
      new_arr__10416[len__10415 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10412.collision_hash, this__10412.cnt + 1, new_arr__10416)
    }else {
      if(cljs.core._EQ_.call(null, this__10412.arr[idx__10414], val)) {
        return inode__10413
      }else {
        return new cljs.core.HashCollisionNode(null, this__10412.collision_hash, this__10412.cnt, cljs.core.clone_and_set.call(null, this__10412.arr, idx__10414 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10412.collision_hash >>> shift & 31), [null, inode__10413])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10417 = this;
  var inode__10418 = this;
  var idx__10419 = cljs.core.hash_collision_node_find_index.call(null, this__10417.arr, this__10417.cnt, key);
  if(idx__10419 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10417.arr[idx__10419])) {
      return this__10417.arr[idx__10419 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10420 = this;
  var inode__10421 = this;
  if(e === this__10420.edit) {
    this__10420.arr = array;
    this__10420.cnt = count;
    return inode__10421
  }else {
    return new cljs.core.HashCollisionNode(this__10420.edit, this__10420.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10426 = cljs.core.hash.call(null, key1);
    if(key1hash__10426 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10426, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10427 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10426, key1, val1, added_leaf_QMARK___10427).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10427)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10428 = cljs.core.hash.call(null, key1);
    if(key1hash__10428 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10428, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10429 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10428, key1, val1, added_leaf_QMARK___10429).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10429)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10430 = this;
  var h__2247__auto____10431 = this__10430.__hash;
  if(!(h__2247__auto____10431 == null)) {
    return h__2247__auto____10431
  }else {
    var h__2247__auto____10432 = cljs.core.hash_coll.call(null, coll);
    this__10430.__hash = h__2247__auto____10432;
    return h__2247__auto____10432
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10433 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10434 = this;
  var this__10435 = this;
  return cljs.core.pr_str.call(null, this__10435)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10436 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10437 = this;
  if(this__10437.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10437.nodes[this__10437.i], this__10437.nodes[this__10437.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10437.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10438 = this;
  if(this__10438.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10438.nodes, this__10438.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10438.nodes, this__10438.i, cljs.core.next.call(null, this__10438.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10439 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10440 = this;
  return new cljs.core.NodeSeq(meta, this__10440.nodes, this__10440.i, this__10440.s, this__10440.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10441 = this;
  return this__10441.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10442 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10442.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10449 = nodes.length;
      var j__10450 = i;
      while(true) {
        if(j__10450 < len__10449) {
          if(!(nodes[j__10450] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10450, null, null)
          }else {
            var temp__3971__auto____10451 = nodes[j__10450 + 1];
            if(cljs.core.truth_(temp__3971__auto____10451)) {
              var node__10452 = temp__3971__auto____10451;
              var temp__3971__auto____10453 = node__10452.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10453)) {
                var node_seq__10454 = temp__3971__auto____10453;
                return new cljs.core.NodeSeq(null, nodes, j__10450 + 2, node_seq__10454, null)
              }else {
                var G__10455 = j__10450 + 2;
                j__10450 = G__10455;
                continue
              }
            }else {
              var G__10456 = j__10450 + 2;
              j__10450 = G__10456;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10457 = this;
  var h__2247__auto____10458 = this__10457.__hash;
  if(!(h__2247__auto____10458 == null)) {
    return h__2247__auto____10458
  }else {
    var h__2247__auto____10459 = cljs.core.hash_coll.call(null, coll);
    this__10457.__hash = h__2247__auto____10459;
    return h__2247__auto____10459
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10460 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10461 = this;
  var this__10462 = this;
  return cljs.core.pr_str.call(null, this__10462)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10463 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10464 = this;
  return cljs.core.first.call(null, this__10464.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10465 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10465.nodes, this__10465.i, cljs.core.next.call(null, this__10465.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10466 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10467 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10467.nodes, this__10467.i, this__10467.s, this__10467.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10468 = this;
  return this__10468.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10469 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10469.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10476 = nodes.length;
      var j__10477 = i;
      while(true) {
        if(j__10477 < len__10476) {
          var temp__3971__auto____10478 = nodes[j__10477];
          if(cljs.core.truth_(temp__3971__auto____10478)) {
            var nj__10479 = temp__3971__auto____10478;
            var temp__3971__auto____10480 = nj__10479.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10480)) {
              var ns__10481 = temp__3971__auto____10480;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10477 + 1, ns__10481, null)
            }else {
              var G__10482 = j__10477 + 1;
              j__10477 = G__10482;
              continue
            }
          }else {
            var G__10483 = j__10477 + 1;
            j__10477 = G__10483;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10486 = this;
  return new cljs.core.TransientHashMap({}, this__10486.root, this__10486.cnt, this__10486.has_nil_QMARK_, this__10486.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10487 = this;
  var h__2247__auto____10488 = this__10487.__hash;
  if(!(h__2247__auto____10488 == null)) {
    return h__2247__auto____10488
  }else {
    var h__2247__auto____10489 = cljs.core.hash_imap.call(null, coll);
    this__10487.__hash = h__2247__auto____10489;
    return h__2247__auto____10489
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10490 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10491 = this;
  if(k == null) {
    if(this__10491.has_nil_QMARK_) {
      return this__10491.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10491.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10491.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10492 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10493 = this__10492.has_nil_QMARK_;
      if(and__3822__auto____10493) {
        return v === this__10492.nil_val
      }else {
        return and__3822__auto____10493
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10492.meta, this__10492.has_nil_QMARK_ ? this__10492.cnt : this__10492.cnt + 1, this__10492.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10494 = new cljs.core.Box(false);
    var new_root__10495 = (this__10492.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10492.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10494);
    if(new_root__10495 === this__10492.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10492.meta, added_leaf_QMARK___10494.val ? this__10492.cnt + 1 : this__10492.cnt, new_root__10495, this__10492.has_nil_QMARK_, this__10492.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10496 = this;
  if(k == null) {
    return this__10496.has_nil_QMARK_
  }else {
    if(this__10496.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10496.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10519 = null;
  var G__10519__2 = function(this_sym10497, k) {
    var this__10499 = this;
    var this_sym10497__10500 = this;
    var coll__10501 = this_sym10497__10500;
    return coll__10501.cljs$core$ILookup$_lookup$arity$2(coll__10501, k)
  };
  var G__10519__3 = function(this_sym10498, k, not_found) {
    var this__10499 = this;
    var this_sym10498__10502 = this;
    var coll__10503 = this_sym10498__10502;
    return coll__10503.cljs$core$ILookup$_lookup$arity$3(coll__10503, k, not_found)
  };
  G__10519 = function(this_sym10498, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10519__2.call(this, this_sym10498, k);
      case 3:
        return G__10519__3.call(this, this_sym10498, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10519
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10484, args10485) {
  var this__10504 = this;
  return this_sym10484.call.apply(this_sym10484, [this_sym10484].concat(args10485.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10505 = this;
  var init__10506 = this__10505.has_nil_QMARK_ ? f.call(null, init, null, this__10505.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10506)) {
    return cljs.core.deref.call(null, init__10506)
  }else {
    if(!(this__10505.root == null)) {
      return this__10505.root.kv_reduce(f, init__10506)
    }else {
      if("\ufdd0'else") {
        return init__10506
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10507 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10508 = this;
  var this__10509 = this;
  return cljs.core.pr_str.call(null, this__10509)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10510 = this;
  if(this__10510.cnt > 0) {
    var s__10511 = !(this__10510.root == null) ? this__10510.root.inode_seq() : null;
    if(this__10510.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10510.nil_val], true), s__10511)
    }else {
      return s__10511
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10512 = this;
  return this__10512.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10513 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10514 = this;
  return new cljs.core.PersistentHashMap(meta, this__10514.cnt, this__10514.root, this__10514.has_nil_QMARK_, this__10514.nil_val, this__10514.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10515 = this;
  return this__10515.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10516 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10516.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10517 = this;
  if(k == null) {
    if(this__10517.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10517.meta, this__10517.cnt - 1, this__10517.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10517.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10518 = this__10517.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10518 === this__10517.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10517.meta, this__10517.cnt - 1, new_root__10518, this__10517.has_nil_QMARK_, this__10517.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10520 = ks.length;
  var i__10521 = 0;
  var out__10522 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10521 < len__10520) {
      var G__10523 = i__10521 + 1;
      var G__10524 = cljs.core.assoc_BANG_.call(null, out__10522, ks[i__10521], vs[i__10521]);
      i__10521 = G__10523;
      out__10522 = G__10524;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10522)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10525 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10526 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10527 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10528 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10529 = this;
  if(k == null) {
    if(this__10529.has_nil_QMARK_) {
      return this__10529.nil_val
    }else {
      return null
    }
  }else {
    if(this__10529.root == null) {
      return null
    }else {
      return this__10529.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10530 = this;
  if(k == null) {
    if(this__10530.has_nil_QMARK_) {
      return this__10530.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10530.root == null) {
      return not_found
    }else {
      return this__10530.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10531 = this;
  if(this__10531.edit) {
    return this__10531.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10532 = this;
  var tcoll__10533 = this;
  if(this__10532.edit) {
    if(function() {
      var G__10534__10535 = o;
      if(G__10534__10535) {
        if(function() {
          var or__3824__auto____10536 = G__10534__10535.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10536) {
            return or__3824__auto____10536
          }else {
            return G__10534__10535.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10534__10535.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10534__10535)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10534__10535)
      }
    }()) {
      return tcoll__10533.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10537 = cljs.core.seq.call(null, o);
      var tcoll__10538 = tcoll__10533;
      while(true) {
        var temp__3971__auto____10539 = cljs.core.first.call(null, es__10537);
        if(cljs.core.truth_(temp__3971__auto____10539)) {
          var e__10540 = temp__3971__auto____10539;
          var G__10551 = cljs.core.next.call(null, es__10537);
          var G__10552 = tcoll__10538.assoc_BANG_(cljs.core.key.call(null, e__10540), cljs.core.val.call(null, e__10540));
          es__10537 = G__10551;
          tcoll__10538 = G__10552;
          continue
        }else {
          return tcoll__10538
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10541 = this;
  var tcoll__10542 = this;
  if(this__10541.edit) {
    if(k == null) {
      if(this__10541.nil_val === v) {
      }else {
        this__10541.nil_val = v
      }
      if(this__10541.has_nil_QMARK_) {
      }else {
        this__10541.count = this__10541.count + 1;
        this__10541.has_nil_QMARK_ = true
      }
      return tcoll__10542
    }else {
      var added_leaf_QMARK___10543 = new cljs.core.Box(false);
      var node__10544 = (this__10541.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10541.root).inode_assoc_BANG_(this__10541.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10543);
      if(node__10544 === this__10541.root) {
      }else {
        this__10541.root = node__10544
      }
      if(added_leaf_QMARK___10543.val) {
        this__10541.count = this__10541.count + 1
      }else {
      }
      return tcoll__10542
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10545 = this;
  var tcoll__10546 = this;
  if(this__10545.edit) {
    if(k == null) {
      if(this__10545.has_nil_QMARK_) {
        this__10545.has_nil_QMARK_ = false;
        this__10545.nil_val = null;
        this__10545.count = this__10545.count - 1;
        return tcoll__10546
      }else {
        return tcoll__10546
      }
    }else {
      if(this__10545.root == null) {
        return tcoll__10546
      }else {
        var removed_leaf_QMARK___10547 = new cljs.core.Box(false);
        var node__10548 = this__10545.root.inode_without_BANG_(this__10545.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10547);
        if(node__10548 === this__10545.root) {
        }else {
          this__10545.root = node__10548
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10547[0])) {
          this__10545.count = this__10545.count - 1
        }else {
        }
        return tcoll__10546
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10549 = this;
  var tcoll__10550 = this;
  if(this__10549.edit) {
    this__10549.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10549.count, this__10549.root, this__10549.has_nil_QMARK_, this__10549.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10555 = node;
  var stack__10556 = stack;
  while(true) {
    if(!(t__10555 == null)) {
      var G__10557 = ascending_QMARK_ ? t__10555.left : t__10555.right;
      var G__10558 = cljs.core.conj.call(null, stack__10556, t__10555);
      t__10555 = G__10557;
      stack__10556 = G__10558;
      continue
    }else {
      return stack__10556
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10559 = this;
  var h__2247__auto____10560 = this__10559.__hash;
  if(!(h__2247__auto____10560 == null)) {
    return h__2247__auto____10560
  }else {
    var h__2247__auto____10561 = cljs.core.hash_coll.call(null, coll);
    this__10559.__hash = h__2247__auto____10561;
    return h__2247__auto____10561
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10562 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10563 = this;
  var this__10564 = this;
  return cljs.core.pr_str.call(null, this__10564)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10565 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10566 = this;
  if(this__10566.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10566.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10567 = this;
  return cljs.core.peek.call(null, this__10567.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10568 = this;
  var t__10569 = cljs.core.first.call(null, this__10568.stack);
  var next_stack__10570 = cljs.core.tree_map_seq_push.call(null, this__10568.ascending_QMARK_ ? t__10569.right : t__10569.left, cljs.core.next.call(null, this__10568.stack), this__10568.ascending_QMARK_);
  if(!(next_stack__10570 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10570, this__10568.ascending_QMARK_, this__10568.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10571 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10572 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10572.stack, this__10572.ascending_QMARK_, this__10572.cnt, this__10572.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10573 = this;
  return this__10573.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10574 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10574.meta)
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10576 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10576) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10576
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10578 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10578) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10578
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10582 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10582)) {
    return cljs.core.deref.call(null, init__10582)
  }else {
    var init__10583 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10582) : init__10582;
    if(cljs.core.reduced_QMARK_.call(null, init__10583)) {
      return cljs.core.deref.call(null, init__10583)
    }else {
      var init__10584 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10583) : init__10583;
      if(cljs.core.reduced_QMARK_.call(null, init__10584)) {
        return cljs.core.deref.call(null, init__10584)
      }else {
        return init__10584
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10587 = this;
  var h__2247__auto____10588 = this__10587.__hash;
  if(!(h__2247__auto____10588 == null)) {
    return h__2247__auto____10588
  }else {
    var h__2247__auto____10589 = cljs.core.hash_coll.call(null, coll);
    this__10587.__hash = h__2247__auto____10589;
    return h__2247__auto____10589
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10590 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10591 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10592 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10592.key, this__10592.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10640 = null;
  var G__10640__2 = function(this_sym10593, k) {
    var this__10595 = this;
    var this_sym10593__10596 = this;
    var node__10597 = this_sym10593__10596;
    return node__10597.cljs$core$ILookup$_lookup$arity$2(node__10597, k)
  };
  var G__10640__3 = function(this_sym10594, k, not_found) {
    var this__10595 = this;
    var this_sym10594__10598 = this;
    var node__10599 = this_sym10594__10598;
    return node__10599.cljs$core$ILookup$_lookup$arity$3(node__10599, k, not_found)
  };
  G__10640 = function(this_sym10594, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10640__2.call(this, this_sym10594, k);
      case 3:
        return G__10640__3.call(this, this_sym10594, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10640
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10585, args10586) {
  var this__10600 = this;
  return this_sym10585.call.apply(this_sym10585, [this_sym10585].concat(args10586.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10601 = this;
  return cljs.core.PersistentVector.fromArray([this__10601.key, this__10601.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10602 = this;
  return this__10602.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10603 = this;
  return this__10603.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10604 = this;
  var node__10605 = this;
  return ins.balance_right(node__10605)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10606 = this;
  var node__10607 = this;
  return new cljs.core.RedNode(this__10606.key, this__10606.val, this__10606.left, this__10606.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10608 = this;
  var node__10609 = this;
  return cljs.core.balance_right_del.call(null, this__10608.key, this__10608.val, this__10608.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10610 = this;
  var node__10611 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10612 = this;
  var node__10613 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10613, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10614 = this;
  var node__10615 = this;
  return cljs.core.balance_left_del.call(null, this__10614.key, this__10614.val, del, this__10614.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10616 = this;
  var node__10617 = this;
  return ins.balance_left(node__10617)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10618 = this;
  var node__10619 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10619, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10641 = null;
  var G__10641__0 = function() {
    var this__10620 = this;
    var this__10622 = this;
    return cljs.core.pr_str.call(null, this__10622)
  };
  G__10641 = function() {
    switch(arguments.length) {
      case 0:
        return G__10641__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10641
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10623 = this;
  var node__10624 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10624, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10625 = this;
  var node__10626 = this;
  return node__10626
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10627 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10628 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10629 = this;
  return cljs.core.list.call(null, this__10629.key, this__10629.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10630 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10631 = this;
  return this__10631.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10632 = this;
  return cljs.core.PersistentVector.fromArray([this__10632.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10633 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10633.key, this__10633.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10634 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10635 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10635.key, this__10635.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10636 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10637 = this;
  if(n === 0) {
    return this__10637.key
  }else {
    if(n === 1) {
      return this__10637.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10638 = this;
  if(n === 0) {
    return this__10638.key
  }else {
    if(n === 1) {
      return this__10638.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10639 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10644 = this;
  var h__2247__auto____10645 = this__10644.__hash;
  if(!(h__2247__auto____10645 == null)) {
    return h__2247__auto____10645
  }else {
    var h__2247__auto____10646 = cljs.core.hash_coll.call(null, coll);
    this__10644.__hash = h__2247__auto____10646;
    return h__2247__auto____10646
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10647 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10648 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10649 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10649.key, this__10649.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10697 = null;
  var G__10697__2 = function(this_sym10650, k) {
    var this__10652 = this;
    var this_sym10650__10653 = this;
    var node__10654 = this_sym10650__10653;
    return node__10654.cljs$core$ILookup$_lookup$arity$2(node__10654, k)
  };
  var G__10697__3 = function(this_sym10651, k, not_found) {
    var this__10652 = this;
    var this_sym10651__10655 = this;
    var node__10656 = this_sym10651__10655;
    return node__10656.cljs$core$ILookup$_lookup$arity$3(node__10656, k, not_found)
  };
  G__10697 = function(this_sym10651, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10697__2.call(this, this_sym10651, k);
      case 3:
        return G__10697__3.call(this, this_sym10651, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10697
}();
cljs.core.RedNode.prototype.apply = function(this_sym10642, args10643) {
  var this__10657 = this;
  return this_sym10642.call.apply(this_sym10642, [this_sym10642].concat(args10643.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10658 = this;
  return cljs.core.PersistentVector.fromArray([this__10658.key, this__10658.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10659 = this;
  return this__10659.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10660 = this;
  return this__10660.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10661 = this;
  var node__10662 = this;
  return new cljs.core.RedNode(this__10661.key, this__10661.val, this__10661.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10663 = this;
  var node__10664 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10665 = this;
  var node__10666 = this;
  return new cljs.core.RedNode(this__10665.key, this__10665.val, this__10665.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10667 = this;
  var node__10668 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10669 = this;
  var node__10670 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10670, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10671 = this;
  var node__10672 = this;
  return new cljs.core.RedNode(this__10671.key, this__10671.val, del, this__10671.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10673 = this;
  var node__10674 = this;
  return new cljs.core.RedNode(this__10673.key, this__10673.val, ins, this__10673.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10675 = this;
  var node__10676 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10675.left)) {
    return new cljs.core.RedNode(this__10675.key, this__10675.val, this__10675.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10675.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10675.right)) {
      return new cljs.core.RedNode(this__10675.right.key, this__10675.right.val, new cljs.core.BlackNode(this__10675.key, this__10675.val, this__10675.left, this__10675.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10675.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10676, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10698 = null;
  var G__10698__0 = function() {
    var this__10677 = this;
    var this__10679 = this;
    return cljs.core.pr_str.call(null, this__10679)
  };
  G__10698 = function() {
    switch(arguments.length) {
      case 0:
        return G__10698__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10698
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10680 = this;
  var node__10681 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10680.right)) {
    return new cljs.core.RedNode(this__10680.key, this__10680.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10680.left, null), this__10680.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10680.left)) {
      return new cljs.core.RedNode(this__10680.left.key, this__10680.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10680.left.left, null), new cljs.core.BlackNode(this__10680.key, this__10680.val, this__10680.left.right, this__10680.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10681, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10682 = this;
  var node__10683 = this;
  return new cljs.core.BlackNode(this__10682.key, this__10682.val, this__10682.left, this__10682.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10684 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10685 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10686 = this;
  return cljs.core.list.call(null, this__10686.key, this__10686.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10687 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10688 = this;
  return this__10688.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10689 = this;
  return cljs.core.PersistentVector.fromArray([this__10689.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10690 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10690.key, this__10690.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10691 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10692 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10692.key, this__10692.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10693 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10694 = this;
  if(n === 0) {
    return this__10694.key
  }else {
    if(n === 1) {
      return this__10694.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10695 = this;
  if(n === 0) {
    return this__10695.key
  }else {
    if(n === 1) {
      return this__10695.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10696 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10702 = comp.call(null, k, tree.key);
    if(c__10702 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10702 < 0) {
        var ins__10703 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10703 == null)) {
          return tree.add_left(ins__10703)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10704 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10704 == null)) {
            return tree.add_right(ins__10704)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10707 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10707)) {
            return new cljs.core.RedNode(app__10707.key, app__10707.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10707.left, null), new cljs.core.RedNode(right.key, right.val, app__10707.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10707, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10708 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10708)) {
              return new cljs.core.RedNode(app__10708.key, app__10708.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10708.left, null), new cljs.core.BlackNode(right.key, right.val, app__10708.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10708, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10714 = comp.call(null, k, tree.key);
    if(c__10714 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10714 < 0) {
        var del__10715 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10716 = !(del__10715 == null);
          if(or__3824__auto____10716) {
            return or__3824__auto____10716
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10715, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10715, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10717 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10718 = !(del__10717 == null);
            if(or__3824__auto____10718) {
              return or__3824__auto____10718
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10717)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10717, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10721 = tree.key;
  var c__10722 = comp.call(null, k, tk__10721);
  if(c__10722 === 0) {
    return tree.replace(tk__10721, v, tree.left, tree.right)
  }else {
    if(c__10722 < 0) {
      return tree.replace(tk__10721, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10721, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10725 = this;
  var h__2247__auto____10726 = this__10725.__hash;
  if(!(h__2247__auto____10726 == null)) {
    return h__2247__auto____10726
  }else {
    var h__2247__auto____10727 = cljs.core.hash_imap.call(null, coll);
    this__10725.__hash = h__2247__auto____10727;
    return h__2247__auto____10727
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10728 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10729 = this;
  var n__10730 = coll.entry_at(k);
  if(!(n__10730 == null)) {
    return n__10730.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10731 = this;
  var found__10732 = [null];
  var t__10733 = cljs.core.tree_map_add.call(null, this__10731.comp, this__10731.tree, k, v, found__10732);
  if(t__10733 == null) {
    var found_node__10734 = cljs.core.nth.call(null, found__10732, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10734.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10731.comp, cljs.core.tree_map_replace.call(null, this__10731.comp, this__10731.tree, k, v), this__10731.cnt, this__10731.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10731.comp, t__10733.blacken(), this__10731.cnt + 1, this__10731.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10735 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10769 = null;
  var G__10769__2 = function(this_sym10736, k) {
    var this__10738 = this;
    var this_sym10736__10739 = this;
    var coll__10740 = this_sym10736__10739;
    return coll__10740.cljs$core$ILookup$_lookup$arity$2(coll__10740, k)
  };
  var G__10769__3 = function(this_sym10737, k, not_found) {
    var this__10738 = this;
    var this_sym10737__10741 = this;
    var coll__10742 = this_sym10737__10741;
    return coll__10742.cljs$core$ILookup$_lookup$arity$3(coll__10742, k, not_found)
  };
  G__10769 = function(this_sym10737, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10769__2.call(this, this_sym10737, k);
      case 3:
        return G__10769__3.call(this, this_sym10737, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10769
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10723, args10724) {
  var this__10743 = this;
  return this_sym10723.call.apply(this_sym10723, [this_sym10723].concat(args10724.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10744 = this;
  if(!(this__10744.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10744.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10745 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10746 = this;
  if(this__10746.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10746.tree, false, this__10746.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10747 = this;
  var this__10748 = this;
  return cljs.core.pr_str.call(null, this__10748)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10749 = this;
  var coll__10750 = this;
  var t__10751 = this__10749.tree;
  while(true) {
    if(!(t__10751 == null)) {
      var c__10752 = this__10749.comp.call(null, k, t__10751.key);
      if(c__10752 === 0) {
        return t__10751
      }else {
        if(c__10752 < 0) {
          var G__10770 = t__10751.left;
          t__10751 = G__10770;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10771 = t__10751.right;
            t__10751 = G__10771;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10753 = this;
  if(this__10753.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10753.tree, ascending_QMARK_, this__10753.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10754 = this;
  if(this__10754.cnt > 0) {
    var stack__10755 = null;
    var t__10756 = this__10754.tree;
    while(true) {
      if(!(t__10756 == null)) {
        var c__10757 = this__10754.comp.call(null, k, t__10756.key);
        if(c__10757 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10755, t__10756), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10757 < 0) {
              var G__10772 = cljs.core.conj.call(null, stack__10755, t__10756);
              var G__10773 = t__10756.left;
              stack__10755 = G__10772;
              t__10756 = G__10773;
              continue
            }else {
              var G__10774 = stack__10755;
              var G__10775 = t__10756.right;
              stack__10755 = G__10774;
              t__10756 = G__10775;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10757 > 0) {
                var G__10776 = cljs.core.conj.call(null, stack__10755, t__10756);
                var G__10777 = t__10756.right;
                stack__10755 = G__10776;
                t__10756 = G__10777;
                continue
              }else {
                var G__10778 = stack__10755;
                var G__10779 = t__10756.left;
                stack__10755 = G__10778;
                t__10756 = G__10779;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10755 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10755, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10758 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10759 = this;
  return this__10759.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10760 = this;
  if(this__10760.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10760.tree, true, this__10760.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10761 = this;
  return this__10761.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10762 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10763 = this;
  return new cljs.core.PersistentTreeMap(this__10763.comp, this__10763.tree, this__10763.cnt, meta, this__10763.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10764 = this;
  return this__10764.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10765 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10765.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10766 = this;
  var found__10767 = [null];
  var t__10768 = cljs.core.tree_map_remove.call(null, this__10766.comp, this__10766.tree, k, found__10767);
  if(t__10768 == null) {
    if(cljs.core.nth.call(null, found__10767, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10766.comp, null, 0, this__10766.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10766.comp, t__10768.blacken(), this__10766.cnt - 1, this__10766.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10782 = cljs.core.seq.call(null, keyvals);
    var out__10783 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10782) {
        var G__10784 = cljs.core.nnext.call(null, in__10782);
        var G__10785 = cljs.core.assoc_BANG_.call(null, out__10783, cljs.core.first.call(null, in__10782), cljs.core.second.call(null, in__10782));
        in__10782 = G__10784;
        out__10783 = G__10785;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10783)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10786) {
    var keyvals = cljs.core.seq(arglist__10786);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10787) {
    var keyvals = cljs.core.seq(arglist__10787);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10791 = [];
    var obj__10792 = {};
    var kvs__10793 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10793) {
        ks__10791.push(cljs.core.first.call(null, kvs__10793));
        obj__10792[cljs.core.first.call(null, kvs__10793)] = cljs.core.second.call(null, kvs__10793);
        var G__10794 = cljs.core.nnext.call(null, kvs__10793);
        kvs__10793 = G__10794;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10791, obj__10792)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10795) {
    var keyvals = cljs.core.seq(arglist__10795);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10798 = cljs.core.seq.call(null, keyvals);
    var out__10799 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10798) {
        var G__10800 = cljs.core.nnext.call(null, in__10798);
        var G__10801 = cljs.core.assoc.call(null, out__10799, cljs.core.first.call(null, in__10798), cljs.core.second.call(null, in__10798));
        in__10798 = G__10800;
        out__10799 = G__10801;
        continue
      }else {
        return out__10799
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10802) {
    var keyvals = cljs.core.seq(arglist__10802);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10805 = cljs.core.seq.call(null, keyvals);
    var out__10806 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10805) {
        var G__10807 = cljs.core.nnext.call(null, in__10805);
        var G__10808 = cljs.core.assoc.call(null, out__10806, cljs.core.first.call(null, in__10805), cljs.core.second.call(null, in__10805));
        in__10805 = G__10807;
        out__10806 = G__10808;
        continue
      }else {
        return out__10806
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10809) {
    var comparator = cljs.core.first(arglist__10809);
    var keyvals = cljs.core.rest(arglist__10809);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10810_SHARP_, p2__10811_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10813 = p1__10810_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10813)) {
            return or__3824__auto____10813
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10811_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10814) {
    var maps = cljs.core.seq(arglist__10814);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10822 = function(m, e) {
        var k__10820 = cljs.core.first.call(null, e);
        var v__10821 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10820)) {
          return cljs.core.assoc.call(null, m, k__10820, f.call(null, cljs.core._lookup.call(null, m, k__10820, null), v__10821))
        }else {
          return cljs.core.assoc.call(null, m, k__10820, v__10821)
        }
      };
      var merge2__10824 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10822, function() {
          var or__3824__auto____10823 = m1;
          if(cljs.core.truth_(or__3824__auto____10823)) {
            return or__3824__auto____10823
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10824, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10825) {
    var f = cljs.core.first(arglist__10825);
    var maps = cljs.core.rest(arglist__10825);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10830 = cljs.core.ObjMap.EMPTY;
  var keys__10831 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10831) {
      var key__10832 = cljs.core.first.call(null, keys__10831);
      var entry__10833 = cljs.core._lookup.call(null, map, key__10832, "\ufdd0'cljs.core/not-found");
      var G__10834 = cljs.core.not_EQ_.call(null, entry__10833, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10830, key__10832, entry__10833) : ret__10830;
      var G__10835 = cljs.core.next.call(null, keys__10831);
      ret__10830 = G__10834;
      keys__10831 = G__10835;
      continue
    }else {
      return ret__10830
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10839 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10839.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10840 = this;
  var h__2247__auto____10841 = this__10840.__hash;
  if(!(h__2247__auto____10841 == null)) {
    return h__2247__auto____10841
  }else {
    var h__2247__auto____10842 = cljs.core.hash_iset.call(null, coll);
    this__10840.__hash = h__2247__auto____10842;
    return h__2247__auto____10842
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10843 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10844 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10844.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10865 = null;
  var G__10865__2 = function(this_sym10845, k) {
    var this__10847 = this;
    var this_sym10845__10848 = this;
    var coll__10849 = this_sym10845__10848;
    return coll__10849.cljs$core$ILookup$_lookup$arity$2(coll__10849, k)
  };
  var G__10865__3 = function(this_sym10846, k, not_found) {
    var this__10847 = this;
    var this_sym10846__10850 = this;
    var coll__10851 = this_sym10846__10850;
    return coll__10851.cljs$core$ILookup$_lookup$arity$3(coll__10851, k, not_found)
  };
  G__10865 = function(this_sym10846, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10865__2.call(this, this_sym10846, k);
      case 3:
        return G__10865__3.call(this, this_sym10846, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10865
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10837, args10838) {
  var this__10852 = this;
  return this_sym10837.call.apply(this_sym10837, [this_sym10837].concat(args10838.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10853 = this;
  return new cljs.core.PersistentHashSet(this__10853.meta, cljs.core.assoc.call(null, this__10853.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10854 = this;
  var this__10855 = this;
  return cljs.core.pr_str.call(null, this__10855)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10856 = this;
  return cljs.core.keys.call(null, this__10856.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10857 = this;
  return new cljs.core.PersistentHashSet(this__10857.meta, cljs.core.dissoc.call(null, this__10857.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10858 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10859 = this;
  var and__3822__auto____10860 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10860) {
    var and__3822__auto____10861 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10861) {
      return cljs.core.every_QMARK_.call(null, function(p1__10836_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10836_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10861
    }
  }else {
    return and__3822__auto____10860
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10862 = this;
  return new cljs.core.PersistentHashSet(meta, this__10862.hash_map, this__10862.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10863 = this;
  return this__10863.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10864 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10864.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10866 = cljs.core.count.call(null, items);
  var i__10867 = 0;
  var out__10868 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10867 < len__10866) {
      var G__10869 = i__10867 + 1;
      var G__10870 = cljs.core.conj_BANG_.call(null, out__10868, items[i__10867]);
      i__10867 = G__10869;
      out__10868 = G__10870;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10868)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10888 = null;
  var G__10888__2 = function(this_sym10874, k) {
    var this__10876 = this;
    var this_sym10874__10877 = this;
    var tcoll__10878 = this_sym10874__10877;
    if(cljs.core._lookup.call(null, this__10876.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10888__3 = function(this_sym10875, k, not_found) {
    var this__10876 = this;
    var this_sym10875__10879 = this;
    var tcoll__10880 = this_sym10875__10879;
    if(cljs.core._lookup.call(null, this__10876.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10888 = function(this_sym10875, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10888__2.call(this, this_sym10875, k);
      case 3:
        return G__10888__3.call(this, this_sym10875, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10888
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10872, args10873) {
  var this__10881 = this;
  return this_sym10872.call.apply(this_sym10872, [this_sym10872].concat(args10873.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10882 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10883 = this;
  if(cljs.core._lookup.call(null, this__10883.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10884 = this;
  return cljs.core.count.call(null, this__10884.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10885 = this;
  this__10885.transient_map = cljs.core.dissoc_BANG_.call(null, this__10885.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10886 = this;
  this__10886.transient_map = cljs.core.assoc_BANG_.call(null, this__10886.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10887 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10887.transient_map), null)
};
cljs.core.TransientHashSet;
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10891 = this;
  var h__2247__auto____10892 = this__10891.__hash;
  if(!(h__2247__auto____10892 == null)) {
    return h__2247__auto____10892
  }else {
    var h__2247__auto____10893 = cljs.core.hash_iset.call(null, coll);
    this__10891.__hash = h__2247__auto____10893;
    return h__2247__auto____10893
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10894 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10895 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10895.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10921 = null;
  var G__10921__2 = function(this_sym10896, k) {
    var this__10898 = this;
    var this_sym10896__10899 = this;
    var coll__10900 = this_sym10896__10899;
    return coll__10900.cljs$core$ILookup$_lookup$arity$2(coll__10900, k)
  };
  var G__10921__3 = function(this_sym10897, k, not_found) {
    var this__10898 = this;
    var this_sym10897__10901 = this;
    var coll__10902 = this_sym10897__10901;
    return coll__10902.cljs$core$ILookup$_lookup$arity$3(coll__10902, k, not_found)
  };
  G__10921 = function(this_sym10897, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10921__2.call(this, this_sym10897, k);
      case 3:
        return G__10921__3.call(this, this_sym10897, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10921
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10889, args10890) {
  var this__10903 = this;
  return this_sym10889.call.apply(this_sym10889, [this_sym10889].concat(args10890.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10904 = this;
  return new cljs.core.PersistentTreeSet(this__10904.meta, cljs.core.assoc.call(null, this__10904.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10905 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10905.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10906 = this;
  var this__10907 = this;
  return cljs.core.pr_str.call(null, this__10907)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10908 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10908.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10909 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10909.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10910 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10911 = this;
  return cljs.core._comparator.call(null, this__10911.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10912 = this;
  return cljs.core.keys.call(null, this__10912.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10913 = this;
  return new cljs.core.PersistentTreeSet(this__10913.meta, cljs.core.dissoc.call(null, this__10913.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10914 = this;
  return cljs.core.count.call(null, this__10914.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10915 = this;
  var and__3822__auto____10916 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10916) {
    var and__3822__auto____10917 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10917) {
      return cljs.core.every_QMARK_.call(null, function(p1__10871_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10871_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10917
    }
  }else {
    return and__3822__auto____10916
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10918 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10918.tree_map, this__10918.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10919 = this;
  return this__10919.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10920 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10920.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10926__delegate = function(keys) {
      var in__10924 = cljs.core.seq.call(null, keys);
      var out__10925 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10924)) {
          var G__10927 = cljs.core.next.call(null, in__10924);
          var G__10928 = cljs.core.conj_BANG_.call(null, out__10925, cljs.core.first.call(null, in__10924));
          in__10924 = G__10927;
          out__10925 = G__10928;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10925)
        }
        break
      }
    };
    var G__10926 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10926__delegate.call(this, keys)
    };
    G__10926.cljs$lang$maxFixedArity = 0;
    G__10926.cljs$lang$applyTo = function(arglist__10929) {
      var keys = cljs.core.seq(arglist__10929);
      return G__10926__delegate(keys)
    };
    G__10926.cljs$lang$arity$variadic = G__10926__delegate;
    return G__10926
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10930) {
    var keys = cljs.core.seq(arglist__10930);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10932) {
    var comparator = cljs.core.first(arglist__10932);
    var keys = cljs.core.rest(arglist__10932);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10938 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10939 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10939)) {
        var e__10940 = temp__3971__auto____10939;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10940))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10938, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10931_SHARP_) {
      var temp__3971__auto____10941 = cljs.core.find.call(null, smap, p1__10931_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10941)) {
        var e__10942 = temp__3971__auto____10941;
        return cljs.core.second.call(null, e__10942)
      }else {
        return p1__10931_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10972 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10965, seen) {
        while(true) {
          var vec__10966__10967 = p__10965;
          var f__10968 = cljs.core.nth.call(null, vec__10966__10967, 0, null);
          var xs__10969 = vec__10966__10967;
          var temp__3974__auto____10970 = cljs.core.seq.call(null, xs__10969);
          if(temp__3974__auto____10970) {
            var s__10971 = temp__3974__auto____10970;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10968)) {
              var G__10973 = cljs.core.rest.call(null, s__10971);
              var G__10974 = seen;
              p__10965 = G__10973;
              seen = G__10974;
              continue
            }else {
              return cljs.core.cons.call(null, f__10968, step.call(null, cljs.core.rest.call(null, s__10971), cljs.core.conj.call(null, seen, f__10968)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10972.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10977 = cljs.core.PersistentVector.EMPTY;
  var s__10978 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10978)) {
      var G__10979 = cljs.core.conj.call(null, ret__10977, cljs.core.first.call(null, s__10978));
      var G__10980 = cljs.core.next.call(null, s__10978);
      ret__10977 = G__10979;
      s__10978 = G__10980;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10977)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10983 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10983) {
        return or__3824__auto____10983
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10984 = x.lastIndexOf("/");
      if(i__10984 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10984 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10987 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10987) {
      return or__3824__auto____10987
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10988 = x.lastIndexOf("/");
    if(i__10988 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10988)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10995 = cljs.core.ObjMap.EMPTY;
  var ks__10996 = cljs.core.seq.call(null, keys);
  var vs__10997 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10998 = ks__10996;
      if(and__3822__auto____10998) {
        return vs__10997
      }else {
        return and__3822__auto____10998
      }
    }()) {
      var G__10999 = cljs.core.assoc.call(null, map__10995, cljs.core.first.call(null, ks__10996), cljs.core.first.call(null, vs__10997));
      var G__11000 = cljs.core.next.call(null, ks__10996);
      var G__11001 = cljs.core.next.call(null, vs__10997);
      map__10995 = G__10999;
      ks__10996 = G__11000;
      vs__10997 = G__11001;
      continue
    }else {
      return map__10995
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__11004__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10989_SHARP_, p2__10990_SHARP_) {
        return max_key.call(null, k, p1__10989_SHARP_, p2__10990_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__11004 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11004__delegate.call(this, k, x, y, more)
    };
    G__11004.cljs$lang$maxFixedArity = 3;
    G__11004.cljs$lang$applyTo = function(arglist__11005) {
      var k = cljs.core.first(arglist__11005);
      var x = cljs.core.first(cljs.core.next(arglist__11005));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11005)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11005)));
      return G__11004__delegate(k, x, y, more)
    };
    G__11004.cljs$lang$arity$variadic = G__11004__delegate;
    return G__11004
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__11006__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11002_SHARP_, p2__11003_SHARP_) {
        return min_key.call(null, k, p1__11002_SHARP_, p2__11003_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__11006 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11006__delegate.call(this, k, x, y, more)
    };
    G__11006.cljs$lang$maxFixedArity = 3;
    G__11006.cljs$lang$applyTo = function(arglist__11007) {
      var k = cljs.core.first(arglist__11007);
      var x = cljs.core.first(cljs.core.next(arglist__11007));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11007)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11007)));
      return G__11006__delegate(k, x, y, more)
    };
    G__11006.cljs$lang$arity$variadic = G__11006__delegate;
    return G__11006
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11010 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11010) {
        var s__11011 = temp__3974__auto____11010;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__11011), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__11011)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11014 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11014) {
      var s__11015 = temp__3974__auto____11014;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__11015)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11015), take_while.call(null, pred, cljs.core.rest.call(null, s__11015)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__11017 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__11017.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__11029 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____11030 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____11030)) {
        var vec__11031__11032 = temp__3974__auto____11030;
        var e__11033 = cljs.core.nth.call(null, vec__11031__11032, 0, null);
        var s__11034 = vec__11031__11032;
        if(cljs.core.truth_(include__11029.call(null, e__11033))) {
          return s__11034
        }else {
          return cljs.core.next.call(null, s__11034)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11029, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11035 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____11035)) {
      var vec__11036__11037 = temp__3974__auto____11035;
      var e__11038 = cljs.core.nth.call(null, vec__11036__11037, 0, null);
      var s__11039 = vec__11036__11037;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__11038)) ? s__11039 : cljs.core.next.call(null, s__11039))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__11051 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____11052 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____11052)) {
        var vec__11053__11054 = temp__3974__auto____11052;
        var e__11055 = cljs.core.nth.call(null, vec__11053__11054, 0, null);
        var s__11056 = vec__11053__11054;
        if(cljs.core.truth_(include__11051.call(null, e__11055))) {
          return s__11056
        }else {
          return cljs.core.next.call(null, s__11056)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11051, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11057 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____11057)) {
      var vec__11058__11059 = temp__3974__auto____11057;
      var e__11060 = cljs.core.nth.call(null, vec__11058__11059, 0, null);
      var s__11061 = vec__11058__11059;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__11060)) ? s__11061 : cljs.core.next.call(null, s__11061))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__11062 = this;
  var h__2247__auto____11063 = this__11062.__hash;
  if(!(h__2247__auto____11063 == null)) {
    return h__2247__auto____11063
  }else {
    var h__2247__auto____11064 = cljs.core.hash_coll.call(null, rng);
    this__11062.__hash = h__2247__auto____11064;
    return h__2247__auto____11064
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__11065 = this;
  if(this__11065.step > 0) {
    if(this__11065.start + this__11065.step < this__11065.end) {
      return new cljs.core.Range(this__11065.meta, this__11065.start + this__11065.step, this__11065.end, this__11065.step, null)
    }else {
      return null
    }
  }else {
    if(this__11065.start + this__11065.step > this__11065.end) {
      return new cljs.core.Range(this__11065.meta, this__11065.start + this__11065.step, this__11065.end, this__11065.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__11066 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__11067 = this;
  var this__11068 = this;
  return cljs.core.pr_str.call(null, this__11068)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__11069 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__11070 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__11071 = this;
  if(this__11071.step > 0) {
    if(this__11071.start < this__11071.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__11071.start > this__11071.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__11072 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__11072.end - this__11072.start) / this__11072.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__11073 = this;
  return this__11073.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__11074 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__11074.meta, this__11074.start + this__11074.step, this__11074.end, this__11074.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__11075 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__11076 = this;
  return new cljs.core.Range(meta, this__11076.start, this__11076.end, this__11076.step, this__11076.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__11077 = this;
  return this__11077.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__11078 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11078.start + n * this__11078.step
  }else {
    if(function() {
      var and__3822__auto____11079 = this__11078.start > this__11078.end;
      if(and__3822__auto____11079) {
        return this__11078.step === 0
      }else {
        return and__3822__auto____11079
      }
    }()) {
      return this__11078.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__11080 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11080.start + n * this__11080.step
  }else {
    if(function() {
      var and__3822__auto____11081 = this__11080.start > this__11080.end;
      if(and__3822__auto____11081) {
        return this__11080.step === 0
      }else {
        return and__3822__auto____11081
      }
    }()) {
      return this__11080.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__11082 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11082.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11085 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11085) {
      var s__11086 = temp__3974__auto____11085;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__11086), take_nth.call(null, n, cljs.core.drop.call(null, n, s__11086)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11093 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11093) {
      var s__11094 = temp__3974__auto____11093;
      var fst__11095 = cljs.core.first.call(null, s__11094);
      var fv__11096 = f.call(null, fst__11095);
      var run__11097 = cljs.core.cons.call(null, fst__11095, cljs.core.take_while.call(null, function(p1__11087_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11096, f.call(null, p1__11087_SHARP_))
      }, cljs.core.next.call(null, s__11094)));
      return cljs.core.cons.call(null, run__11097, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11097), s__11094))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11112 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11112) {
        var s__11113 = temp__3971__auto____11112;
        return reductions.call(null, f, cljs.core.first.call(null, s__11113), cljs.core.rest.call(null, s__11113))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11114 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11114) {
        var s__11115 = temp__3974__auto____11114;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11115)), cljs.core.rest.call(null, s__11115))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11118 = null;
      var G__11118__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11118__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11118__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11118__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11118__4 = function() {
        var G__11119__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11119 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11119__delegate.call(this, x, y, z, args)
        };
        G__11119.cljs$lang$maxFixedArity = 3;
        G__11119.cljs$lang$applyTo = function(arglist__11120) {
          var x = cljs.core.first(arglist__11120);
          var y = cljs.core.first(cljs.core.next(arglist__11120));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11120)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11120)));
          return G__11119__delegate(x, y, z, args)
        };
        G__11119.cljs$lang$arity$variadic = G__11119__delegate;
        return G__11119
      }();
      G__11118 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11118__0.call(this);
          case 1:
            return G__11118__1.call(this, x);
          case 2:
            return G__11118__2.call(this, x, y);
          case 3:
            return G__11118__3.call(this, x, y, z);
          default:
            return G__11118__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11118.cljs$lang$maxFixedArity = 3;
      G__11118.cljs$lang$applyTo = G__11118__4.cljs$lang$applyTo;
      return G__11118
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11121 = null;
      var G__11121__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11121__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11121__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11121__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11121__4 = function() {
        var G__11122__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11122 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11122__delegate.call(this, x, y, z, args)
        };
        G__11122.cljs$lang$maxFixedArity = 3;
        G__11122.cljs$lang$applyTo = function(arglist__11123) {
          var x = cljs.core.first(arglist__11123);
          var y = cljs.core.first(cljs.core.next(arglist__11123));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11123)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11123)));
          return G__11122__delegate(x, y, z, args)
        };
        G__11122.cljs$lang$arity$variadic = G__11122__delegate;
        return G__11122
      }();
      G__11121 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11121__0.call(this);
          case 1:
            return G__11121__1.call(this, x);
          case 2:
            return G__11121__2.call(this, x, y);
          case 3:
            return G__11121__3.call(this, x, y, z);
          default:
            return G__11121__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11121.cljs$lang$maxFixedArity = 3;
      G__11121.cljs$lang$applyTo = G__11121__4.cljs$lang$applyTo;
      return G__11121
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11124 = null;
      var G__11124__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11124__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11124__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11124__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11124__4 = function() {
        var G__11125__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11125 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11125__delegate.call(this, x, y, z, args)
        };
        G__11125.cljs$lang$maxFixedArity = 3;
        G__11125.cljs$lang$applyTo = function(arglist__11126) {
          var x = cljs.core.first(arglist__11126);
          var y = cljs.core.first(cljs.core.next(arglist__11126));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11126)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11126)));
          return G__11125__delegate(x, y, z, args)
        };
        G__11125.cljs$lang$arity$variadic = G__11125__delegate;
        return G__11125
      }();
      G__11124 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11124__0.call(this);
          case 1:
            return G__11124__1.call(this, x);
          case 2:
            return G__11124__2.call(this, x, y);
          case 3:
            return G__11124__3.call(this, x, y, z);
          default:
            return G__11124__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11124.cljs$lang$maxFixedArity = 3;
      G__11124.cljs$lang$applyTo = G__11124__4.cljs$lang$applyTo;
      return G__11124
    }()
  };
  var juxt__4 = function() {
    var G__11127__delegate = function(f, g, h, fs) {
      var fs__11117 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11128 = null;
        var G__11128__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11098_SHARP_, p2__11099_SHARP_) {
            return cljs.core.conj.call(null, p1__11098_SHARP_, p2__11099_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11117)
        };
        var G__11128__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11100_SHARP_, p2__11101_SHARP_) {
            return cljs.core.conj.call(null, p1__11100_SHARP_, p2__11101_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11117)
        };
        var G__11128__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11102_SHARP_, p2__11103_SHARP_) {
            return cljs.core.conj.call(null, p1__11102_SHARP_, p2__11103_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11117)
        };
        var G__11128__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11104_SHARP_, p2__11105_SHARP_) {
            return cljs.core.conj.call(null, p1__11104_SHARP_, p2__11105_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11117)
        };
        var G__11128__4 = function() {
          var G__11129__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11106_SHARP_, p2__11107_SHARP_) {
              return cljs.core.conj.call(null, p1__11106_SHARP_, cljs.core.apply.call(null, p2__11107_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11117)
          };
          var G__11129 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11129__delegate.call(this, x, y, z, args)
          };
          G__11129.cljs$lang$maxFixedArity = 3;
          G__11129.cljs$lang$applyTo = function(arglist__11130) {
            var x = cljs.core.first(arglist__11130);
            var y = cljs.core.first(cljs.core.next(arglist__11130));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11130)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11130)));
            return G__11129__delegate(x, y, z, args)
          };
          G__11129.cljs$lang$arity$variadic = G__11129__delegate;
          return G__11129
        }();
        G__11128 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11128__0.call(this);
            case 1:
              return G__11128__1.call(this, x);
            case 2:
              return G__11128__2.call(this, x, y);
            case 3:
              return G__11128__3.call(this, x, y, z);
            default:
              return G__11128__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11128.cljs$lang$maxFixedArity = 3;
        G__11128.cljs$lang$applyTo = G__11128__4.cljs$lang$applyTo;
        return G__11128
      }()
    };
    var G__11127 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11127__delegate.call(this, f, g, h, fs)
    };
    G__11127.cljs$lang$maxFixedArity = 3;
    G__11127.cljs$lang$applyTo = function(arglist__11131) {
      var f = cljs.core.first(arglist__11131);
      var g = cljs.core.first(cljs.core.next(arglist__11131));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11131)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11131)));
      return G__11127__delegate(f, g, h, fs)
    };
    G__11127.cljs$lang$arity$variadic = G__11127__delegate;
    return G__11127
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__11134 = cljs.core.next.call(null, coll);
        coll = G__11134;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11133 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____11133) {
          return n > 0
        }else {
          return and__3822__auto____11133
        }
      }())) {
        var G__11135 = n - 1;
        var G__11136 = cljs.core.next.call(null, coll);
        n = G__11135;
        coll = G__11136;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__11138 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__11138), s)) {
    if(cljs.core.count.call(null, matches__11138) === 1) {
      return cljs.core.first.call(null, matches__11138)
    }else {
      return cljs.core.vec.call(null, matches__11138)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__11140 = re.exec(s);
  if(matches__11140 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__11140) === 1) {
      return cljs.core.first.call(null, matches__11140)
    }else {
      return cljs.core.vec.call(null, matches__11140)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__11145 = cljs.core.re_find.call(null, re, s);
  var match_idx__11146 = s.search(re);
  var match_str__11147 = cljs.core.coll_QMARK_.call(null, match_data__11145) ? cljs.core.first.call(null, match_data__11145) : match_data__11145;
  var post_match__11148 = cljs.core.subs.call(null, s, match_idx__11146 + cljs.core.count.call(null, match_str__11147));
  if(cljs.core.truth_(match_data__11145)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__11145, re_seq.call(null, re, post_match__11148))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11155__11156 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11157 = cljs.core.nth.call(null, vec__11155__11156, 0, null);
  var flags__11158 = cljs.core.nth.call(null, vec__11155__11156, 1, null);
  var pattern__11159 = cljs.core.nth.call(null, vec__11155__11156, 2, null);
  return new RegExp(pattern__11159, flags__11158)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11149_SHARP_) {
    return print_one.call(null, p1__11149_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var G__11163__11164 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  while(true) {
    if(G__11163__11164) {
      var o__11165 = cljs.core.first.call(null, G__11163__11164);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o__11165, writer, opts);
      var G__11166 = cljs.core.next.call(null, G__11163__11164);
      G__11163__11164 = G__11166;
      continue
    }else {
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var G__11170__11171 = cljs.core.seq.call(null, ss);
    while(true) {
      if(G__11170__11171) {
        var s__11172 = cljs.core.first.call(null, G__11170__11171);
        cljs.core._write.call(null, writer, s__11172);
        var G__11173 = cljs.core.next.call(null, G__11170__11171);
        G__11170__11171 = G__11173;
        continue
      }else {
        return null
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(goog.isDef(var_args)) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__11174) {
    var writer = cljs.core.first(arglist__11174);
    var ss = cljs.core.rest(arglist__11174);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$lang$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var this__11175 = this;
  return this__11175.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var this__11176 = this;
  return null
};
cljs.core.StringBufferWriter;
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11186 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11186)) {
            var and__3822__auto____11190 = function() {
              var G__11187__11188 = obj;
              if(G__11187__11188) {
                if(function() {
                  var or__3824__auto____11189 = G__11187__11188.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11189) {
                    return or__3824__auto____11189
                  }else {
                    return G__11187__11188.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11187__11188.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11187__11188)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11187__11188)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11190)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11190
            }
          }else {
            return and__3822__auto____11186
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11191 = !(obj == null);
          if(and__3822__auto____11191) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11191
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11192__11193 = obj;
          if(G__11192__11193) {
            if(function() {
              var or__3824__auto____11194 = G__11192__11193.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11194) {
                return or__3824__auto____11194
              }else {
                return G__11192__11193.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11192__11193.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11192__11193)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11192__11193)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11207 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11207)) {
            var and__3822__auto____11211 = function() {
              var G__11208__11209 = obj;
              if(G__11208__11209) {
                if(function() {
                  var or__3824__auto____11210 = G__11208__11209.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11210) {
                    return or__3824__auto____11210
                  }else {
                    return G__11208__11209.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11208__11209.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11208__11209)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11208__11209)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11211)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11211
            }
          }else {
            return and__3822__auto____11207
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(function() {
          var and__3822__auto____11212 = !(obj == null);
          if(and__3822__auto____11212) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11212
          }
        }()) {
          return obj.cljs$lang$ctorPrWriter(writer, opts)
        }else {
          if(function() {
            var G__11213__11214 = obj;
            if(G__11213__11214) {
              if(function() {
                var or__3824__auto____11215 = G__11213__11214.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(or__3824__auto____11215) {
                  return or__3824__auto____11215
                }else {
                  return G__11213__11214.cljs$core$IPrintWithWriter$
                }
              }()) {
                return true
              }else {
                if(!G__11213__11214.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__11213__11214)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__11213__11214)
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts)
          }else {
            if(function() {
              var G__11216__11217 = obj;
              if(G__11216__11217) {
                if(function() {
                  var or__3824__auto____11218 = G__11216__11217.cljs$lang$protocol_mask$partition0$ & 536870912;
                  if(or__3824__auto____11218) {
                    return or__3824__auto____11218
                  }else {
                    return G__11216__11217.cljs$core$IPrintable$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11216__11217.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11216__11217)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11216__11217)
              }
            }()) {
              return cljs.core.apply.call(null, cljs.core.write_all, writer, cljs.core._pr_seq.call(null, obj, opts))
            }else {
              if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
              }else {
                if("\ufdd0'else") {
                  return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                }else {
                  return null
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var G__11222__11223 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  while(true) {
    if(G__11222__11223) {
      var obj__11224 = cljs.core.first.call(null, G__11222__11223);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj__11224, writer, opts);
      var G__11225 = cljs.core.next.call(null, G__11222__11223);
      G__11222__11223 = G__11225;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb__11228 = new goog.string.StringBuffer;
  var writer__11229 = new cljs.core.StringBufferWriter(sb__11228);
  cljs.core.pr_seq_writer.call(null, objs, writer__11229, opts);
  cljs.core._flush.call(null, writer__11229);
  return sb__11228
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb__11231 = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb__11231.append("\n");
    return[cljs.core.str(sb__11231)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11232) {
    var objs = cljs.core.seq(arglist__11232);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11233) {
    var objs = cljs.core.seq(arglist__11233);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11234) {
    var objs = cljs.core.seq(arglist__11234);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11235) {
    var objs = cljs.core.seq(arglist__11235);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11236) {
    var objs = cljs.core.seq(arglist__11236);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11237) {
    var objs = cljs.core.seq(arglist__11237);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11238) {
    var objs = cljs.core.seq(arglist__11238);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11239) {
    var objs = cljs.core.seq(arglist__11239);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11240) {
    var fmt = cljs.core.first(arglist__11240);
    var args = cljs.core.rest(arglist__11240);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11241 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11241, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11242 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11242, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11243 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11243, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11244 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11244)) {
        var nspc__11245 = temp__3974__auto____11244;
        return[cljs.core.str(nspc__11245), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11246 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11246)) {
          var nspc__11247 = temp__3974__auto____11246;
          return[cljs.core.str(nspc__11247), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11248 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11248, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11250 = function(n, len) {
    var ns__11249 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11249) < len) {
        var G__11252 = [cljs.core.str("0"), cljs.core.str(ns__11249)].join("");
        ns__11249 = G__11252;
        continue
      }else {
        return ns__11249
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11250.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11250.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11250.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11250.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11250.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11250.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11251 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11251, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.HashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11253 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11253, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintWithWriter["number"] = true;
cljs.core._pr_writer["number"] = function(n, writer, opts) {
  1 / 0;
  return cljs.core._write.call(null, writer, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11254 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11254, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11255 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11255, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintWithWriter["boolean"] = true;
cljs.core._pr_writer["boolean"] = function(bool, writer, opts) {
  return cljs.core._write.call(null, writer, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintWithWriter["string"] = true;
cljs.core._pr_writer["string"] = function(obj, writer, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    cljs.core._write.call(null, writer, ":");
    var temp__3974__auto____11256 = cljs.core.namespace.call(null, obj);
    if(cljs.core.truth_(temp__3974__auto____11256)) {
      var nspc__11257 = temp__3974__auto____11256;
      cljs.core.write_all.call(null, writer, [cljs.core.str(nspc__11257)].join(""), "/")
    }else {
    }
    return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      var temp__3974__auto____11258 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11258)) {
        var nspc__11259 = temp__3974__auto____11258;
        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc__11259)].join(""), "/")
      }else {
      }
      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
    }else {
      if("\ufdd0'else") {
        if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts))) {
          return cljs.core._write.call(null, writer, goog.string.quote(obj))
        }else {
          return cljs.core._write.call(null, writer, obj)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11260 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11260, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IPrintWithWriter["array"] = true;
cljs.core._pr_writer["array"] = function(a, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintWithWriter["function"] = true;
cljs.core._pr_writer["function"] = function(this$, writer, _) {
  return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintWithWriter$ = true;
Date.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(d, writer, _) {
  var normalize__11262 = function(n, len) {
    var ns__11261 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11261) < len) {
        var G__11264 = [cljs.core.str("0"), cljs.core.str(ns__11261)].join("");
        ns__11261 = G__11264;
        continue
      }else {
        return ns__11261
      }
      break
    }
  };
  return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(d.getUTCFullYear())].join(""), "-", normalize__11262.call(null, d.getUTCMonth() + 1, 2), "-", normalize__11262.call(null, d.getUTCDate(), 2), "T", normalize__11262.call(null, d.getUTCHours(), 2), ":", normalize__11262.call(null, d.getUTCMinutes(), 2), ":", normalize__11262.call(null, d.getUTCSeconds(), 2), ".", normalize__11262.call(null, d.getUTCMilliseconds(), 3), "-", '00:00"')
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11263 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11263, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11265 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11266 = this;
  var G__11267__11268 = cljs.core.seq.call(null, this__11266.watches);
  while(true) {
    if(G__11267__11268) {
      var vec__11269__11270 = cljs.core.first.call(null, G__11267__11268);
      var key__11271 = cljs.core.nth.call(null, vec__11269__11270, 0, null);
      var f__11272 = cljs.core.nth.call(null, vec__11269__11270, 1, null);
      f__11272.call(null, key__11271, this$, oldval, newval);
      var G__11280 = cljs.core.next.call(null, G__11267__11268);
      G__11267__11268 = G__11280;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11273 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11273.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11274 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11274.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var this__11275 = this;
  cljs.core._write.call(null, writer, "#<Atom: ");
  cljs.core._pr_writer.call(null, this__11275.state, writer, opts);
  return cljs.core._write.call(null, writer, ">")
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11276 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11276.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11277 = this;
  return this__11277.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11278 = this;
  return this__11278.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11279 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11292__delegate = function(x, p__11281) {
      var map__11287__11288 = p__11281;
      var map__11287__11289 = cljs.core.seq_QMARK_.call(null, map__11287__11288) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11287__11288) : map__11287__11288;
      var validator__11290 = cljs.core._lookup.call(null, map__11287__11289, "\ufdd0'validator", null);
      var meta__11291 = cljs.core._lookup.call(null, map__11287__11289, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11291, validator__11290, null)
    };
    var G__11292 = function(x, var_args) {
      var p__11281 = null;
      if(goog.isDef(var_args)) {
        p__11281 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11292__delegate.call(this, x, p__11281)
    };
    G__11292.cljs$lang$maxFixedArity = 1;
    G__11292.cljs$lang$applyTo = function(arglist__11293) {
      var x = cljs.core.first(arglist__11293);
      var p__11281 = cljs.core.rest(arglist__11293);
      return G__11292__delegate(x, p__11281)
    };
    G__11292.cljs$lang$arity$variadic = G__11292__delegate;
    return G__11292
  }();
  atom = function(x, var_args) {
    var p__11281 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11297 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11297)) {
    var validate__11298 = temp__3974__auto____11297;
    if(cljs.core.truth_(validate__11298.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6683))))].join(""));
    }
  }else {
  }
  var old_value__11299 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11299, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11300__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11300 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11300__delegate.call(this, a, f, x, y, z, more)
    };
    G__11300.cljs$lang$maxFixedArity = 5;
    G__11300.cljs$lang$applyTo = function(arglist__11301) {
      var a = cljs.core.first(arglist__11301);
      var f = cljs.core.first(cljs.core.next(arglist__11301));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11301)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11301))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11301)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11301)))));
      return G__11300__delegate(a, f, x, y, z, more)
    };
    G__11300.cljs$lang$arity$variadic = G__11300__delegate;
    return G__11300
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11302) {
    var iref = cljs.core.first(arglist__11302);
    var f = cljs.core.first(cljs.core.next(arglist__11302));
    var args = cljs.core.rest(cljs.core.next(arglist__11302));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11303 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11303.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11304 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11304.state, function(p__11305) {
    var map__11306__11307 = p__11305;
    var map__11306__11308 = cljs.core.seq_QMARK_.call(null, map__11306__11307) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11306__11307) : map__11306__11307;
    var curr_state__11309 = map__11306__11308;
    var done__11310 = cljs.core._lookup.call(null, map__11306__11308, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11310)) {
      return curr_state__11309
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11304.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11331__11332 = options;
    var map__11331__11333 = cljs.core.seq_QMARK_.call(null, map__11331__11332) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11331__11332) : map__11331__11332;
    var keywordize_keys__11334 = cljs.core._lookup.call(null, map__11331__11333, "\ufdd0'keywordize-keys", null);
    var keyfn__11335 = cljs.core.truth_(keywordize_keys__11334) ? cljs.core.keyword : cljs.core.str;
    var f__11350 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2528__auto____11349 = function iter__11343(s__11344) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11344__11347 = s__11344;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11344__11347)) {
                        var k__11348 = cljs.core.first.call(null, s__11344__11347);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11335.call(null, k__11348), thisfn.call(null, x[k__11348])], true), iter__11343.call(null, cljs.core.rest.call(null, s__11344__11347)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2528__auto____11349.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11350.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11351) {
    var x = cljs.core.first(arglist__11351);
    var options = cljs.core.rest(arglist__11351);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11356 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11360__delegate = function(args) {
      var temp__3971__auto____11357 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11356), args, null);
      if(cljs.core.truth_(temp__3971__auto____11357)) {
        var v__11358 = temp__3971__auto____11357;
        return v__11358
      }else {
        var ret__11359 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11356, cljs.core.assoc, args, ret__11359);
        return ret__11359
      }
    };
    var G__11360 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11360__delegate.call(this, args)
    };
    G__11360.cljs$lang$maxFixedArity = 0;
    G__11360.cljs$lang$applyTo = function(arglist__11361) {
      var args = cljs.core.seq(arglist__11361);
      return G__11360__delegate(args)
    };
    G__11360.cljs$lang$arity$variadic = G__11360__delegate;
    return G__11360
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11363 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11363)) {
        var G__11364 = ret__11363;
        f = G__11364;
        continue
      }else {
        return ret__11363
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11365__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11365 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11365__delegate.call(this, f, args)
    };
    G__11365.cljs$lang$maxFixedArity = 1;
    G__11365.cljs$lang$applyTo = function(arglist__11366) {
      var f = cljs.core.first(arglist__11366);
      var args = cljs.core.rest(arglist__11366);
      return G__11365__delegate(f, args)
    };
    G__11365.cljs$lang$arity$variadic = G__11365__delegate;
    return G__11365
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11368 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11368, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11368, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11377 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11377) {
      return or__3824__auto____11377
    }else {
      var or__3824__auto____11378 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11378) {
        return or__3824__auto____11378
      }else {
        var and__3822__auto____11379 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11379) {
          var and__3822__auto____11380 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11380) {
            var and__3822__auto____11381 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11381) {
              var ret__11382 = true;
              var i__11383 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11384 = cljs.core.not.call(null, ret__11382);
                  if(or__3824__auto____11384) {
                    return or__3824__auto____11384
                  }else {
                    return i__11383 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11382
                }else {
                  var G__11385 = isa_QMARK_.call(null, h, child.call(null, i__11383), parent.call(null, i__11383));
                  var G__11386 = i__11383 + 1;
                  ret__11382 = G__11385;
                  i__11383 = G__11386;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11381
            }
          }else {
            return and__3822__auto____11380
          }
        }else {
          return and__3822__auto____11379
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6967))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6971))))].join(""));
    }
    var tp__11395 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11396 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11397 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11398 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11399 = cljs.core.contains_QMARK_.call(null, tp__11395.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11397.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11397.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11395, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11398.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11396, parent, ta__11397), "\ufdd0'descendants":tf__11398.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11397, tag, td__11396)})
    }();
    if(cljs.core.truth_(or__3824__auto____11399)) {
      return or__3824__auto____11399
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11404 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11405 = cljs.core.truth_(parentMap__11404.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11404.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11406 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11405)) ? cljs.core.assoc.call(null, parentMap__11404, tag, childsParents__11405) : cljs.core.dissoc.call(null, parentMap__11404, tag);
    var deriv_seq__11407 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11387_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11387_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11387_SHARP_), cljs.core.second.call(null, p1__11387_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11406)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11404.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11388_SHARP_, p2__11389_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11388_SHARP_, p2__11389_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11407))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11415 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11417 = cljs.core.truth_(function() {
    var and__3822__auto____11416 = xprefs__11415;
    if(cljs.core.truth_(and__3822__auto____11416)) {
      return xprefs__11415.call(null, y)
    }else {
      return and__3822__auto____11416
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11417)) {
    return or__3824__auto____11417
  }else {
    var or__3824__auto____11419 = function() {
      var ps__11418 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11418) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11418), prefer_table))) {
          }else {
          }
          var G__11422 = cljs.core.rest.call(null, ps__11418);
          ps__11418 = G__11422;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11419)) {
      return or__3824__auto____11419
    }else {
      var or__3824__auto____11421 = function() {
        var ps__11420 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11420) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11420), y, prefer_table))) {
            }else {
            }
            var G__11423 = cljs.core.rest.call(null, ps__11420);
            ps__11420 = G__11423;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11421)) {
        return or__3824__auto____11421
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11425 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11425)) {
    return or__3824__auto____11425
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11443 = cljs.core.reduce.call(null, function(be, p__11435) {
    var vec__11436__11437 = p__11435;
    var k__11438 = cljs.core.nth.call(null, vec__11436__11437, 0, null);
    var ___11439 = cljs.core.nth.call(null, vec__11436__11437, 1, null);
    var e__11440 = vec__11436__11437;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11438)) {
      var be2__11442 = cljs.core.truth_(function() {
        var or__3824__auto____11441 = be == null;
        if(or__3824__auto____11441) {
          return or__3824__auto____11441
        }else {
          return cljs.core.dominates.call(null, k__11438, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11440 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11442), k__11438, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11438), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11442)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11442
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11443)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11443));
      return cljs.core.second.call(null, best_entry__11443)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11448 = mf;
    if(and__3822__auto____11448) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11448
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2431__auto____11449 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11450 = cljs.core._reset[goog.typeOf(x__2431__auto____11449)];
      if(or__3824__auto____11450) {
        return or__3824__auto____11450
      }else {
        var or__3824__auto____11451 = cljs.core._reset["_"];
        if(or__3824__auto____11451) {
          return or__3824__auto____11451
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11456 = mf;
    if(and__3822__auto____11456) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11456
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2431__auto____11457 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11458 = cljs.core._add_method[goog.typeOf(x__2431__auto____11457)];
      if(or__3824__auto____11458) {
        return or__3824__auto____11458
      }else {
        var or__3824__auto____11459 = cljs.core._add_method["_"];
        if(or__3824__auto____11459) {
          return or__3824__auto____11459
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11464 = mf;
    if(and__3822__auto____11464) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11464
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2431__auto____11465 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11466 = cljs.core._remove_method[goog.typeOf(x__2431__auto____11465)];
      if(or__3824__auto____11466) {
        return or__3824__auto____11466
      }else {
        var or__3824__auto____11467 = cljs.core._remove_method["_"];
        if(or__3824__auto____11467) {
          return or__3824__auto____11467
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11472 = mf;
    if(and__3822__auto____11472) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11472
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2431__auto____11473 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11474 = cljs.core._prefer_method[goog.typeOf(x__2431__auto____11473)];
      if(or__3824__auto____11474) {
        return or__3824__auto____11474
      }else {
        var or__3824__auto____11475 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11475) {
          return or__3824__auto____11475
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11480 = mf;
    if(and__3822__auto____11480) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11480
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2431__auto____11481 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11482 = cljs.core._get_method[goog.typeOf(x__2431__auto____11481)];
      if(or__3824__auto____11482) {
        return or__3824__auto____11482
      }else {
        var or__3824__auto____11483 = cljs.core._get_method["_"];
        if(or__3824__auto____11483) {
          return or__3824__auto____11483
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11488 = mf;
    if(and__3822__auto____11488) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11488
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2431__auto____11489 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11490 = cljs.core._methods[goog.typeOf(x__2431__auto____11489)];
      if(or__3824__auto____11490) {
        return or__3824__auto____11490
      }else {
        var or__3824__auto____11491 = cljs.core._methods["_"];
        if(or__3824__auto____11491) {
          return or__3824__auto____11491
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11496 = mf;
    if(and__3822__auto____11496) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11496
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2431__auto____11497 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11498 = cljs.core._prefers[goog.typeOf(x__2431__auto____11497)];
      if(or__3824__auto____11498) {
        return or__3824__auto____11498
      }else {
        var or__3824__auto____11499 = cljs.core._prefers["_"];
        if(or__3824__auto____11499) {
          return or__3824__auto____11499
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11504 = mf;
    if(and__3822__auto____11504) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11504
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2431__auto____11505 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11506 = cljs.core._dispatch[goog.typeOf(x__2431__auto____11505)];
      if(or__3824__auto____11506) {
        return or__3824__auto____11506
      }else {
        var or__3824__auto____11507 = cljs.core._dispatch["_"];
        if(or__3824__auto____11507) {
          return or__3824__auto____11507
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11510 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11511 = cljs.core._get_method.call(null, mf, dispatch_val__11510);
  if(cljs.core.truth_(target_fn__11511)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11510)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11511, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11512 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11513 = this;
  cljs.core.swap_BANG_.call(null, this__11513.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11513.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11513.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11513.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11514 = this;
  cljs.core.swap_BANG_.call(null, this__11514.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11514.method_cache, this__11514.method_table, this__11514.cached_hierarchy, this__11514.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11515 = this;
  cljs.core.swap_BANG_.call(null, this__11515.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11515.method_cache, this__11515.method_table, this__11515.cached_hierarchy, this__11515.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11516 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11516.cached_hierarchy), cljs.core.deref.call(null, this__11516.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11516.method_cache, this__11516.method_table, this__11516.cached_hierarchy, this__11516.hierarchy)
  }
  var temp__3971__auto____11517 = cljs.core.deref.call(null, this__11516.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11517)) {
    var target_fn__11518 = temp__3971__auto____11517;
    return target_fn__11518
  }else {
    var temp__3971__auto____11519 = cljs.core.find_and_cache_best_method.call(null, this__11516.name, dispatch_val, this__11516.hierarchy, this__11516.method_table, this__11516.prefer_table, this__11516.method_cache, this__11516.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11519)) {
      var target_fn__11520 = temp__3971__auto____11519;
      return target_fn__11520
    }else {
      return cljs.core.deref.call(null, this__11516.method_table).call(null, this__11516.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11521 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11521.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11521.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11521.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11521.method_cache, this__11521.method_table, this__11521.cached_hierarchy, this__11521.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11522 = this;
  return cljs.core.deref.call(null, this__11522.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11523 = this;
  return cljs.core.deref.call(null, this__11523.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11524 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11524.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11526__delegate = function(_, args) {
    var self__11525 = this;
    return cljs.core._dispatch.call(null, self__11525, args)
  };
  var G__11526 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11526__delegate.call(this, _, args)
  };
  G__11526.cljs$lang$maxFixedArity = 1;
  G__11526.cljs$lang$applyTo = function(arglist__11527) {
    var _ = cljs.core.first(arglist__11527);
    var args = cljs.core.rest(arglist__11527);
    return G__11526__delegate(_, args)
  };
  G__11526.cljs$lang$arity$variadic = G__11526__delegate;
  return G__11526
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11528 = this;
  return cljs.core._dispatch.call(null, self__11528, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690646016
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11529 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_11531, writer, _) {
  var this__11530 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(this__11530.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11533, _) {
  var this__11532 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11532.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11534 = this;
  var and__3822__auto____11535 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11535) {
    return this__11534.uuid === other.uuid
  }else {
    return and__3822__auto____11535
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11536 = this;
  var this__11537 = this;
  return cljs.core.pr_str.call(null, this__11537)
};
cljs.core.UUID;
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__11580 = {};
  var G__11581__11582 = cljs.core.seq.call(null, m);
  while(true) {
    if(G__11581__11582) {
      var vec__11583__11584 = cljs.core.first.call(null, G__11581__11582);
      var k__11585 = cljs.core.nth.call(null, vec__11583__11584, 0, null);
      var v__11586 = cljs.core.nth.call(null, vec__11583__11584, 1, null);
      out__11580[cljs.core.name.call(null, k__11585)] = v__11586;
      var G__11587 = cljs.core.next.call(null, G__11581__11582);
      G__11581__11582 = G__11587;
      continue
    }else {
    }
    break
  }
  return out__11580
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__11589 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__11589)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__11590) {
    var v = cljs.core.first(arglist__11590);
    var text = cljs.core.rest(arglist__11590);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var obj__11598 = {};
        var G__11599__11600 = cljs.core.seq.call(null, x);
        while(true) {
          if(G__11599__11600) {
            var vec__11601__11602 = cljs.core.first.call(null, G__11599__11600);
            var k__11603 = cljs.core.nth.call(null, vec__11601__11602, 0, null);
            var v__11604 = cljs.core.nth.call(null, vec__11601__11602, 1, null);
            obj__11598[clj__GT_js.call(null, k__11603)] = clj__GT_js.call(null, v__11604);
            var G__11605 = cljs.core.next.call(null, G__11599__11600);
            G__11599__11600 = G__11605;
            continue
          }else {
          }
          break
        }
        return obj__11598
      }else {
        if(cljs.core.sequential_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("carneades.policy_analysis.web.backbone.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
carneades.policy_analysis.web.backbone.core.IHtml = {};
carneades.policy_analysis.web.backbone.core.html = function html(this$) {
  if(function() {
    var and__3822__auto____6230 = this$;
    if(and__3822__auto____6230) {
      return this$.carneades$policy_analysis$web$backbone$core$IHtml$html$arity$1
    }else {
      return and__3822__auto____6230
    }
  }()) {
    return this$.carneades$policy_analysis$web$backbone$core$IHtml$html$arity$1(this$)
  }else {
    var x__2431__auto____6231 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____6232 = carneades.policy_analysis.web.backbone.core.html[goog.typeOf(x__2431__auto____6231)];
      if(or__3824__auto____6232) {
        return or__3824__auto____6232
      }else {
        var or__3824__auto____6233 = carneades.policy_analysis.web.backbone.core.html["_"];
        if(or__3824__auto____6233) {
          return or__3824__auto____6233
        }else {
          throw cljs.core.missing_protocol.call(null, "IHtml.html", this$);
        }
      }
    }().call(null, this$)
  }
};
carneades.policy_analysis.web.backbone.core.html = function html(this$, content) {
  if(function() {
    var and__3822__auto____6238 = this$;
    if(and__3822__auto____6238) {
      return this$.carneades$policy_analysis$web$backbone$core$IHtml$html$arity$2
    }else {
      return and__3822__auto____6238
    }
  }()) {
    return this$.carneades$policy_analysis$web$backbone$core$IHtml$html$arity$2(this$, content)
  }else {
    var x__2431__auto____6239 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____6240 = carneades.policy_analysis.web.backbone.core.html[goog.typeOf(x__2431__auto____6239)];
      if(or__3824__auto____6240) {
        return or__3824__auto____6240
      }else {
        var or__3824__auto____6241 = carneades.policy_analysis.web.backbone.core.html["_"];
        if(or__3824__auto____6241) {
          return or__3824__auto____6241
        }else {
          throw cljs.core.missing_protocol.call(null, "IHtml.html", this$);
        }
      }
    }().call(null, this$, content)
  }
};
Backbone.View.prototype.carneades$policy_analysis$web$backbone$core$IHtml$ = true;
Backbone.View.prototype.carneades$policy_analysis$web$backbone$core$IHtml$html$arity$1 = function(this$) {
  return this$.$el.html()
};
Backbone.View.prototype.carneades$policy_analysis$web$backbone$core$IHtml$html$arity$2 = function(this$, content) {
  return this$.$el.html(content)
};
carneades.policy_analysis.web.backbone.core.get_in_STAR_ = function get_in_STAR_(model, properties) {
  var current__6244 = model;
  var properties__6245 = properties;
  while(true) {
    if(cljs.core.seq.call(null, properties__6245)) {
      var G__6246 = current__6244.get(cljs.core.name.call(null, cljs.core.first.call(null, properties__6245)));
      var G__6247 = cljs.core.rest.call(null, properties__6245);
      current__6244 = G__6246;
      properties__6245 = G__6247;
      continue
    }else {
      return current__6244
    }
    break
  }
};
carneades.policy_analysis.web.backbone.core.get_in = function get_in(model, properties) {
  return cljs.core.js__GT_clj.call(null, carneades.policy_analysis.web.backbone.core.get_in_STAR_.call(null, model, properties))
};
carneades.policy_analysis.web.backbone.core.new$ = function new$(type, attributes) {
  return new type(jayq.util.clj__GT_js.call(null, attributes))
};
carneades.policy_analysis.web.backbone.core.new_model = function new_model(attributes) {
  return new Backbone.Model(jayq.util.clj__GT_js.call(null, attributes))
};
carneades.policy_analysis.web.backbone.core.render = function render(view) {
  return view.render()
};
carneades.policy_analysis.web.backbone.core.save = function save(model, attributes, options) {
  return model.save(jayq.util.clj__GT_js.call(null, attributes), jayq.util.clj__GT_js.call(null, options))
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11544 = s;
      var limit__11545 = limit;
      var parts__11546 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11545, 1)) {
          return cljs.core.conj.call(null, parts__11546, s__11544)
        }else {
          var temp__3971__auto____11547 = cljs.core.re_find.call(null, re, s__11544);
          if(cljs.core.truth_(temp__3971__auto____11547)) {
            var m__11548 = temp__3971__auto____11547;
            var index__11549 = s__11544.indexOf(m__11548);
            var G__11550 = s__11544.substring(index__11549 + cljs.core.count.call(null, m__11548));
            var G__11551 = limit__11545 - 1;
            var G__11552 = cljs.core.conj.call(null, parts__11546, s__11544.substring(0, index__11549));
            s__11544 = G__11550;
            limit__11545 = G__11551;
            parts__11546 = G__11552;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11546, s__11544)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11556 = s.length;
  while(true) {
    if(index__11556 === 0) {
      return""
    }else {
      var ch__11557 = cljs.core._lookup.call(null, s, index__11556 - 1, null);
      if(function() {
        var or__3824__auto____11558 = cljs.core._EQ_.call(null, ch__11557, "\n");
        if(or__3824__auto____11558) {
          return or__3824__auto____11558
        }else {
          return cljs.core._EQ_.call(null, ch__11557, "\r")
        }
      }()) {
        var G__11559 = index__11556 - 1;
        index__11556 = G__11559;
        continue
      }else {
        return s.substring(0, index__11556)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11566 = new goog.string.StringBuffer;
  var length__11567 = s.length;
  var index__11568 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11567, index__11568)) {
      return buffer__11566.toString()
    }else {
      var ch__11569 = s.charAt(index__11568);
      var temp__3971__auto____11570 = cljs.core._lookup.call(null, cmap, ch__11569, null);
      if(cljs.core.truth_(temp__3971__auto____11570)) {
        var replacement__11571 = temp__3971__auto____11570;
        buffer__11566.append([cljs.core.str(replacement__11571)].join(""))
      }else {
        buffer__11566.append(ch__11569)
      }
      var G__11572 = index__11568 + 1;
      index__11568 = G__11572;
      continue
    }
    break
  }
};
goog.provide("carneades.policy_analysis.web.icanhaz.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("clojure.string");
goog.require("jayq.util");
carneades.policy_analysis.web.icanhaz.core.get = function get(template_key, variables) {
  var tname__6507 = clojure.string.replace.call(null, jayq.util.clj__GT_js.call(null, template_key), "-", "_");
  return ich[tname__6507].call(ich, jayq.util.clj__GT_js.call(null, variables))
};
goog.provide("carneades.policy_analysis.web.template");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.icanhaz.core");
goog.require("jayq.util");
carneades.policy_analysis.web.template.get = function get(template, variables) {
  var entries__6223 = cljs.core.keys.call(null, cljs.core.js__GT_clj.call(null, jQuery.i18n.map));
  var texts__6224 = cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(e) {
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, e), jQuery.i18n.prop(e)], true)
  }, entries__6223));
  var augmented__6225 = cljs.core.merge.call(null, texts__6224, variables);
  return carneades.policy_analysis.web.icanhaz.core.get.call(null, template, augmented__6225)
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__11779 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__11779, cljs.core.remove.call(null, function(p1__11777_SHARP_) {
    return max__11779 === p1__11777_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__11783__delegate = function(s1, s2, sets) {
      var bubbled_sets__11782 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__11782), cljs.core.rest.call(null, bubbled_sets__11782))
    };
    var G__11783 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11783__delegate.call(this, s1, s2, sets)
    };
    G__11783.cljs$lang$maxFixedArity = 2;
    G__11783.cljs$lang$applyTo = function(arglist__11784) {
      var s1 = cljs.core.first(arglist__11784);
      var s2 = cljs.core.first(cljs.core.next(arglist__11784));
      var sets = cljs.core.rest(cljs.core.next(arglist__11784));
      return G__11783__delegate(s1, s2, sets)
    };
    G__11783.cljs$lang$arity$variadic = G__11783__delegate;
    return G__11783
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__11787 = s2;
        var G__11788 = s1;
        s1 = G__11787;
        s2 = G__11788;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__11789__delegate = function(s1, s2, sets) {
      var bubbled_sets__11786 = clojure.set.bubble_max_key.call(null, function(p1__11780_SHARP_) {
        return-cljs.core.count.call(null, p1__11780_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__11786), cljs.core.rest.call(null, bubbled_sets__11786))
    };
    var G__11789 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11789__delegate.call(this, s1, s2, sets)
    };
    G__11789.cljs$lang$maxFixedArity = 2;
    G__11789.cljs$lang$applyTo = function(arglist__11790) {
      var s1 = cljs.core.first(arglist__11790);
      var s2 = cljs.core.first(cljs.core.next(arglist__11790));
      var sets = cljs.core.rest(cljs.core.next(arglist__11790));
      return G__11789__delegate(s1, s2, sets)
    };
    G__11789.cljs$lang$arity$variadic = G__11789__delegate;
    return G__11789
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__11791__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__11791 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11791__delegate.call(this, s1, s2, sets)
    };
    G__11791.cljs$lang$maxFixedArity = 2;
    G__11791.cljs$lang$applyTo = function(arglist__11792) {
      var s1 = cljs.core.first(arglist__11792);
      var s2 = cljs.core.first(cljs.core.next(arglist__11792));
      var sets = cljs.core.rest(cljs.core.next(arglist__11792));
      return G__11791__delegate(s1, s2, sets)
    };
    G__11791.cljs$lang$arity$variadic = G__11791__delegate;
    return G__11791
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__11793_SHARP_) {
    return cljs.core.select_keys.call(null, p1__11793_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__11801) {
    var vec__11802__11803 = p__11801;
    var old__11804 = cljs.core.nth.call(null, vec__11802__11803, 0, null);
    var new__11805 = cljs.core.nth.call(null, vec__11802__11803, 1, null);
    if(function() {
      var and__3822__auto____11806 = cljs.core.not_EQ_.call(null, old__11804, new__11805);
      if(and__3822__auto____11806) {
        return cljs.core.contains_QMARK_.call(null, m, old__11804)
      }else {
        return and__3822__auto____11806
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__11805, cljs.core._lookup.call(null, m, old__11804, null)), old__11804)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__11794_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__11794_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__11808 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__11808, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__11808, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__11818) {
    var vec__11819__11820 = p__11818;
    var k__11821 = cljs.core.nth.call(null, vec__11819__11820, 0, null);
    var v__11822 = cljs.core.nth.call(null, vec__11819__11820, 1, null);
    return cljs.core.assoc.call(null, m, v__11822, k__11821)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____11839 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____11839) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____11839
      }
    }()) {
      var ks__11841 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__11840__11842 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__11843 = cljs.core.nth.call(null, vec__11840__11842, 0, null);
      var s__11844 = cljs.core.nth.call(null, vec__11840__11842, 1, null);
      var idx__11845 = clojure.set.index.call(null, r__11843, ks__11841);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__11846 = idx__11845.call(null, cljs.core.select_keys.call(null, x, ks__11841));
        if(cljs.core.truth_(found__11846)) {
          return cljs.core.reduce.call(null, function(p1__11809_SHARP_, p2__11810_SHARP_) {
            return cljs.core.conj.call(null, p1__11809_SHARP_, cljs.core.merge.call(null, p2__11810_SHARP_, x))
          }, ret, found__11846)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__11844)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__11847__11848 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__11849 = cljs.core.nth.call(null, vec__11847__11848, 0, null);
    var s__11850 = cljs.core.nth.call(null, vec__11847__11848, 1, null);
    var k__11851 = cljs.core.nth.call(null, vec__11847__11848, 2, null);
    var idx__11852 = clojure.set.index.call(null, r__11849, cljs.core.vals.call(null, k__11851));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__11853 = idx__11852.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__11851)), k__11851));
      if(cljs.core.truth_(found__11853)) {
        return cljs.core.reduce.call(null, function(p1__11811_SHARP_, p2__11812_SHARP_) {
          return cljs.core.conj.call(null, p1__11811_SHARP_, cljs.core.merge.call(null, p2__11812_SHARP_, x))
        }, ret, found__11853)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__11850)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____11856 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____11856) {
    return cljs.core.every_QMARK_.call(null, function(p1__11823_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__11823_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____11856
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____11858 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____11858) {
    return cljs.core.every_QMARK_.call(null, function(p1__11854_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__11854_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____11858
  }
};
goog.provide("carneades.policy_analysis.web.models.similarity");
goog.require("cljs.core");
goog.require("clojure.set");
carneades.policy_analysis.web.models.similarity.score = function score(s1, s2) {
  return cljs.core.count.call(null, clojure.set.intersection.call(null, s1, s2)) / cljs.core.count.call(null, s2)
};
carneades.policy_analysis.web.models.similarity.value = function value(s1, s2) {
  var s__6620 = carneades.policy_analysis.web.models.similarity.score.call(null, s1, s2);
  if(function() {
    var and__3822__auto____6621 = s__6620 >= 0;
    if(and__3822__auto____6621) {
      return s__6620 <= 0.2
    }else {
      return and__3822__auto____6621
    }
  }()) {
    return"\ufdd0'very-little"
  }else {
    if(function() {
      var and__3822__auto____6622 = s__6620 > 0.2;
      if(and__3822__auto____6622) {
        return s__6620 <= 0.4
      }else {
        return and__3822__auto____6622
      }
    }()) {
      return"\ufdd0'little"
    }else {
      if(function() {
        var and__3822__auto____6623 = s__6620 > 0.4;
        if(and__3822__auto____6623) {
          return s__6620 <= 0.6
        }else {
          return and__3822__auto____6623
        }
      }()) {
        return"\ufdd0'some"
      }else {
        if(function() {
          var and__3822__auto____6624 = s__6620 > 0.6;
          if(and__3822__auto____6624) {
            return s__6620 <= 0.8
          }else {
            return and__3822__auto____6624
          }
        }()) {
          return"\ufdd0'much"
        }else {
          if(function() {
            var and__3822__auto____6625 = s__6620 > 0.8;
            if(and__3822__auto____6625) {
              return s__6620 <= 1
            }else {
              return and__3822__auto____6625
            }
          }()) {
            return"\ufdd0'very-much"
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("carneades.policy_analysis.web.models.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.models.similarity");
goog.require("clojure.set");
goog.require("jayq.util");
carneades.policy_analysis.web.models.core.get_stmt = function get_stmt(statements, id) {
  return statements.get(id)
};
carneades.policy_analysis.web.models.core.get_arg = function get_arg(args, id) {
  return args.get(id)
};
carneades.policy_analysis.web.models.core.get_metadata = function get_metadata(md, k) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(m) {
    return cljs.core._EQ_.call(null, m.key, k)
  }, md.toJSON()))
};
carneades.policy_analysis.web.models.core.update_statements = function update_statements(m, sources, ids) {
  return cljs.core.reduce.call(null, function(m, source) {
    var v__6595 = cljs.core._lookup.call(null, m, source, cljs.core.PersistentHashSet.EMPTY);
    return cljs.core.assoc.call(null, m, source, clojure.set.union.call(null, v__6595, ids))
  }, m, cljs.core.js__GT_clj.call(null, sources))
};
carneades.policy_analysis.web.models.core.statements_by_sources = function statements_by_sources(args) {
  return cljs.core.reduce.call(null, function(m, arg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____6603 = arg.header;
      if(cljs.core.truth_(and__3822__auto____6603)) {
        return arg.header.source
      }else {
        return and__3822__auto____6603
      }
    }())) {
      var sources__6604 = arg.header.source;
      var premises__6605 = arg.premises;
      var conclusion__6606 = arg.conclusion;
      var conclusion_id__6607 = conclusion__6606.id;
      var premises_ids__6608 = cljs.core.set.call(null, cljs.core.map.call(null, function(p) {
        return p.statement.id
      }, premises__6605));
      var ids__6609 = cljs.core.truth_(arg.pro) ? cljs.core.conj.call(null, premises_ids__6608, conclusion_id__6607) : premises_ids__6608;
      return carneades.policy_analysis.web.models.core.update_statements.call(null, m, sources__6604, ids__6609)
    }else {
      return m
    }
  }, cljs.core.ObjMap.EMPTY, args)
};
carneades.policy_analysis.web.models.core.sources_by_similarity = function sources_by_similarity(statements, accepted) {
  return cljs.core.group_by.call(null, function(source) {
    return carneades.policy_analysis.web.models.similarity.value.call(null, accepted, statements.call(null, source))
  }, cljs.core.keys.call(null, statements))
};
carneades.policy_analysis.web.models.core.arguments_for_statement = function arguments_for_statement(issue, args) {
  var pro_statements__6612 = cljs.core.mapcat.call(null, function(proid) {
    return cljs.core.map.call(null, function(p) {
      return p.statement
    }, args.get(proid).get("premises"))
  }, issue.pro);
  var con_statements__6613 = cljs.core.mapcat.call(null, function(conid) {
    return cljs.core.map.call(null, function(p) {
      return p.statement
    }, args.get(conid).get("premises"))
  }, issue.con);
  return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, carneades.policy_analysis.web.models.core.get_arg, args), issue.pro), cljs.core.map.call(null, cljs.core.partial.call(null, carneades.policy_analysis.web.models.core.get_arg, args), issue.con), cljs.core.mapcat.call(null, function(s) {
    return arguments_for_statement.call(null, s, args)
  }, pro_statements__6612), cljs.core.mapcat.call(null, function(s) {
    return arguments_for_statement.call(null, s, args)
  }, con_statements__6613))
};
goog.provide("carneades.policy_analysis.web.views.core");
goog.require("cljs.core");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.template");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("jayq.util");
carneades.policy_analysis.web.views.core.template = function template(view, template_key, variables) {
  return carneades.policy_analysis.web.backbone.core.html.call(null, view, carneades.policy_analysis.web.template.get.call(null, template_key, variables))
};
carneades.policy_analysis.web.views.core.json = function json(model) {
  return model.toJSON()
};
carneades.policy_analysis.web.views.core.score_agreed_QMARK_ = function score_agreed_QMARK_(score) {
  return score > 0.99
};
carneades.policy_analysis.web.views.core.agreed_QMARK_ = function agreed_QMARK_(claim, votes) {
  var vote__6628 = votes.call(null, claim.id);
  var and__3822__auto____6629 = !(vote__6628 == null);
  if(and__3822__auto____6629) {
    return carneades.policy_analysis.web.views.core.score_agreed_QMARK_.call(null, vote__6628)
  }else {
    return and__3822__auto____6629
  }
};
carneades.policy_analysis.web.views.core.disagreed_QMARK_ = function disagreed_QMARK_(claim, votes) {
  var vote__6632 = votes.call(null, claim.id);
  var and__3822__auto____6633 = !(vote__6632 == null);
  if(and__3822__auto____6633) {
    return vote__6632 < 0.01
  }else {
    return and__3822__auto____6633
  }
};
carneades.policy_analysis.web.views.core.prepare_claim = function prepare_claim(statement_votes, stmt) {
  var text__6637 = AGB.statement_raw_text(stmt);
  var desc__6638 = AGB.description_text(stmt.header);
  var agreement_text__6639 = cljs.core.truth_(carneades.policy_analysis.web.views.core.agreed_QMARK_.call(null, stmt, statement_votes)) ? jQuery.i18n.prop("sct_agree") : cljs.core.truth_(carneades.policy_analysis.web.views.core.disagreed_QMARK_.call(null, stmt, statement_votes)) ? jQuery.i18n.prop("sct_disagree") : "\ufdd0'else" ? "" : null;
  stmt["statement_text"] = text__6637;
  stmt["statement_description"] = desc__6638;
  stmt["agreement_text"] = agreement_text__6639;
  return stmt
};
carneades.policy_analysis.web.views.core.prepare_argument = function prepare_argument(arg) {
  return arg["description_text"] = AGB.description_text(arg.header)
};
carneades.policy_analysis.web.views.core.pro_answered = function pro_answered(claim, args, argument_votes) {
  return cljs.core.map.call(null, cljs.core.comp.call(null, carneades.policy_analysis.web.views.core.json, cljs.core.partial.call(null, carneades.policy_analysis.web.models.core.get_arg, args)), cljs.core.filter.call(null, function(id) {
    return argument_votes.call(null, id)
  }, claim.pro))
};
carneades.policy_analysis.web.views.core.con_answered = function con_answered(claim, args, argument_votes) {
  return cljs.core.map.call(null, cljs.core.comp.call(null, carneades.policy_analysis.web.views.core.json, cljs.core.partial.call(null, carneades.policy_analysis.web.models.core.get_arg, args)), cljs.core.filter.call(null, function(id) {
    return argument_votes.call(null, id)
  }, claim.con))
};
carneades.policy_analysis.web.views.core.prepare_arguments = function prepare_arguments(claim, args, argument_votes) {
  var pro_answered__6645 = carneades.policy_analysis.web.views.core.pro_answered.call(null, claim, args, argument_votes);
  var con_answered__6646 = carneades.policy_analysis.web.views.core.con_answered.call(null, claim, args, argument_votes);
  var G__6647__6648 = cljs.core.seq.call(null, cljs.core.concat.call(null, pro_answered__6645, con_answered__6646));
  while(true) {
    if(G__6647__6648) {
      var arg__6649 = cljs.core.first.call(null, G__6647__6648);
      carneades.policy_analysis.web.views.core.prepare_argument.call(null, arg__6649);
      var G__6650 = cljs.core.next.call(null, G__6647__6648);
      G__6647__6648 = G__6650;
      continue
    }else {
    }
    break
  }
  claim["has_pro_answered"] = cljs.core.count.call(null, pro_answered__6645) > 0;
  claim["has_con_answered"] = cljs.core.count.call(null, con_answered__6646) > 0;
  claim["pro_answered"] = jayq.util.clj__GT_js.call(null, pro_answered__6645);
  claim["con_answered"] = jayq.util.clj__GT_js.call(null, con_answered__6646);
  return claim
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____12045 = reader;
    if(and__3822__auto____12045) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____12045
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2431__auto____12046 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____12047 = cljs.reader.read_char[goog.typeOf(x__2431__auto____12046)];
      if(or__3824__auto____12047) {
        return or__3824__auto____12047
      }else {
        var or__3824__auto____12048 = cljs.reader.read_char["_"];
        if(or__3824__auto____12048) {
          return or__3824__auto____12048
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____12053 = reader;
    if(and__3822__auto____12053) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____12053
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2431__auto____12054 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____12055 = cljs.reader.unread[goog.typeOf(x__2431__auto____12054)];
      if(or__3824__auto____12055) {
        return or__3824__auto____12055
      }else {
        var or__3824__auto____12056 = cljs.reader.unread["_"];
        if(or__3824__auto____12056) {
          return or__3824__auto____12056
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__12057 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__12057.buffer_atom))) {
    var idx__12058 = cljs.core.deref.call(null, this__12057.index_atom);
    cljs.core.swap_BANG_.call(null, this__12057.index_atom, cljs.core.inc);
    return this__12057.s[idx__12058]
  }else {
    var buf__12059 = cljs.core.deref.call(null, this__12057.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__12057.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__12059)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__12060 = this;
  return cljs.core.swap_BANG_.call(null, this__12060.buffer_atom, function(p1__12040_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__12040_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____12062 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____12062)) {
    return or__3824__auto____12062
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____12067 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____12067) {
    return or__3824__auto____12067
  }else {
    var and__3822__auto____12069 = function() {
      var or__3824__auto____12068 = "+" === initch;
      if(or__3824__auto____12068) {
        return or__3824__auto____12068
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____12069)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__12070 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__12070);
        return next_ch__12070
      }())
    }else {
      return and__3822__auto____12069
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__12071) {
    var rdr = cljs.core.first(arglist__12071);
    var msg = cljs.core.rest(arglist__12071);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____12075 = !(ch === "#");
  if(and__3822__auto____12075) {
    var and__3822__auto____12076 = !(ch === "'");
    if(and__3822__auto____12076) {
      var and__3822__auto____12077 = !(ch === ":");
      if(and__3822__auto____12077) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____12077
      }
    }else {
      return and__3822__auto____12076
    }
  }else {
    return and__3822__auto____12075
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__12082 = new goog.string.StringBuffer(initch);
  var ch__12083 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____12084 = ch__12083 == null;
      if(or__3824__auto____12084) {
        return or__3824__auto____12084
      }else {
        var or__3824__auto____12085 = cljs.reader.whitespace_QMARK_.call(null, ch__12083);
        if(or__3824__auto____12085) {
          return or__3824__auto____12085
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__12083)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__12083);
      return sb__12082.toString()
    }else {
      var G__12086 = function() {
        sb__12082.append(ch__12083);
        return sb__12082
      }();
      var G__12087 = cljs.reader.read_char.call(null, rdr);
      sb__12082 = G__12086;
      ch__12083 = G__12087;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__12091 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____12092 = ch__12091 === "n";
      if(or__3824__auto____12092) {
        return or__3824__auto____12092
      }else {
        var or__3824__auto____12093 = ch__12091 === "r";
        if(or__3824__auto____12093) {
          return or__3824__auto____12093
        }else {
          return ch__12091 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__12095 = re.exec(s);
  if(matches__12095 == null) {
    return null
  }else {
    if(matches__12095.length === 1) {
      return matches__12095[0]
    }else {
      return matches__12095
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__12103 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__12104 = groups__12103[2];
  if(!function() {
    var or__3824__auto____12105 = group3__12104 == null;
    if(or__3824__auto____12105) {
      return or__3824__auto____12105
    }else {
      return group3__12104.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__12106 = "-" === groups__12103[1] ? -1 : 1;
    var a__12107 = cljs.core.truth_(groups__12103[3]) ? [groups__12103[3], 10] : cljs.core.truth_(groups__12103[4]) ? [groups__12103[4], 16] : cljs.core.truth_(groups__12103[5]) ? [groups__12103[5], 8] : cljs.core.truth_(groups__12103[7]) ? [groups__12103[7], parseInt(groups__12103[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__12108 = a__12107[0];
    var radix__12109 = a__12107[1];
    if(n__12108 == null) {
      return null
    }else {
      return negate__12106 * parseInt(n__12108, radix__12109)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__12113 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__12114 = groups__12113[1];
  var denominator__12115 = groups__12113[2];
  return parseInt(numinator__12114) / parseInt(denominator__12115)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__12118 = re.exec(s);
  if(function() {
    var and__3822__auto____12119 = !(matches__12118 == null);
    if(and__3822__auto____12119) {
      return matches__12118[0] === s
    }else {
      return and__3822__auto____12119
    }
  }()) {
    if(matches__12118.length === 1) {
      return matches__12118[0]
    }else {
      return matches__12118
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__12121 = parseInt(code_str, 16);
  return String.fromCharCode(code__12121)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__12124 = cljs.reader.read_char.call(null, reader);
  var mapresult__12125 = cljs.reader.escape_char_map.call(null, ch__12124);
  if(cljs.core.truth_(mapresult__12125)) {
    return mapresult__12125
  }else {
    if(ch__12124 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__12124, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__12124 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__12124, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__12124)) {
          return String.fromCharCode(ch__12124)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__12124)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__12127 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__12127))) {
      var G__12128 = cljs.reader.read_char.call(null, rdr);
      ch__12127 = G__12128;
      continue
    }else {
      return ch__12127
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__12135 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__12136 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__12136)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch__12136) {
      return cljs.core.persistent_BANG_.call(null, a__12135)
    }else {
      var temp__3971__auto____12137 = cljs.reader.macros.call(null, ch__12136);
      if(cljs.core.truth_(temp__3971__auto____12137)) {
        var macrofn__12138 = temp__3971__auto____12137;
        var mret__12139 = macrofn__12138.call(null, rdr, ch__12136);
        var G__12141 = mret__12139 === rdr ? a__12135 : cljs.core.conj_BANG_.call(null, a__12135, mret__12139);
        a__12135 = G__12141;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__12136);
        var o__12140 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__12142 = o__12140 === rdr ? a__12135 : cljs.core.conj_BANG_.call(null, a__12135, o__12140);
        a__12135 = G__12142;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__12147 = cljs.reader.read_char.call(null, rdr);
  var dm__12148 = cljs.reader.dispatch_macros.call(null, ch__12147);
  if(cljs.core.truth_(dm__12148)) {
    return dm__12148.call(null, rdr, _)
  }else {
    var temp__3971__auto____12149 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__12147);
    if(cljs.core.truth_(temp__3971__auto____12149)) {
      var obj__12150 = temp__3971__auto____12149;
      return obj__12150
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__12147)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__12152 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__12152))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__12152)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__12159 = new goog.string.StringBuffer(initch);
  var ch__12160 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12161 = ch__12160 == null;
      if(or__3824__auto____12161) {
        return or__3824__auto____12161
      }else {
        var or__3824__auto____12162 = cljs.reader.whitespace_QMARK_.call(null, ch__12160);
        if(or__3824__auto____12162) {
          return or__3824__auto____12162
        }else {
          return cljs.reader.macros.call(null, ch__12160)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__12160);
      var s__12163 = buffer__12159.toString();
      var or__3824__auto____12164 = cljs.reader.match_number.call(null, s__12163);
      if(cljs.core.truth_(or__3824__auto____12164)) {
        return or__3824__auto____12164
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__12163, "]")
      }
    }else {
      var G__12165 = function() {
        buffer__12159.append(ch__12160);
        return buffer__12159
      }();
      var G__12166 = cljs.reader.read_char.call(null, reader);
      buffer__12159 = G__12165;
      ch__12160 = G__12166;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__12169 = new goog.string.StringBuffer;
  var ch__12170 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__12170 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch__12170) {
        var G__12171 = function() {
          buffer__12169.append(cljs.reader.escape_char.call(null, buffer__12169, reader));
          return buffer__12169
        }();
        var G__12172 = cljs.reader.read_char.call(null, reader);
        buffer__12169 = G__12171;
        ch__12170 = G__12172;
        continue
      }else {
        if('"' === ch__12170) {
          return buffer__12169.toString()
        }else {
          if("\ufdd0'default") {
            var G__12173 = function() {
              buffer__12169.append(ch__12170);
              return buffer__12169
            }();
            var G__12174 = cljs.reader.read_char.call(null, reader);
            buffer__12169 = G__12173;
            ch__12170 = G__12174;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__12176 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__12176, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__12176, 0, token__12176.indexOf("/")), cljs.core.subs.call(null, token__12176, token__12176.indexOf("/") + 1, token__12176.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__12176, cljs.core.symbol.call(null, token__12176))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__12186 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__12187 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__12186);
  var token__12188 = a__12187[0];
  var ns__12189 = a__12187[1];
  var name__12190 = a__12187[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____12192 = function() {
      var and__3822__auto____12191 = !(void 0 === ns__12189);
      if(and__3822__auto____12191) {
        return ns__12189.substring(ns__12189.length - 2, ns__12189.length) === ":/"
      }else {
        return and__3822__auto____12191
      }
    }();
    if(cljs.core.truth_(or__3824__auto____12192)) {
      return or__3824__auto____12192
    }else {
      var or__3824__auto____12193 = name__12190[name__12190.length - 1] === ":";
      if(or__3824__auto____12193) {
        return or__3824__auto____12193
      }else {
        return!(token__12188.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__12188)
  }else {
    if(function() {
      var and__3822__auto____12194 = !(ns__12189 == null);
      if(and__3822__auto____12194) {
        return ns__12189.length > 0
      }else {
        return and__3822__auto____12194
      }
    }()) {
      return cljs.core.keyword.call(null, ns__12189.substring(0, ns__12189.indexOf("/")), name__12190)
    }else {
      return cljs.core.keyword.call(null, token__12188)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__12200 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__12200)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__12201 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__12202__12203 = o__12201;
    if(G__12202__12203) {
      if(function() {
        var or__3824__auto____12204 = G__12202__12203.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____12204) {
          return or__3824__auto____12204
        }else {
          return G__12202__12203.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12202__12203.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12202__12203)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12202__12203)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__12201, cljs.core.merge.call(null, cljs.core.meta.call(null, o__12201), m__12200))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__12208 = cljs.reader.read_char.call(null, reader);
    if(ch__12208 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__12208)) {
        var G__12211 = reader;
        var G__12212 = eof_is_error;
        var G__12213 = sentinel;
        var G__12214 = is_recursive;
        reader = G__12211;
        eof_is_error = G__12212;
        sentinel = G__12213;
        is_recursive = G__12214;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__12208)) {
          var G__12215 = cljs.reader.read_comment.call(null, reader, ch__12208);
          var G__12216 = eof_is_error;
          var G__12217 = sentinel;
          var G__12218 = is_recursive;
          reader = G__12215;
          eof_is_error = G__12216;
          sentinel = G__12217;
          is_recursive = G__12218;
          continue
        }else {
          if("\ufdd0'else") {
            var f__12209 = cljs.reader.macros.call(null, ch__12208);
            var res__12210 = cljs.core.truth_(f__12209) ? f__12209.call(null, reader, ch__12208) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__12208) ? cljs.reader.read_number.call(null, reader, ch__12208) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__12208) : null;
            if(res__12210 === reader) {
              var G__12219 = reader;
              var G__12220 = eof_is_error;
              var G__12221 = sentinel;
              var G__12222 = is_recursive;
              reader = G__12219;
              eof_is_error = G__12220;
              sentinel = G__12221;
              is_recursive = G__12222;
              continue
            }else {
              return res__12210
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__12224 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__12224, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__12226 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__12226.getLength() < width) {
            var G__12227 = b__12226.append("0");
            b__12226 = G__12227;
            continue
          }else {
            return b__12226.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____12230 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____12230)) {
    var or__3824__auto____12231 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____12231)) {
      return or__3824__auto____12231
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____12230
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__12236 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__12237 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__12237 : dim_norm__12236, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__12238 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__12240 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____12239 = low <= n;
      if(and__3822__auto____12239) {
        return n <= high
      }else {
        return and__3822__auto____12239
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____12241 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__12238, ts)));
    if(cljs.core.truth_(temp__3974__auto____12241)) {
      var vec__12242__12245 = temp__3974__auto____12241;
      var vec__12243__12246 = cljs.core.nth.call(null, vec__12242__12245, 0, null);
      var ___12247 = cljs.core.nth.call(null, vec__12243__12246, 0, null);
      var years__12248 = cljs.core.nth.call(null, vec__12243__12246, 1, null);
      var months__12249 = cljs.core.nth.call(null, vec__12243__12246, 2, null);
      var days__12250 = cljs.core.nth.call(null, vec__12243__12246, 3, null);
      var hours__12251 = cljs.core.nth.call(null, vec__12243__12246, 4, null);
      var minutes__12252 = cljs.core.nth.call(null, vec__12243__12246, 5, null);
      var seconds__12253 = cljs.core.nth.call(null, vec__12243__12246, 6, null);
      var milliseconds__12254 = cljs.core.nth.call(null, vec__12243__12246, 7, null);
      var vec__12244__12255 = cljs.core.nth.call(null, vec__12242__12245, 1, null);
      var ___12256 = cljs.core.nth.call(null, vec__12244__12255, 0, null);
      var ___12257 = cljs.core.nth.call(null, vec__12244__12255, 1, null);
      var ___12258 = cljs.core.nth.call(null, vec__12244__12255, 2, null);
      var V__12259 = vec__12242__12245;
      var vec__12260__12263 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__12235_SHARP_) {
          return parseInt(p1__12235_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__12233_SHARP_, p2__12232_SHARP_) {
        return cljs.core.update_in.call(null, p2__12232_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__12233_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__12234_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__12234_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__12259));
      var vec__12261__12264 = cljs.core.nth.call(null, vec__12260__12263, 0, null);
      var ___12265 = cljs.core.nth.call(null, vec__12261__12264, 0, null);
      var y__12266 = cljs.core.nth.call(null, vec__12261__12264, 1, null);
      var mo__12267 = cljs.core.nth.call(null, vec__12261__12264, 2, null);
      var d__12268 = cljs.core.nth.call(null, vec__12261__12264, 3, null);
      var h__12269 = cljs.core.nth.call(null, vec__12261__12264, 4, null);
      var m__12270 = cljs.core.nth.call(null, vec__12261__12264, 5, null);
      var s__12271 = cljs.core.nth.call(null, vec__12261__12264, 6, null);
      var ms__12272 = cljs.core.nth.call(null, vec__12261__12264, 7, null);
      var vec__12262__12273 = cljs.core.nth.call(null, vec__12260__12263, 1, null);
      var offset_sign__12274 = cljs.core.nth.call(null, vec__12262__12273, 0, null);
      var offset_hours__12275 = cljs.core.nth.call(null, vec__12262__12273, 1, null);
      var offset_minutes__12276 = cljs.core.nth.call(null, vec__12262__12273, 2, null);
      var offset__12277 = offset_sign__12274 * (offset_hours__12275 * 60 + offset_minutes__12276);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__12248) ? 1970 : y__12266, cljs.core.not.call(null, months__12249) ? 1 : check__12240.call(null, 1, mo__12267, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__12250) ? 1 : check__12240.call(null, 1, d__12268, cljs.reader.days_in_month.call(null, mo__12267, cljs.reader.leap_year_QMARK_.call(null, y__12266)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__12251) ? 0 : check__12240.call(null, 0, h__12269, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__12252) ? 0 : check__12240.call(null, 0, m__12270, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__12253) ? 0 : check__12240.call(null, 0, s__12271, cljs.core._EQ_.call(null, m__12270, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__12254) ? 0 : check__12240.call(null, 
      0, ms__12272, 999, "timestamp millisecond field must be in range 0..999"), offset__12277], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____12289 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____12289)) {
    var vec__12290__12291 = temp__3971__auto____12289;
    var years__12292 = cljs.core.nth.call(null, vec__12290__12291, 0, null);
    var months__12293 = cljs.core.nth.call(null, vec__12290__12291, 1, null);
    var days__12294 = cljs.core.nth.call(null, vec__12290__12291, 2, null);
    var hours__12295 = cljs.core.nth.call(null, vec__12290__12291, 3, null);
    var minutes__12296 = cljs.core.nth.call(null, vec__12290__12291, 4, null);
    var seconds__12297 = cljs.core.nth.call(null, vec__12290__12291, 5, null);
    var ms__12298 = cljs.core.nth.call(null, vec__12290__12291, 6, null);
    var offset__12299 = cljs.core.nth.call(null, vec__12290__12291, 7, null);
    return new Date(Date.UTC(years__12292, months__12293 - 1, days__12294, hours__12295, minutes__12296, seconds__12297, ms__12298) - offset__12299 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__12303 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____12304 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__12303), null);
  if(cljs.core.truth_(temp__3971__auto____12304)) {
    var pfn__12305 = temp__3971__auto____12304;
    return pfn__12305.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__12303), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__12308 = cljs.core.name.call(null, tag);
  var old_parser__12309 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__12308, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__12308, f);
  return old_parser__12309
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__12312 = cljs.core.name.call(null, tag);
  var old_parser__12313 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__12312, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__12312);
  return old_parser__12313
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
goog.require("cljs.reader");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____11861 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____11861)) {
        var cm__11862 = temp__3971__auto____11861;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__11862), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__11863) {
    var vec__11867__11868 = p__11863;
    var context__11869 = cljs.core.nth.call(null, vec__11867__11868, 0, null);
    if(cljs.core.not.call(null, context__11869)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__11869)
    }
  };
  var $ = function(sel, var_args) {
    var p__11863 = null;
    if(goog.isDef(var_args)) {
      p__11863 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__11863)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__11870) {
    var sel = cljs.core.first(arglist__11870);
    var p__11863 = cljs.core.rest(arglist__11870);
    return $__delegate(sel, p__11863)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____11871 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____11871)) {
    return or__3824__auto____11871
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__11872 = null;
  var G__11872__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__11872__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__11872 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11872__2.call(this, _, k);
      case 3:
        return G__11872__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11872
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text()
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt)
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__11873) {
    var vec__11878__11879 = p__11873;
    var v__11880 = cljs.core.nth.call(null, vec__11878__11879, 0, null);
    var a__11881 = cljs.core.name.call(null, a);
    if(cljs.core.not.call(null, v__11880)) {
      return $elem.attr(a__11881)
    }else {
      return $elem.attr(a__11881, v__11880)
    }
  };
  var attr = function($elem, a, var_args) {
    var p__11873 = null;
    if(goog.isDef(var_args)) {
      p__11873 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__11873)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__11882) {
    var $elem = cljs.core.first(arglist__11882);
    var a = cljs.core.first(cljs.core.next(arglist__11882));
    var p__11873 = cljs.core.rest(cljs.core.next(arglist__11882));
    return attr__delegate($elem, a, p__11873)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__11883) {
    var vec__11888__11889 = p__11883;
    var v__11890 = cljs.core.nth.call(null, vec__11888__11889, 0, null);
    var k__11891 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__11890)) {
      return $elem.data(k__11891)
    }else {
      return $elem.data(k__11891, v__11890)
    }
  };
  var data = function($elem, k, var_args) {
    var p__11883 = null;
    if(goog.isDef(var_args)) {
      p__11883 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__11883)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__11892) {
    var $elem = cljs.core.first(arglist__11892);
    var k = cljs.core.first(cljs.core.next(arglist__11892));
    var p__11883 = cljs.core.rest(cljs.core.next(arglist__11892));
    return data__delegate($elem, k, p__11883)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__11894 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__11894)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__11896 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__11896)
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  var cl__11898 = cljs.core.name.call(null, cl);
  return $elem.toggleClass(cl__11898)
};
jayq.core.has_class = function has_class($elem, cl) {
  var cl__11900 = cljs.core.name.call(null, cl);
  return $elem.hasClass(cl__11900)
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector))
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content)
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target))
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target))
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target))
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target))
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__11901) {
    var vec__11906__11907 = p__11901;
    var speed__11908 = cljs.core.nth.call(null, vec__11906__11907, 0, null);
    var on_finish__11909 = cljs.core.nth.call(null, vec__11906__11907, 1, null);
    return $elem.hide(speed__11908, on_finish__11909)
  };
  var hide = function($elem, var_args) {
    var p__11901 = null;
    if(goog.isDef(var_args)) {
      p__11901 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__11901)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__11910) {
    var $elem = cljs.core.first(arglist__11910);
    var p__11901 = cljs.core.rest(arglist__11910);
    return hide__delegate($elem, p__11901)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__11911) {
    var vec__11916__11917 = p__11911;
    var speed__11918 = cljs.core.nth.call(null, vec__11916__11917, 0, null);
    var on_finish__11919 = cljs.core.nth.call(null, vec__11916__11917, 1, null);
    return $elem.show(speed__11918, on_finish__11919)
  };
  var show = function($elem, var_args) {
    var p__11911 = null;
    if(goog.isDef(var_args)) {
      p__11911 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__11911)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__11920) {
    var $elem = cljs.core.first(arglist__11920);
    var p__11911 = cljs.core.rest(arglist__11920);
    return show__delegate($elem, p__11911)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__11921) {
    var vec__11926__11927 = p__11921;
    var speed__11928 = cljs.core.nth.call(null, vec__11926__11927, 0, null);
    var on_finish__11929 = cljs.core.nth.call(null, vec__11926__11927, 1, null);
    return $elem.toggle(speed__11928, on_finish__11929)
  };
  var toggle = function($elem, var_args) {
    var p__11921 = null;
    if(goog.isDef(var_args)) {
      p__11921 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__11921)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__11930) {
    var $elem = cljs.core.first(arglist__11930);
    var p__11921 = cljs.core.rest(arglist__11930);
    return toggle__delegate($elem, p__11921)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__11931) {
    var vec__11936__11937 = p__11931;
    var speed__11938 = cljs.core.nth.call(null, vec__11936__11937, 0, null);
    var on_finish__11939 = cljs.core.nth.call(null, vec__11936__11937, 1, null);
    return $elem.fadeOut(speed__11938, on_finish__11939)
  };
  var fade_out = function($elem, var_args) {
    var p__11931 = null;
    if(goog.isDef(var_args)) {
      p__11931 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__11931)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__11940) {
    var $elem = cljs.core.first(arglist__11940);
    var p__11931 = cljs.core.rest(arglist__11940);
    return fade_out__delegate($elem, p__11931)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__11941) {
    var vec__11946__11947 = p__11941;
    var speed__11948 = cljs.core.nth.call(null, vec__11946__11947, 0, null);
    var on_finish__11949 = cljs.core.nth.call(null, vec__11946__11947, 1, null);
    return $elem.fadeIn(speed__11948, on_finish__11949)
  };
  var fade_in = function($elem, var_args) {
    var p__11941 = null;
    if(goog.isDef(var_args)) {
      p__11941 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__11941)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__11950) {
    var $elem = cljs.core.first(arglist__11950);
    var p__11941 = cljs.core.rest(arglist__11950);
    return fade_in__delegate($elem, p__11941)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__11951) {
    var vec__11956__11957 = p__11951;
    var speed__11958 = cljs.core.nth.call(null, vec__11956__11957, 0, null);
    var on_finish__11959 = cljs.core.nth.call(null, vec__11956__11957, 1, null);
    return $elem.slideUp(speed__11958, on_finish__11959)
  };
  var slide_up = function($elem, var_args) {
    var p__11951 = null;
    if(goog.isDef(var_args)) {
      p__11951 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__11951)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__11960) {
    var $elem = cljs.core.first(arglist__11960);
    var p__11951 = cljs.core.rest(arglist__11960);
    return slide_up__delegate($elem, p__11951)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__11961) {
    var vec__11966__11967 = p__11961;
    var speed__11968 = cljs.core.nth.call(null, vec__11966__11967, 0, null);
    var on_finish__11969 = cljs.core.nth.call(null, vec__11966__11967, 1, null);
    return $elem.slideDown(speed__11968, on_finish__11969)
  };
  var slide_down = function($elem, var_args) {
    var p__11961 = null;
    if(goog.isDef(var_args)) {
      p__11961 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__11961)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__11970) {
    var $elem = cljs.core.first(arglist__11970);
    var p__11961 = cljs.core.rest(arglist__11970);
    return slide_down__delegate($elem, p__11961)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings()
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector))
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  siblings.cljs$lang$arity$1 = siblings__1;
  siblings.cljs$lang$arity$2 = siblings__2;
  return siblings
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents()
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector))
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil()
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents_until.cljs$lang$arity$1 = parents_until__1;
  parents_until.cljs$lang$arity$2 = parents_until__2;
  parents_until.cljs$lang$arity$3 = parents_until__3;
  return parents_until
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children()
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector))
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  children.cljs$lang$arity$1 = children__1;
  children.cljs$lang$arity$2 = children__2;
  return children
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next()
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector))
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  next.cljs$lang$arity$1 = next__1;
  next.cljs$lang$arity$2 = next__2;
  return next
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev()
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector))
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prev.cljs$lang$arity$1 = prev__1;
  prev.cljs$lang$arity$2 = prev__2;
  return prev
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll()
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector))
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  next_all.cljs$lang$arity$1 = next_all__1;
  next_all.cljs$lang$arity$2 = next_all__2;
  return next_all
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll()
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector))
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prev_all.cljs$lang$arity$1 = prev_all__1;
  prev_all.cljs$lang$arity$2 = prev_all__2;
  return prev_all
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil()
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  next_until.cljs$lang$arity$1 = next_until__1;
  next_until.cljs$lang$arity$2 = next_until__2;
  next_until.cljs$lang$arity$3 = next_until__3;
  return next_until
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil()
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prev_until.cljs$lang$arity$1 = prev_until__1;
  prev_until.cljs$lang$arity$2 = prev_until__2;
  prev_until.cljs$lang$arity$3 = prev_until__3;
  return prev_until
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__11971) {
    var vec__11975__11976 = p__11971;
    var context__11977 = cljs.core.nth.call(null, vec__11975__11976, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context__11977)
  };
  var closest = function($elem, selector, var_args) {
    var p__11971 = null;
    if(goog.isDef(var_args)) {
      p__11971 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__11971)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__11978) {
    var $elem = cljs.core.first(arglist__11978);
    var selector = cljs.core.first(cljs.core.next(arglist__11978));
    var p__11971 = cljs.core.rest(cljs.core.next(arglist__11978));
    return closest__delegate($elem, selector, p__11971)
  };
  closest.cljs$lang$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__11979) {
    var vec__11983__11984 = p__11979;
    var v__11985 = cljs.core.nth.call(null, vec__11983__11984, 0, null);
    if(cljs.core.truth_(v__11985)) {
      return $elem.val(v__11985)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__11979 = null;
    if(goog.isDef(var_args)) {
      p__11979 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__11979)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__11986) {
    var $elem = cljs.core.first(arglist__11986);
    var p__11979 = cljs.core.rest(arglist__11986);
    return val__delegate($elem, p__11979)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__11987, content, callback) {
  var vec__11993__11994 = p__11987;
  var method__11995 = cljs.core.nth.call(null, vec__11993__11994, 0, null);
  var uri__11996 = cljs.core.nth.call(null, vec__11993__11994, 1, null);
  var params__11997 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__11995)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__11996, params__11997)
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.util.clj__GT_js.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.util.clj__GT_js.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax.cljs$lang$arity$1 = ajax__1;
  ajax.cljs$lang$arity$2 = ajax__2;
  return ajax
}();
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, [cljs.core.str(s)].join(""))
};
jQuery.ajaxSetup(jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'accepts", "\ufdd0'contents", "\ufdd0'converters"], {"\ufdd0'accepts":cljs.core.ObjMap.fromObject(["\ufdd0'edn", "\ufdd0'clojure"], {"\ufdd0'edn":"application/edn, text/edn", "\ufdd0'clojure":"application/clojure, text/clojure"}), "\ufdd0'contents":cljs.core.ObjMap.fromObject(["clojure"], {"clojure":/edn|clojure/}), "\ufdd0'converters":cljs.core.ObjMap.fromObject(["text edn", "text clojure"], {"text edn":jayq.core.mimetype_converter, 
"text clojure":jayq.core.mimetype_converter})})));
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__11998) {
    var vec__12002__12003 = p__11998;
    var func__12004 = cljs.core.nth.call(null, vec__12002__12003, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func__12004)
  };
  var unbind = function($elem, ev, var_args) {
    var p__11998 = null;
    if(goog.isDef(var_args)) {
      p__11998 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__11998)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__12005) {
    var $elem = cljs.core.first(arglist__12005);
    var ev = cljs.core.first(cljs.core.next(arglist__12005));
    var p__11998 = cljs.core.rest(cljs.core.next(arglist__12005));
    return unbind__delegate($elem, ev, p__11998)
  };
  unbind.cljs$lang$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.sequential_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__12006) {
    var vec__12012__12013 = p__12006;
    var sel__12014 = cljs.core.nth.call(null, vec__12012__12013, 0, null);
    var data__12015 = cljs.core.nth.call(null, vec__12012__12013, 1, null);
    var handler__12016 = cljs.core.nth.call(null, vec__12012__12013, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__12014), data__12015, handler__12016)
  };
  var on = function($elem, events, var_args) {
    var p__12006 = null;
    if(goog.isDef(var_args)) {
      p__12006 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__12006)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__12017) {
    var $elem = cljs.core.first(arglist__12017);
    var events = cljs.core.first(cljs.core.next(arglist__12017));
    var p__12006 = cljs.core.rest(cljs.core.next(arglist__12017));
    return on__delegate($elem, events, p__12006)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__12018) {
    var vec__12024__12025 = p__12018;
    var sel__12026 = cljs.core.nth.call(null, vec__12024__12025, 0, null);
    var data__12027 = cljs.core.nth.call(null, vec__12024__12025, 1, null);
    var handler__12028 = cljs.core.nth.call(null, vec__12024__12025, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__12026), data__12027, handler__12028)
  };
  var one = function($elem, events, var_args) {
    var p__12018 = null;
    if(goog.isDef(var_args)) {
      p__12018 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__12018)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__12029) {
    var $elem = cljs.core.first(arglist__12029);
    var events = cljs.core.first(cljs.core.next(arglist__12029));
    var p__12018 = cljs.core.rest(cljs.core.next(arglist__12029));
    return one__delegate($elem, events, p__12018)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__12030) {
    var vec__12035__12036 = p__12030;
    var sel__12037 = cljs.core.nth.call(null, vec__12035__12036, 0, null);
    var handler__12038 = cljs.core.nth.call(null, vec__12035__12036, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__12037), handler__12038)
  };
  var off = function($elem, events, var_args) {
    var p__12030 = null;
    if(goog.isDef(var_args)) {
      p__12030 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__12030)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__12039) {
    var $elem = cljs.core.first(arglist__12039);
    var events = cljs.core.first(cljs.core.next(arglist__12039));
    var p__12030 = cljs.core.rest(cljs.core.next(arglist__12039));
    return off__delegate($elem, events, p__12030)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("carneades.policy_analysis.web.views.pmt.vote");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("jayq.util");
carneades.policy_analysis.web.views.pmt.vote.get_vote_score = function get_vote_score() {
  var v__7417 = jayq.core.$.call(null, "input[type=radio]:checked").val();
  var pred__7418__7421 = cljs.core._EQ_;
  var expr__7419__7422 = v__7417;
  if(pred__7418__7421.call(null, "accepted", expr__7419__7422)) {
    return 1
  }else {
    if(pred__7418__7421.call(null, "rejected", expr__7419__7422)) {
      return 0
    }else {
      if(pred__7418__7421.call(null, "undecided", expr__7419__7422)) {
        return 0.5
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__7419__7422)].join(""));
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.vote.send_vote = function send_vote(vote_model, id, score) {
  vote_model.set("votes", jayq.util.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArrays([id], [score])));
  return vote_model.save()
};
carneades.policy_analysis.web.views.pmt.vote.vote_score = function vote_score(vote_model, id) {
  return vote_model.get("votes")[id]
};
carneades.policy_analysis.web.views.pmt.vote.round_score = function round_score(score) {
  return(new Number(score)).toFixed(2)
};
carneades.policy_analysis.web.views.pmt.vote.Vote = Backbone.View.extend({"render":function() {
  var this__7423 = this;
  var model__7424 = this__7423["model"];
  var claim__7425 = model__7424.get("claim");
  var lang__7426 = model__7424.get("lang");
  var current_case_pollid__7427 = model__7424.get("current-case-pollid");
  if(cljs.core.truth_(current_case_pollid__7427)) {
    this__7423.show_vote_results()
  }else {
    var item_selector__7213__auto____7428 = "#arguments-item";
    var claim_text__7429 = claim__7425.text[lang__7426];
    carneades.policy_analysis.web.views.core.template.call(null, this__7423, "\ufdd0'vote", cljs.core.ObjMap.fromObject(["\ufdd0'claim"], {"\ufdd0'claim":claim_text__7429}));
    jayq.core.attr.call(null, this__7423.$("input:radio:first"), "checked", true);
    PM.activate(item_selector__7213__auto____7428);
    PM.attach_lang_listener()
  }
  return this__7423
}, "show_vote_results":function() {
  var this__7430 = this;
  var item_selector__7213__auto____7431 = "#arguments-item";
  var model__7432 = this__7430["model"];
  var db__7433 = model__7432.get("db");
  var claim__7434 = model__7432.get("claim");
  var lang__7435 = model__7432.get("lang");
  var claim_text__7436 = claim__7434.text[lang__7435];
  PM.busy_cursor_on();
  PM.ajax_get([cljs.core.str(IMPACT.wsurl), cljs.core.str("/poll-results/"), cljs.core.str(IMPACT.debate_db), cljs.core.str("/"), cljs.core.str(IMPACT.db)].join(""), function(result) {
    var scores__7437 = cljs.core.js__GT_clj.call(null, result, "\ufdd0'keywordize-keys", true);
    PM.busy_cursor_off();
    var item_selector__7213__auto____7438 = "#arguments-item";
    carneades.policy_analysis.web.views.core.template.call(null, this__7430, "\ufdd0'vote-results", cljs.core.ObjMap.fromObject(["\ufdd0'db", "\ufdd0'claim", "\ufdd0'accepted_score", "\ufdd0'rejected_score", "\ufdd0'undecided_score"], {"\ufdd0'db":db__7433, "\ufdd0'claim":claim_text__7436, "\ufdd0'accepted_score":carneades.policy_analysis.web.views.pmt.vote.round_score.call(null, 100 * (new cljs.core.Keyword("\ufdd0'accepted")).call(null, scores__7437)), "\ufdd0'rejected_score":carneades.policy_analysis.web.views.pmt.vote.round_score.call(null, 
    100 * (new cljs.core.Keyword("\ufdd0'rejected")).call(null, scores__7437)), "\ufdd0'undecided_score":carneades.policy_analysis.web.views.pmt.vote.round_score.call(null, 100 * (new cljs.core.Keyword("\ufdd0'undecided")).call(null, scores__7437))}));
    PM.activate(item_selector__7213__auto____7438);
    return PM.attach_lang_listener()
  }, PM.on_error);
  PM.activate(item_selector__7213__auto____7431);
  PM.attach_lang_listener();
  return this__7430
}, "vote":function() {
  var this__7439 = this;
  var item_selector__7213__auto____7440 = "#arguments-item";
  var model__7441 = this__7439["model"];
  var db__7442 = model__7441.get("db");
  var claim__7443 = model__7441.get("claim");
  (new PM.DebatePoll(jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'opinion", "\ufdd0'mainissueatompredicate", "\ufdd0'casedb", "\ufdd0'policykey", "\ufdd0'qid", "\ufdd0'issueid"], {"\ufdd0'opinion":carneades.policy_analysis.web.views.pmt.vote.get_vote_score.call(null), "\ufdd0'mainissueatompredicate":PM.current_mainissueatompredicate(), "\ufdd0'casedb":IMPACT.db, "\ufdd0'policykey":IMPACT.current_policy, "\ufdd0'qid":IMPACT.question, "\ufdd0'issueid":PM.current_issue().id})))).save(null, 
  jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'success", "\ufdd0'error"], {"\ufdd0'success":function(response) {
    return document.cookie = [cljs.core.str("pollid-"), cljs.core.str(IMPACT.db), cljs.core.str("="), cljs.core.str(response.id)].join("")
  }, "\ufdd0'error":PM.on_model_error})));
  carneades.policy_analysis.web.views.core.template.call(null, this__7439, "\ufdd0'after-vote", cljs.core.ObjMap.fromObject(["\ufdd0'db"], {"\ufdd0'db":db__7442}));
  PM.activate(item_selector__7213__auto____7440);
  PM.attach_lang_listener();
  return this__7439
}, "className":"pmt-vote", "events":{"click .show-vote-results":"show_vote_results", "click .vote-now":"vote"}});
carneades.policy_analysis.web.views.pmt.vote.display = function display() {
  var vote_view__7445 = carneades.policy_analysis.web.backbone.core.new$.call(null, carneades.policy_analysis.web.views.pmt.vote.Vote, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":carneades.policy_analysis.web.backbone.core.new_model.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'claim", "\ufdd0'lang", "\ufdd0'db", "\ufdd0'current-case-pollid"], {"\ufdd0'claim":PM.current_issue(), "\ufdd0'lang":IMPACT.lang, "\ufdd0'db":IMPACT.db, "\ufdd0'current-case-pollid":PM.current_case_pollid()}))}));
  jayq.core.inner.call(null, jayq.core.$.call(null, "#pm"), vote_view__7445.$el);
  carneades.policy_analysis.web.backbone.core.render.call(null, vote_view__7445);
  return false
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.vote.display", carneades.policy_analysis.web.views.pmt.vote.display);
goog.provide("carneades.policy_analysis.web.views.pmt.report");
goog.require("cljs.core");
goog.require("carneades.policy_analysis.web.views.pmt.vote");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("carneades.policy_analysis.web.views.pmt.vote");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("jayq.util");
carneades.policy_analysis.web.views.pmt.report.Report = Backbone.View.extend({"render":function() {
  var this__7598 = this;
  PM.ajax_get([cljs.core.str(IMPACT.wsurl), cljs.core.str("/aggregated-poll-results/"), cljs.core.str(IMPACT.debate_db)].join(""), function(results) {
    var results__7599 = cljs.core.js__GT_clj.call(null, results);
    var default_values__7600 = cljs.core.reduce.call(null, function(m, id) {
      return cljs.core.assoc.call(null, m, id, 0)
    }, cljs.core.ObjMap.EMPTY, PM.get_policies_ids());
    var results__7601 = cljs.core.merge.call(null, default_values__7600, results__7599);
    var policies__7608 = cljs.core.reduce.call(null, function(policies, p__7602) {
      var vec__7603__7604 = p__7602;
      var policy_id__7605 = cljs.core.nth.call(null, vec__7603__7604, 0, null);
      var agreement__7606 = cljs.core.nth.call(null, vec__7603__7604, 1, null);
      var name__7607 = PM.get_policy_header(policy_id__7605).title;
      return cljs.core.cons.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'agreement", "\ufdd0'url"], {"\ufdd0'name":name__7607, "\ufdd0'agreement":carneades.policy_analysis.web.views.pmt.vote.round_score.call(null, 100 * agreement__7606), "\ufdd0'url":[cljs.core.str("#/"), cljs.core.str(PM.policies_url()), cljs.core.str("/"), cljs.core.str(policy_id__7605)].join("")}), policies)
    }, cljs.core.PersistentVector.EMPTY, results__7601);
    carneades.policy_analysis.web.views.core.template.call(null, this__7598, "\ufdd0'report", cljs.core.ObjMap.fromObject(["\ufdd0'policies"], {"\ufdd0'policies":jayq.util.clj__GT_js.call(null, policies__7608)}));
    PM.activate("#report-item");
    return PM.attach_lang_listener()
  });
  return this__7598
}, "className":"pmt-report"});
carneades.policy_analysis.web.views.pmt.report.display = function display() {
  var report_view__7610 = carneades.policy_analysis.web.backbone.core.new$.call(null, carneades.policy_analysis.web.views.pmt.report.Report, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":carneades.policy_analysis.web.backbone.core.new_model.call(null, cljs.core.ObjMap.EMPTY)}));
  jayq.core.inner.call(null, jayq.core.$.call(null, "#pm"), report_view__7610.$el);
  carneades.policy_analysis.web.backbone.core.render.call(null, report_view__7610);
  return false
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.report.display", carneades.policy_analysis.web.views.pmt.report.display);
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("carneades.policy_analysis.web.i18n");
goog.require("cljs.core");
carneades.policy_analysis.web.i18n.i18n = function i18n(k) {
  return jQuery.i18n.prop(k)
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("carneades.policy_analysis.web.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____11763 = this$;
    if(and__3822__auto____11763) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____11763
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2431__auto____11764 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11765 = clojure.browser.event.event_types[goog.typeOf(x__2431__auto____11764)];
      if(or__3824__auto____11765) {
        return or__3824__auto____11765
      }else {
        var or__3824__auto____11766 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____11766) {
          return or__3824__auto____11766
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11767) {
    var vec__11768__11769 = p__11767;
    var k__11770 = cljs.core.nth.call(null, vec__11768__11769, 0, null);
    var v__11771 = cljs.core.nth.call(null, vec__11768__11769, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11770.toLowerCase()), v__11771], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11772) {
    var vec__11773__11774 = p__11772;
    var k__11775 = cljs.core.nth.call(null, vec__11773__11774, 0, null);
    var v__11776 = cljs.core.nth.call(null, vec__11773__11774, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11775.toLowerCase()), v__11776], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("carneades.policy_analysis.web.views.sct.claim_editor");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.views.core");
carneades.policy_analysis.web.views.sct.claim_editor.init_radio_buttons = function init_radio_buttons(this$, claim, statement_votes) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.core.agreed_QMARK_.call(null, claim, statement_votes))) {
    return jayq.core.attr.call(null, this$.$("input:radio:first"), "checked", true)
  }else {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.core.disagreed_QMARK_.call(null, claim, statement_votes))) {
      return jayq.core.attr.call(null, this$.$("input:radio:nth(1)"), "checked", true)
    }else {
      return null
    }
  }
};
carneades.policy_analysis.web.views.sct.claim_editor.init_sliders = function init_sliders(this$, argument_votes, pro, con) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(arg, range) {
    var score__7165 = argument_votes.call(null, arg.id);
    return jayq.core.val.call(null, jayq.core.$.call(null, range), score__7165)
  }, cljs.core.concat.call(null, pro, con), this$.$("input[type=range]")))
};
carneades.policy_analysis.web.views.sct.claim_editor.update_arguments_scores = function update_arguments_scores(this$, argument_poll, pro, con) {
  cljs.core.doall.call(null, cljs.core.map.call(null, function(arg, range) {
    var weight__7168 = parseFloat(jayq.core.val.call(null, jayq.core.$.call(null, range)));
    var votes__7169 = argument_poll.get("votes");
    votes__7169[arg.id] = weight__7168;
    argument_poll.set("votes", votes__7169);
    jayq.util.log.call(null, "setting new weight for argument");
    return jayq.util.log.call(null, weight__7168)
  }, cljs.core.concat.call(null, pro, con), this$.$("input[type=range]")));
  return carneades.policy_analysis.web.backbone.core.save.call(null, argument_poll, null, cljs.core.ObjMap.fromObject(["\ufdd0'wait"], {"\ufdd0'wait":true}))
};
carneades.policy_analysis.web.views.sct.claim_editor.update_claim_score = function update_claim_score(this$, claimid, statement_poll) {
  var votes__7176 = statement_poll.get("votes");
  var pred__7177__7180 = cljs.core._EQ_;
  var expr__7178__7181 = jayq.core.val.call(null, this$.$("input:radio:checked"));
  if(pred__7177__7180.call(null, "agree", expr__7178__7181)) {
    votes__7176[claimid] = 1
  }else {
    if(pred__7177__7180.call(null, "disagree", expr__7178__7181)) {
      votes__7176[claimid] = 0
    }else {
    }
  }
  statement_poll.set("votes", votes__7176);
  return carneades.policy_analysis.web.backbone.core.save.call(null, statement_poll, null, cljs.core.ObjMap.fromObject(["\ufdd0'wait"], {"\ufdd0'wait":true}))
};
carneades.policy_analysis.web.views.sct.claim_editor.ClaimEditor = Backbone.View.extend({"render":function() {
  var this__7182 = this;
  var model__7183 = this__7182["model"];
  var claim__7184 = model__7183.get("claim");
  var arguments__7185 = model__7183.get("arguments");
  var statement_poll__7186 = model__7183.get("statement-poll");
  var argument_poll__7187 = model__7183.get("argument-poll");
  var argument_votes__7188 = carneades.policy_analysis.web.backbone.core.get_in.call(null, argument_poll__7187, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var statement_votes__7189 = carneades.policy_analysis.web.backbone.core.get_in.call(null, statement_poll__7186, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var claim__7190 = carneades.policy_analysis.web.views.core.json.call(null, claim__7184);
  var claim__7191 = carneades.policy_analysis.web.views.core.prepare_claim.call(null, statement_votes__7189, claim__7190);
  var pro__7192 = carneades.policy_analysis.web.views.core.pro_answered.call(null, claim__7191, arguments__7185, argument_votes__7188);
  var con__7193 = carneades.policy_analysis.web.views.core.con_answered.call(null, claim__7191, arguments__7185, argument_votes__7188);
  var claim__7194 = carneades.policy_analysis.web.views.core.prepare_arguments.call(null, claim__7191, arguments__7185, argument_votes__7188);
  carneades.policy_analysis.web.views.core.template.call(null, this__7182, "\ufdd0'sct-claim-editor", cljs.core.ObjMap.fromObject(["\ufdd0'claim"], {"\ufdd0'claim":claim__7194}));
  carneades.policy_analysis.web.views.sct.claim_editor.init_radio_buttons.call(null, this__7182, claim__7194, statement_votes__7189);
  carneades.policy_analysis.web.views.sct.claim_editor.init_sliders.call(null, this__7182, argument_votes__7188, pro__7192, con__7193);
  return this__7182
}, "save_score":function() {
  var this__7195 = this;
  var model__7196 = this__7195["model"];
  var claim__7197 = model__7196.get("claim");
  var arguments__7198 = model__7196.get("arguments");
  var statement_poll__7199 = model__7196.get("statement-poll");
  var argument_poll__7200 = model__7196.get("argument-poll");
  var parent__7201 = model__7196.get("parent");
  var argument_votes__7202 = carneades.policy_analysis.web.backbone.core.get_in.call(null, argument_poll__7200, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var statement_votes__7203 = carneades.policy_analysis.web.backbone.core.get_in.call(null, statement_poll__7199, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var claim__7204 = carneades.policy_analysis.web.views.core.json.call(null, claim__7197);
  var pro__7205 = carneades.policy_analysis.web.views.core.pro_answered.call(null, claim__7204, arguments__7198, argument_votes__7202);
  var con__7206 = carneades.policy_analysis.web.views.core.con_answered.call(null, claim__7204, arguments__7198, argument_votes__7202);
  carneades.policy_analysis.web.views.sct.claim_editor.update_arguments_scores.call(null, this__7195, argument_poll__7200, pro__7205, con__7206);
  carneades.policy_analysis.web.views.sct.claim_editor.update_claim_score.call(null, this__7195, claim__7204.id, statement_poll__7199);
  parent__7201.render();
  return this__7195
}, "className":"sct-claim-editor", "events":{"click .save":"save_score"}});
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11626) {
  var vec__11627__11628 = p__11626;
  var k__11629 = cljs.core.nth.call(null, vec__11627__11628, 0, null);
  var v__11630 = cljs.core.nth.call(null, vec__11627__11628, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11629.toLowerCase()), v__11630], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____11647 = this$;
      if(and__3822__auto____11647) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____11647
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2431__auto____11648 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11649 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11648)];
        if(or__3824__auto____11649) {
          return or__3824__auto____11649
        }else {
          var or__3824__auto____11650 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11650) {
            return or__3824__auto____11650
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____11651 = this$;
      if(and__3822__auto____11651) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____11651
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2431__auto____11652 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11653 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11652)];
        if(or__3824__auto____11653) {
          return or__3824__auto____11653
        }else {
          var or__3824__auto____11654 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11654) {
            return or__3824__auto____11654
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____11655 = this$;
      if(and__3822__auto____11655) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____11655
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2431__auto____11656 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11657 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11656)];
        if(or__3824__auto____11657) {
          return or__3824__auto____11657
        }else {
          var or__3824__auto____11658 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11658) {
            return or__3824__auto____11658
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____11659 = this$;
      if(and__3822__auto____11659) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____11659
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2431__auto____11660 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11661 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11660)];
        if(or__3824__auto____11661) {
          return or__3824__auto____11661
        }else {
          var or__3824__auto____11662 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11662) {
            return or__3824__auto____11662
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____11683 = this$;
      if(and__3822__auto____11683) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____11683
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2431__auto____11684 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11685 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11684)];
        if(or__3824__auto____11685) {
          return or__3824__auto____11685
        }else {
          var or__3824__auto____11686 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11686) {
            return or__3824__auto____11686
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____11687 = this$;
      if(and__3822__auto____11687) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____11687
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2431__auto____11688 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11689 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11688)];
        if(or__3824__auto____11689) {
          return or__3824__auto____11689
        }else {
          var or__3824__auto____11690 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11690) {
            return or__3824__auto____11690
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____11691 = this$;
      if(and__3822__auto____11691) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____11691
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2431__auto____11692 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11693 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11692)];
        if(or__3824__auto____11693) {
          return or__3824__auto____11693
        }else {
          var or__3824__auto____11694 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11694) {
            return or__3824__auto____11694
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____11695 = this$;
      if(and__3822__auto____11695) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____11695
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2431__auto____11696 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11697 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11696)];
        if(or__3824__auto____11697) {
          return or__3824__auto____11697
        }else {
          var or__3824__auto____11698 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11698) {
            return or__3824__auto____11698
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____11699 = this$;
      if(and__3822__auto____11699) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____11699
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2431__auto____11700 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11701 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11700)];
        if(or__3824__auto____11701) {
          return or__3824__auto____11701
        }else {
          var or__3824__auto____11702 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11702) {
            return or__3824__auto____11702
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____11707 = this$;
    if(and__3822__auto____11707) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____11707
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2431__auto____11708 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11709 = clojure.browser.net.close[goog.typeOf(x__2431__auto____11708)];
      if(or__3824__auto____11709) {
        return or__3824__auto____11709
      }else {
        var or__3824__auto____11710 = clojure.browser.net.close["_"];
        if(or__3824__auto____11710) {
          return or__3824__auto____11710
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11711) {
    var vec__11712__11713 = p__11711;
    var k__11714 = cljs.core.nth.call(null, vec__11712__11713, 0, null);
    var v__11715 = cljs.core.nth.call(null, vec__11712__11713, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11714.toLowerCase()), v__11715], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11716) {
  var vec__11717__11718 = p__11716;
  var k__11719 = cljs.core.nth.call(null, vec__11717__11718, 0, null);
  var v__11720 = cljs.core.nth.call(null, vec__11717__11718, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11719.toLowerCase()), v__11720], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____11729 = this$;
      if(and__3822__auto____11729) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____11729
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2431__auto____11730 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11731 = clojure.browser.net.register_service[goog.typeOf(x__2431__auto____11730)];
        if(or__3824__auto____11731) {
          return or__3824__auto____11731
        }else {
          var or__3824__auto____11732 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11732) {
            return or__3824__auto____11732
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____11733 = this$;
      if(and__3822__auto____11733) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____11733
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2431__auto____11734 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11735 = clojure.browser.net.register_service[goog.typeOf(x__2431__auto____11734)];
        if(or__3824__auto____11735) {
          return or__3824__auto____11735
        }else {
          var or__3824__auto____11736 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11736) {
            return or__3824__auto____11736
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____11748 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____11748)) {
      var config__11749 = temp__3974__auto____11748;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__11749))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__11750) {
      var vec__11751__11752 = p__11750;
      var k__11753 = cljs.core.nth.call(null, vec__11751__11752, 0, null);
      var v__11754 = cljs.core.nth.call(null, vec__11751__11752, 1, null);
      var temp__3971__auto____11755 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__11753, null);
      if(cljs.core.truth_(temp__3971__auto____11755)) {
        var field__11756 = temp__3971__auto____11755;
        var G__11757__11758 = sum;
        G__11757__11758[field__11756] = v__11754;
        return G__11757__11758
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____11608 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____11608)) {
    var conn__11609 = temp__3971__auto____11608;
    return clojure.browser.net.transmit.call(null, conn__11609, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__11615 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e11613) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11613)) {
        var e__11614 = e11613;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__11614), "\ufdd0'stacktrace":cljs.core.truth_(e__11614.hasOwnProperty("stack")) ? e__11614.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e11613;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__11615)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__11617 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__11617, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__11617, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____11621 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____11621)) {
    var repl_connection__11622 = temp__3971__auto____11621;
    var connection__11623 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__11623, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__11622, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11622, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__11623, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11622, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__11622, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__11623, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__11625 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__11625));
  clojure.browser.net.register_service.call(null, repl_connection__11625, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__11625, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__11625, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__11625, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("carneades.policy_analysis.web.repl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
carneades.policy_analysis.web.repl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.exportSymbol("carneades.policy_analysis.web.repl.connect", carneades.policy_analysis.web.repl.connect);
goog.provide("carneades.policy_analysis.web.dispatch");
goog.require("cljs.core");
carneades.policy_analysis.web.dispatch.reactions = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
carneades.policy_analysis.web.dispatch.react_to = function() {
  var react_to = null;
  var react_to__2 = function(event_pred, reactor) {
    return react_to.call(null, null, event_pred, reactor)
  };
  var react_to__3 = function(max_count, event_pred, reactor) {
    var reaction__6454 = cljs.core.ObjMap.fromObject(["\ufdd0'max-count", "\ufdd0'event-pred", "\ufdd0'reactor"], {"\ufdd0'max-count":max_count, "\ufdd0'event-pred":event_pred, "\ufdd0'reactor":reactor});
    cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.dispatch.reactions, cljs.core.assoc, reaction__6454, 0);
    return reaction__6454
  };
  react_to = function(max_count, event_pred, reactor) {
    switch(arguments.length) {
      case 2:
        return react_to__2.call(this, max_count, event_pred);
      case 3:
        return react_to__3.call(this, max_count, event_pred, reactor)
    }
    throw"Invalid arity: " + arguments.length;
  };
  react_to.cljs$lang$arity$2 = react_to__2;
  react_to.cljs$lang$arity$3 = react_to__3;
  return react_to
}();
carneades.policy_analysis.web.dispatch.delete_reaction = function delete_reaction(reaction) {
  return cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.dispatch.reactions, cljs.core.dissoc, reaction)
};
carneades.policy_analysis.web.dispatch.fire = function() {
  var fire = null;
  var fire__1 = function(event_id) {
    return fire.call(null, event_id, null)
  };
  var fire__2 = function(event_id, event_data) {
    var matching_reactions__6491 = cljs.core.filter.call(null, function(p__6483) {
      var vec__6484__6486 = p__6483;
      var map__6485__6487 = cljs.core.nth.call(null, vec__6484__6486, 0, null);
      var map__6485__6488 = cljs.core.seq_QMARK_.call(null, map__6485__6487) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6485__6487) : map__6485__6487;
      var event_pred__6489 = cljs.core._lookup.call(null, map__6485__6488, "\ufdd0'event-pred", null);
      var run_count__6490 = cljs.core.nth.call(null, vec__6484__6486, 1, null);
      return event_pred__6489.call(null, event_id)
    }, cljs.core.deref.call(null, carneades.policy_analysis.web.dispatch.reactions));
    var G__6492__6493 = cljs.core.seq.call(null, matching_reactions__6491);
    while(true) {
      if(G__6492__6493) {
        var vec__6494__6495 = cljs.core.first.call(null, G__6492__6493);
        var reaction__6496 = cljs.core.nth.call(null, vec__6494__6495, 0, null);
        var run_count__6497 = cljs.core.nth.call(null, vec__6494__6495, 1, null);
        var map__6498__6499 = reaction__6496;
        var map__6498__6500 = cljs.core.seq_QMARK_.call(null, map__6498__6499) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6498__6499) : map__6498__6499;
        var reactor__6501 = cljs.core._lookup.call(null, map__6498__6500, "\ufdd0'reactor", null);
        var max_count__6502 = cljs.core._lookup.call(null, map__6498__6500, "\ufdd0'max-count", null);
        var run_count__6503 = run_count__6497 + 1;
        reactor__6501.call(null, event_id, event_data);
        if(cljs.core.truth_(function() {
          var and__3822__auto____6504 = max_count__6502;
          if(cljs.core.truth_(and__3822__auto____6504)) {
            return max_count__6502 <= run_count__6503
          }else {
            return and__3822__auto____6504
          }
        }())) {
          carneades.policy_analysis.web.dispatch.delete_reaction.call(null, reaction__6496)
        }else {
          cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.dispatch.reactions, cljs.core.assoc, reaction__6496, run_count__6503)
        }
        var G__6505 = cljs.core.next.call(null, G__6492__6493);
        G__6492__6493 = G__6505;
        continue
      }else {
        return null
      }
      break
    }
  };
  fire = function(event_id, event_data) {
    switch(arguments.length) {
      case 1:
        return fire__1.call(this, event_id);
      case 2:
        return fire__2.call(this, event_id, event_data)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fire.cljs$lang$arity$1 = fire__1;
  fire.cljs$lang$arity$2 = fire__2;
  return fire
}();
goog.provide("carneades.policy_analysis.web.views.pmt.questions");
goog.require("cljs.core");
goog.require("carneades.policy_analysis.web.i18n");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.dispatch");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("clojure.string");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("carneades.policy_analysis.web.i18n");
goog.require("jayq.core");
goog.require("jayq.util");
carneades.policy_analysis.web.views.pmt.questions.current_fact_value = function current_fact_value(question, fact_number) {
  var col__7221 = cljs.core.nth.call(null, (new cljs.core.Keyword("\ufdd0'values")).call(null, question), fact_number, "\ufdd0'carneades.policy-analysis.web.views.pmt.questions/not-found");
  var v__7222 = cljs.core.coll_QMARK_.call(null, col__7221) ? cljs.core.first.call(null, col__7221) : null;
  return v__7222
};
carneades.policy_analysis.web.views.pmt.questions.get_radio_widget_html = function get_radio_widget_html(question, fact_number) {
  var inputid__7225 = cljs.core.gensym.call(null, cljs.core.format.call(null, "input-q%s-", (new cljs.core.Keyword("\ufdd0'id")).call(null, question)));
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(formalanswer, answer) {
    var checked__7226 = cljs.core._EQ_.call(null, carneades.policy_analysis.web.views.pmt.questions.current_fact_value.call(null, question, fact_number), formalanswer) ? "checked" : "";
    return cljs.core.format.call(null, '<input class="radiobutton inputfield required" name="%s" value="%s" type="radio" %s/>%s', inputid__7225, formalanswer, checked__7226, answer)
  }, (new cljs.core.Keyword("\ufdd0'formalanswers")).call(null, question), (new cljs.core.Keyword("\ufdd0'answers")).call(null, question)))
};
carneades.policy_analysis.web.views.pmt.questions.select_widget = function select_widget(question, fact_number) {
  return[cljs.core.str(cljs.core.format.call(null, '<select type="select" class="combobox required"> ')), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(value, name) {
    var selected__7228 = cljs.core._EQ_.call(null, carneades.policy_analysis.web.views.pmt.questions.current_fact_value.call(null, question, fact_number), value) ? "selected" : "";
    return cljs.core.format.call(null, '<option class="dropdown-menu inputfield" value="%s" %s>%s</option>', value, selected__7228, name)
  }, (new cljs.core.Keyword("\ufdd0'type")).call(null, question), (new cljs.core.Keyword("\ufdd0'typename")).call(null, question)))), cljs.core.str("</select>")].join("")
};
carneades.policy_analysis.web.views.pmt.questions.input_widget = function input_widget(question, fact_number) {
  var value__7232 = function() {
    var or__3824__auto____7231 = carneades.policy_analysis.web.views.pmt.questions.current_fact_value.call(null, question, fact_number);
    if(cljs.core.truth_(or__3824__auto____7231)) {
      return or__3824__auto____7231
    }else {
      return""
    }
  }();
  return cljs.core.format.call(null, '<input class="inputfield required" type="text">%s</input>', value__7232)
};
carneades.policy_analysis.web.views.pmt.questions.radio_widget = function radio_widget(values, names) {
  var inputname__7234 = cljs.core.gensym.call(null, "name");
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(value, name) {
    return cljs.core.format.call(null, '<input class="radiobutton inputfield required" name="%s" value="%s" type="radio"/>%s  ', inputname__7234, value, name)
  }, values, names))
};
carneades.policy_analysis.web.views.pmt.questions.replace_variables_by_widgets = function replace_variables_by_widgets(text, widgets) {
  var wid__7237 = cljs.core.atom.call(null, widgets);
  return clojure.string.replace.call(null, text, /\?\w+/, function() {
    var G__7239__delegate = function(_) {
      var w__7238 = cljs.core.first.call(null, cljs.core.deref.call(null, wid__7237));
      cljs.core.swap_BANG_.call(null, wid__7237, cljs.core.next);
      return w__7238
    };
    var G__7239 = function(var_args) {
      var _ = null;
      if(goog.isDef(var_args)) {
        _ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7239__delegate.call(this, _)
    };
    G__7239.cljs$lang$maxFixedArity = 0;
    G__7239.cljs$lang$applyTo = function(arglist__7240) {
      var _ = cljs.core.seq(arglist__7240);
      return G__7239__delegate(_)
    };
    G__7239.cljs$lang$arity$variadic = G__7239__delegate;
    return G__7239
  }())
};
carneades.policy_analysis.web.views.pmt.questions.functional_QMARK_ = function functional_QMARK_(question) {
  var and__3822__auto____7242 = cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, question), 1);
  if(and__3822__auto____7242) {
    return cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'max")).call(null, question), 1)
  }else {
    return and__3822__auto____7242
  }
};
carneades.policy_analysis.web.views.pmt.questions.build_facts_buttons = function build_facts_buttons(question) {
  if(function() {
    var and__3822__auto____7245 = cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("\ufdd0'max")).call(null, question), 1);
    if(and__3822__auto____7245) {
      var and__3822__auto____7246 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'concept")).call(null, question));
      if(and__3822__auto____7246) {
        return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'grounded")).call(null, question))
      }else {
        return and__3822__auto____7246
      }
    }else {
      return and__3822__auto____7245
    }
  }()) {
    return'&nbsp;&nbsp;<img class="remove-fact fact-button" src="images/list-remove.png"/>\n<img class="add-fact fact-button" src="images/list-add.png"/>'
  }else {
    return""
  }
};
carneades.policy_analysis.web.views.pmt.questions.widget_for_role = function widget_for_role(question, fact_number) {
  if(cljs.core.coll_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question))) {
    return carneades.policy_analysis.web.views.pmt.questions.select_widget.call(null, question, fact_number)
  }else {
    if(function() {
      var or__3824__auto____7248 = cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question), "symbol");
      if(or__3824__auto____7248) {
        return or__3824__auto____7248
      }else {
        return cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question), "string")
      }
    }()) {
      return carneades.policy_analysis.web.views.pmt.questions.input_widget.call(null, question, fact_number)
    }else {
      if("\ufdd0'else") {
        throw"NYI";
      }else {
        return null
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.questions.create_questions_map = function create_questions_map() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'order", "\ufdd0'questions", "\ufdd0'latest-questions", "\ufdd0'deleted"], {"\ufdd0'order":cljs.core.PersistentVector.EMPTY, "\ufdd0'questions":cljs.core.ObjMap.EMPTY, "\ufdd0'latest-questions":cljs.core.PersistentVector.EMPTY, "\ufdd0'deleted":cljs.core.List.EMPTY})
};
carneades.policy_analysis.web.views.pmt.questions.questions = cljs.core.atom.call(null, carneades.policy_analysis.web.views.pmt.questions.create_questions_map.call(null));
carneades.policy_analysis.web.views.pmt.questions.get_question_el = function get_question_el(question) {
  return jayq.core.$.call(null, [cljs.core.str("#q"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, question))].join(""))
};
carneades.policy_analysis.web.views.pmt.questions.add_facts_number_listener = function add_facts_number_listener(question) {
  var el__7255 = carneades.policy_analysis.web.views.pmt.questions.get_question_el.call(null, question);
  var G__7256__7257 = cljs.core.seq.call(null, el__7255.find(".add-fact"));
  while(true) {
    if(G__7256__7257) {
      var add_button__7258 = cljs.core.first.call(null, G__7256__7257);
      var add_button__7259 = jayq.core.$.call(null, add_button__7258);
      add_button__7259.off("click");
      add_button__7259.click(function(G__7256__7257, add_button__7259, add_button__7258) {
        return function(_) {
          return carneades.policy_analysis.web.dispatch.fire.call(null, "\ufdd0'add-fact", cljs.core.ObjMap.fromObject(["\ufdd0'id"], {"\ufdd0'id":(new cljs.core.Keyword("\ufdd0'id")).call(null, question)}))
        }
      }(G__7256__7257, add_button__7259, add_button__7258));
      var G__7261 = cljs.core.next.call(null, G__7256__7257);
      G__7256__7257 = G__7261;
      continue
    }else {
    }
    break
  }
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(remove_button, idx) {
    var remove_button__7260 = jayq.core.$.call(null, remove_button);
    remove_button__7260.off("click");
    return remove_button__7260.click(function(event) {
      return carneades.policy_analysis.web.dispatch.fire.call(null, "\ufdd0'remove-fact", cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'fact-nb", "\ufdd0'event"], {"\ufdd0'id":(new cljs.core.Keyword("\ufdd0'id")).call(null, question), "\ufdd0'fact-nb":idx, "\ufdd0'event":event}))
    })
  }, el__7255.find(".remove-fact"), cljs.core.range.call(null)))
};
carneades.policy_analysis.web.views.pmt.questions.coll_fetcher = function coll_fetcher(question) {
  var el__7264 = carneades.policy_analysis.web.views.pmt.questions.get_question_el.call(null, question);
  var selects__7265 = el__7264.find("select");
  return cljs.core.map.call(null, function(select) {
    return cljs.core.PersistentVector.fromArray([jayq.core.$.call(null, select).val()], true)
  }, selects__7265)
};
carneades.policy_analysis.web.views.pmt.questions.string_fetcher = function string_fetcher(question) {
  var el__7268 = carneades.policy_analysis.web.views.pmt.questions.get_question_el.call(null, question);
  var fields__7269 = el__7268.find(".inputfield");
  return cljs.core.map.call(null, function(field) {
    return cljs.core.PersistentVector.fromArray([jayq.core.$.call(null, field).val()], true)
  }, fields__7269)
};
carneades.policy_analysis.web.views.pmt.questions.create_role_values_fetcher = function create_role_values_fetcher(question) {
  return function() {
    if(cljs.core.coll_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question))) {
      return carneades.policy_analysis.web.views.pmt.questions.coll_fetcher.call(null, question)
    }else {
      if(function() {
        var or__3824__auto____7271 = cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question), "symbol");
        if(or__3824__auto____7271) {
          return or__3824__auto____7271
        }else {
          return cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question), "string")
        }
      }()) {
        return carneades.policy_analysis.web.views.pmt.questions.string_fetcher.call(null, question)
      }else {
        return null
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.questions.add_fetcher = function add_fetcher(questions, id, fetcher) {
  return cljs.core.assoc_in.call(null, questions, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id, "\ufdd0'fetch-values"], true), fetcher)
};
carneades.policy_analysis.web.views.pmt.questions.build_role_question_fact_html = function build_role_question_fact_html(question, idx) {
  var capitalized_text__7275 = clojure.string.capitalize.call(null, (new cljs.core.Keyword("\ufdd0'text")).call(null, question));
  var widget__7276 = carneades.policy_analysis.web.views.pmt.questions.widget_for_role.call(null, question, idx);
  return[cljs.core.str("<div>"), cljs.core.str(carneades.policy_analysis.web.views.pmt.questions.replace_variables_by_widgets.call(null, capitalized_text__7275, cljs.core.PersistentVector.fromArray([widget__7276], true))), cljs.core.str(carneades.policy_analysis.web.views.pmt.questions.build_facts_buttons.call(null, question)), cljs.core.str("</div>")].join("")
};
carneades.policy_analysis.web.views.pmt.questions.build_role_question_facts_html = function build_role_question_facts_html(question) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__7272_SHARP_) {
    return carneades.policy_analysis.web.views.pmt.questions.build_role_question_fact_html.call(null, question, p1__7272_SHARP_)
  }, cljs.core.range.call(null, (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, question))))
};
carneades.policy_analysis.web.views.pmt.questions.create_role_fact_adder = function create_role_fact_adder(question, el) {
  return function() {
    var id__7280 = (new cljs.core.Keyword("\ufdd0'id")).call(null, question);
    var lquestion__7281 = cljs.core.get_in.call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions), cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7280], true));
    var nb_facts__7282 = (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, lquestion__7281);
    jayq.core.append.call(null, el, carneades.policy_analysis.web.views.pmt.questions.build_role_question_fact_html.call(null, question, nb_facts__7282 + 1));
    carneades.policy_analysis.web.views.pmt.questions.add_facts_number_listener.call(null, question);
    return cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7280, "\ufdd0'nb-facts"], true), cljs.core.inc)
  }
};
carneades.policy_analysis.web.views.pmt.questions.fact_uuid = function fact_uuid(question, fact_nb) {
  jayq.util.log.call(null, "question =");
  jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, question));
  var and__3822__auto____7284 = fact_nb < cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'facts-uuid")).call(null, question));
  if(and__3822__auto____7284) {
    return(new cljs.core.Keyword("\ufdd0'facts-uuid")).call(null, question).call(null, fact_nb)
  }else {
    return and__3822__auto____7284
  }
};
carneades.policy_analysis.web.views.pmt.questions.create_fact_remover = function create_fact_remover(question, el) {
  return function(event, idx) {
    var target__7291 = event.target;
    var parent__7292 = jayq.core.$.call(null, target__7291).parent();
    var id__7293 = (new cljs.core.Keyword("\ufdd0'id")).call(null, question);
    var lquestion__7294 = cljs.core.get_in.call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions), cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7293], true));
    parent__7292.remove();
    var temp__3974__auto____7295 = carneades.policy_analysis.web.views.pmt.questions.fact_uuid.call(null, lquestion__7294, idx);
    if(cljs.core.truth_(temp__3974__auto____7295)) {
      var uuid__7296 = temp__3974__auto____7295;
      cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", (new cljs.core.Keyword("\ufdd0'id")).call(null, lquestion__7294), "\ufdd0'facts-uuid", idx], true), null);
      cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'deleted"], true), cljs.core.conj, uuid__7296)
    }else {
    }
    return cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", (new cljs.core.Keyword("\ufdd0'id")).call(null, lquestion__7294), "\ufdd0'nb-facts"], true), cljs.core.dec)
  }
};
carneades.policy_analysis.web.views.pmt.questions.build_role_question_html = function build_role_question_html(question) {
  return[cljs.core.str(cljs.core.format.call(null, '<div id="q%s">', (new cljs.core.Keyword("\ufdd0'id")).call(null, question))), cljs.core.str(carneades.policy_analysis.web.views.pmt.questions.build_role_question_facts_html.call(null, question)), cljs.core.str("</div>")].join("")
};
carneades.policy_analysis.web.views.pmt.questions.build_role_question = function build_role_question(question) {
  if(cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'grounded")).call(null, question))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not", cljs.core.with_meta(cljs.core.list("\ufdd0'grounded", "\ufdd1'question"), cljs.core.hash_map("\ufdd0'line", 243))), cljs.core.hash_map("\ufdd0'line", 243))))].join(""));
  }
  var el__7298 = jayq.core.$.call(null, carneades.policy_analysis.web.views.pmt.questions.build_role_question_html.call(null, question));
  return cljs.core.ObjMap.fromObject(["\ufdd0'el", "\ufdd0'fetcher", "\ufdd0'fact-adder", "\ufdd0'fact-remover"], {"\ufdd0'el":el__7298, "\ufdd0'fetcher":carneades.policy_analysis.web.views.pmt.questions.create_role_values_fetcher.call(null, question), "\ufdd0'fact-adder":carneades.policy_analysis.web.views.pmt.questions.create_role_fact_adder.call(null, question, el__7298), "\ufdd0'fact-remover":carneades.policy_analysis.web.views.pmt.questions.create_fact_remover.call(null, question, el__7298)})
};
carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_fact_html = function build_grounded_question_fact_html(question, idx) {
  var text__7301 = clojure.string.capitalize.call(null, (new cljs.core.Keyword("\ufdd0'text")).call(null, question));
  return[cljs.core.str(cljs.core.format.call(null, "<div>%s", text__7301)), cljs.core.str(carneades.policy_analysis.web.views.pmt.questions.get_radio_widget_html.call(null, question, idx)), cljs.core.str(carneades.policy_analysis.web.views.pmt.questions.build_facts_buttons.call(null, question)), cljs.core.str("</div>")].join("")
};
carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_facts_html = function build_grounded_question_facts_html(question) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__7299_SHARP_) {
    return carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_fact_html.call(null, question, p1__7299_SHARP_)
  }, cljs.core.range.call(null, (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, question))))
};
carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_html = function build_grounded_question_html(question) {
  return[cljs.core.str(cljs.core.format.call(null, '<div id="q%s">', (new cljs.core.Keyword("\ufdd0'id")).call(null, question))), cljs.core.str(carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_facts_html.call(null, question)), cljs.core.str("</div>")].join("")
};
carneades.policy_analysis.web.views.pmt.questions.create_grounded_question_fetcher = function create_grounded_question_fetcher(question) {
  return function() {
    var el__7304 = carneades.policy_analysis.web.views.pmt.questions.get_question_el.call(null, question);
    var inputs__7305 = el__7304.find("input:checked");
    return cljs.core.map.call(null, function(i) {
      return cljs.core.PersistentVector.fromArray([jayq.core.$.call(null, i).val()], true)
    }, inputs__7305)
  }
};
carneades.policy_analysis.web.views.pmt.questions.create_grounded_fact_adder = function create_grounded_fact_adder(question, el) {
  return function() {
    var id__7309 = (new cljs.core.Keyword("\ufdd0'id")).call(null, question);
    var lquestion__7310 = cljs.core.get_in.call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions), cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7309], true));
    var nb_facts__7311 = (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, lquestion__7310);
    jayq.core.append.call(null, el, carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_fact_html.call(null, question, nb_facts__7311 + 1));
    carneades.policy_analysis.web.views.pmt.questions.add_facts_number_listener.call(null, question);
    return cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7309, "\ufdd0'nb-facts"], true), cljs.core.inc)
  }
};
carneades.policy_analysis.web.views.pmt.questions.build_grounded_question = function build_grounded_question(question) {
  var el__7313 = jayq.core.$.call(null, carneades.policy_analysis.web.views.pmt.questions.build_grounded_question_html.call(null, question));
  return cljs.core.ObjMap.fromObject(["\ufdd0'el", "\ufdd0'fetcher", "\ufdd0'fact-adder", "\ufdd0'fact-remover"], {"\ufdd0'el":el__7313, "\ufdd0'fetcher":carneades.policy_analysis.web.views.pmt.questions.create_grounded_question_fetcher.call(null, question), "\ufdd0'fact-adder":carneades.policy_analysis.web.views.pmt.questions.create_grounded_fact_adder.call(null, question, el__7313), "\ufdd0'fact-remover":carneades.policy_analysis.web.views.pmt.questions.create_fact_remover.call(null, question, 
  el__7313)})
};
carneades.policy_analysis.web.views.pmt.questions.build_question = function build_question(question) {
  jayq.util.log.call(null, "Question");
  jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, question));
  if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'grounded")).call(null, question))) {
    return carneades.policy_analysis.web.views.pmt.questions.build_grounded_question.call(null, question)
  }else {
    if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'role")).call(null, question))) {
      return carneades.policy_analysis.web.views.pmt.questions.build_role_question.call(null, question)
    }else {
      return null
    }
  }
};
carneades.policy_analysis.web.views.pmt.questions.add_fact = function add_fact(msg) {
  var id__7318 = (new cljs.core.Keyword("\ufdd0'id")).call(null, msg);
  var question__7319 = cljs.core.get_in.call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions), cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7318], true));
  var nb_facts__7320 = (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, question__7319);
  if(cljs.core.truth_(function() {
    var and__3822__auto____7321 = (new cljs.core.Keyword("\ufdd0'max")).call(null, question__7319);
    if(cljs.core.truth_(and__3822__auto____7321)) {
      return(new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, question__7319) + 1 > (new cljs.core.Keyword("\ufdd0'max")).call(null, question__7319)
    }else {
      return and__3822__auto____7321
    }
  }())) {
    return PM.on_error(carneades.policy_analysis.web.i18n.i18n.call(null, "pmt_maximum_number_of_facts"))
  }else {
    return(new cljs.core.Keyword("\ufdd0'fact-adder")).call(null, question__7319).call(null)
  }
};
carneades.policy_analysis.web.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'add-fact"]), function(_, msg) {
  return carneades.policy_analysis.web.views.pmt.questions.add_fact.call(null, msg)
});
carneades.policy_analysis.web.views.pmt.questions.remove_fact = function remove_fact(msg) {
  var id__7329 = (new cljs.core.Keyword("\ufdd0'id")).call(null, msg);
  var fact_nb__7330 = (new cljs.core.Keyword("\ufdd0'fact-nb")).call(null, msg);
  var question__7331 = cljs.core.get_in.call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions), cljs.core.PersistentVector.fromArray(["\ufdd0'questions", id__7329], true));
  var nb_facts__7332 = (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, question__7331);
  var min__7334 = function() {
    var or__3824__auto____7333 = (new cljs.core.Keyword("\ufdd0'min")).call(null, question__7331);
    if(cljs.core.truth_(or__3824__auto____7333)) {
      return or__3824__auto____7333
    }else {
      return 1
    }
  }();
  if(function() {
    var or__3824__auto____7335 = cljs.core._EQ_.call(null, nb_facts__7332, 1);
    if(or__3824__auto____7335) {
      return or__3824__auto____7335
    }else {
      return nb_facts__7332 <= min__7334
    }
  }()) {
    return PM.on_error(carneades.policy_analysis.web.i18n.i18n.call(null, "pmt_cannot_remove_fact"))
  }else {
    return(new cljs.core.Keyword("\ufdd0'fact-remover")).call(null, question__7331).call(null, (new cljs.core.Keyword("\ufdd0'event")).call(null, msg), (new cljs.core.Keyword("\ufdd0'fact-nb")).call(null, msg))
  }
};
carneades.policy_analysis.web.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'remove-fact"]), function(_, msg) {
  return carneades.policy_analysis.web.views.pmt.questions.remove_fact.call(null, msg)
});
carneades.policy_analysis.web.views.pmt.questions.add_question_html = function add_question_html(question, el, e) {
  jayq.core.append.call(null, el, cljs.core.format.call(null, "<p><i>%s</i></p>", function() {
    var or__3824__auto____7337 = (new cljs.core.Keyword("\ufdd0'hint")).call(null, question);
    if(cljs.core.truth_(or__3824__auto____7337)) {
      return or__3824__auto____7337
    }else {
      return""
    }
  }()));
  jayq.core.append.call(null, el, e);
  return jayq.core.append.call(null, el, "<br/>")
};
carneades.policy_analysis.web.views.pmt.questions.add_question = function add_question(question, htmlel) {
  var map__7345__7346 = carneades.policy_analysis.web.views.pmt.questions.build_question.call(null, question);
  var map__7345__7347 = cljs.core.seq_QMARK_.call(null, map__7345__7346) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7345__7346) : map__7345__7346;
  var fetcher__7348 = cljs.core._lookup.call(null, map__7345__7347, "\ufdd0'fetcher", null);
  var fact_remover__7349 = cljs.core._lookup.call(null, map__7345__7347, "\ufdd0'fact-remover", null);
  var fact_adder__7350 = cljs.core._lookup.call(null, map__7345__7347, "\ufdd0'fact-adder", null);
  var el__7351 = cljs.core._lookup.call(null, map__7345__7347, "\ufdd0'el", null);
  carneades.policy_analysis.web.views.pmt.questions.add_question_html.call(null, question, htmlel, el__7351);
  carneades.policy_analysis.web.views.pmt.questions.add_facts_number_listener.call(null, question);
  cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, carneades.policy_analysis.web.views.pmt.questions.add_fetcher, (new cljs.core.Keyword("\ufdd0'id")).call(null, question), fetcher__7348);
  cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", (new cljs.core.Keyword("\ufdd0'id")).call(null, question), "\ufdd0'fact-adder"], true), fact_adder__7350);
  return cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", (new cljs.core.Keyword("\ufdd0'id")).call(null, question), "\ufdd0'fact-remover"], true), fact_remover__7349)
};
carneades.policy_analysis.web.views.pmt.questions.add_questions = function add_questions(questions, el) {
  var G__7355__7356 = cljs.core.seq.call(null, questions);
  while(true) {
    if(G__7355__7356) {
      var question__7357 = cljs.core.first.call(null, G__7355__7356);
      carneades.policy_analysis.web.views.pmt.questions.add_question.call(null, question__7357, el);
      var G__7358 = cljs.core.next.call(null, G__7355__7356);
      G__7355__7356 = G__7358;
      continue
    }else {
      return null
    }
    break
  }
};
carneades.policy_analysis.web.views.pmt.questions.add_submit_button = function add_submit_button(questions_el) {
  var button_id__7360 = [cljs.core.str(cljs.core.gensym.call(null, "button"))].join("");
  jayq.core.append.call(null, questions_el, cljs.core.format.call(null, '<input type="button" value="%s" id="%s"/> ', carneades.policy_analysis.web.i18n.i18n.call(null, "pmt_submit"), button_id__7360));
  jayq.core.append.call(null, questions_el, "<hr/>");
  return jayq.core.$.call(null, [cljs.core.str("#"), cljs.core.str(button_id__7360)].join("")).click(function(_) {
    return carneades.policy_analysis.web.dispatch.fire.call(null, "\ufdd0'on-submit", cljs.core.ObjMap.EMPTY)
  })
};
carneades.policy_analysis.web.views.pmt.questions.display_questions_in_category = function display_questions_in_category(questions, el) {
  var category_name__7362 = (new cljs.core.Keyword("\ufdd0'category_name")).call(null, cljs.core.first.call(null, questions));
  jayq.core.append.call(null, el, cljs.core.format.call(null, "<h3>%s</h3>", category_name__7362));
  return carneades.policy_analysis.web.views.pmt.questions.add_questions.call(null, questions, el)
};
carneades.policy_analysis.web.views.pmt.questions.display_questions = function display_questions(_, msg) {
  jayq.util.log.call(null, "Display question");
  var el__7369 = jayq.core.$.call(null, "#questions");
  var questions_to_ids__7370 = (new cljs.core.Keyword("\ufdd0'questions")).call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions));
  var ids__7371 = (new cljs.core.Keyword("\ufdd0'order")).call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions));
  jayq.core.empty.call(null, el__7369);
  var G__7372__7373 = cljs.core.seq.call(null, ids__7371);
  while(true) {
    if(G__7372__7373) {
      var ids_for_category__7374 = cljs.core.first.call(null, G__7372__7373);
      carneades.policy_analysis.web.views.pmt.questions.display_questions_in_category.call(null, cljs.core.map.call(null, questions_to_ids__7370, ids_for_category__7374), el__7369);
      var G__7375 = cljs.core.next.call(null, G__7372__7373);
      G__7372__7373 = G__7375;
      continue
    }else {
    }
    break
  }
  carneades.policy_analysis.web.views.pmt.questions.add_submit_button.call(null, el__7369);
  return PM.scroll_to_bottom()
};
carneades.policy_analysis.web.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'questions-added"]), carneades.policy_analysis.web.views.pmt.questions.display_questions);
carneades.policy_analysis.web.views.pmt.questions.calc_nb_facts = function calc_nb_facts(question) {
  var or__3824__auto____7378 = (new cljs.core.Keyword("\ufdd0'nb-facts")).call(null, question);
  if(cljs.core.truth_(or__3824__auto____7378)) {
    return or__3824__auto____7378
  }else {
    if(function() {
      var or__3824__auto____7379 = (new cljs.core.Keyword("\ufdd0'min")).call(null, question) == null;
      if(or__3824__auto____7379) {
        return or__3824__auto____7379
      }else {
        return(new cljs.core.Keyword("\ufdd0'min")).call(null, question) === 0
      }
    }()) {
      return 1
    }else {
      return(new cljs.core.Keyword("\ufdd0'min")).call(null, question)
    }
  }
};
carneades.policy_analysis.web.views.pmt.questions.questions_list__GT_map = function questions_list__GT_map(questions_list) {
  return cljs.core.reduce.call(null, function(m, question) {
    var nb_facts__7383 = carneades.policy_analysis.web.views.pmt.questions.calc_nb_facts.call(null, question);
    var question__7384 = cljs.core.assoc.call(null, question, "\ufdd0'nb-facts", nb_facts__7383);
    return cljs.core.assoc.call(null, m, (new cljs.core.Keyword("\ufdd0'id")).call(null, question__7384), question__7384)
  }, cljs.core.ObjMap.EMPTY, questions_list)
};
carneades.policy_analysis.web.views.pmt.questions.questions_ordered = function questions_ordered(questions_list) {
  if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, questions_list))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'map?", cljs.core.with_meta(cljs.core.list("\ufdd1'first", "\ufdd1'questions-list"), cljs.core.hash_map("\ufdd0'line", 422))), cljs.core.hash_map("\ufdd0'line", 422))))].join(""));
  }
  return cljs.core.map.call(null, function(p1__7380_SHARP_) {
    return cljs.core.map.call(null, "\ufdd0'id", p1__7380_SHARP_)
  }, cljs.core.vals.call(null, cljs.core.group_by.call(null, "\ufdd0'category", questions_list)))
};
carneades.policy_analysis.web.views.pmt.questions.index_questions = function index_questions(questions, latest_questions_list) {
  return cljs.core.update_in.call(null, cljs.core.assoc.call(null, cljs.core.update_in.call(null, questions, cljs.core.PersistentVector.fromArray(["\ufdd0'questions"], true), cljs.core.merge, carneades.policy_analysis.web.views.pmt.questions.questions_list__GT_map.call(null, latest_questions_list)), "\ufdd0'latest-questions", cljs.core.map.call(null, "\ufdd0'id", latest_questions_list)), cljs.core.PersistentVector.fromArray(["\ufdd0'order"], true), cljs.core.concat, carneades.policy_analysis.web.views.pmt.questions.questions_ordered.call(null, 
  latest_questions_list))
};
carneades.policy_analysis.web.views.pmt.questions.fetch_values = function fetch_values(qid) {
  var values__7386 = cljs.core.get_in.call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions), cljs.core.PersistentVector.fromArray(["\ufdd0'questions", qid, "\ufdd0'fetch-values"], true)).call(null);
  cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray(["\ufdd0'questions", qid, "\ufdd0'values"], true), values__7386);
  return values__7386
};
carneades.policy_analysis.web.views.pmt.questions.fetch_latest_questions_answers = function fetch_latest_questions_answers() {
  var latest__7389 = (new cljs.core.Keyword("\ufdd0'latest-questions")).call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions));
  var answers__7390 = cljs.core.map.call(null, carneades.policy_analysis.web.views.pmt.questions.fetch_values, latest__7389);
  return cljs.core.map.call(null, function(id, ans) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'values"], {"\ufdd0'id":id, "\ufdd0'values":ans})
  }, latest__7389, answers__7390)
};
carneades.policy_analysis.web.views.pmt.questions.send_answers = function send_answers(msg) {
  if(cljs.core.truth_(jayq.core.$.call(null, "#questionsform").valid())) {
    var answers__7392 = carneades.policy_analysis.web.views.pmt.questions.fetch_latest_questions_answers.call(null);
    jayq.util.log.call(null, "sending answers...");
    jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, answers__7392));
    PM.busy_cursor_on();
    return PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'answers"], {"\ufdd0'answers":answers__7392})), function(data) {
      PM.busy_cursor_off();
      return carneades.policy_analysis.web.views.pmt.questions.show_questions_or_ag.call(null, data)
    }, IMPACT.user, IMPACT.password, PM.on_error)
  }else {
    return null
  }
};
carneades.policy_analysis.web.dispatch.react_to.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'on-submit"]), function(msg) {
  return(new cljs.core.Keyword("\ufdd0'submit-listener")).call(null, cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions)).call(null, msg)
});
carneades.policy_analysis.web.views.pmt.questions.send_answers_for_modification = function send_answers_for_modification() {
  if(cljs.core.truth_(jayq.core.$.call(null, "#questionsform").valid())) {
    var answers__7399 = carneades.policy_analysis.web.views.pmt.questions.fetch_latest_questions_answers.call(null);
    jayq.util.log.call(null, "sending answers for modification...");
    jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, answers__7399));
    PM.busy_cursor_on();
    var map__7400__7401 = cljs.core.deref.call(null, carneades.policy_analysis.web.views.pmt.questions.questions);
    var map__7400__7402 = cljs.core.seq_QMARK_.call(null, map__7400__7401) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7400__7401) : map__7400__7401;
    var deleted__7403 = cljs.core._lookup.call(null, map__7400__7402, "\ufdd0'deleted", null);
    var questions__7404 = cljs.core._lookup.call(null, map__7400__7402, "\ufdd0'questions", null);
    return PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'modify-facts"], {"\ufdd0'modify-facts":cljs.core.ObjMap.fromObject(["\ufdd0'facts", "\ufdd0'deleted", "\ufdd0'db"], {"\ufdd0'facts":cljs.core.vals.call(null, questions__7404), "\ufdd0'deleted":deleted__7403, "\ufdd0'db":IMPACT.db})})), function(data) {
      PM.busy_cursor_off();
      return carneades.policy_analysis.web.views.pmt.questions.show_ag.call(null, data.db)
    }, IMPACT.user, IMPACT.password, PM.on_error)
  }else {
    return null
  }
};
carneades.policy_analysis.web.views.pmt.questions.show_questions = function show_questions(latest_questions_list) {
  var latest__7406 = cljs.core.js__GT_clj.call(null, latest_questions_list, "\ufdd0'keywordize-keys", true);
  cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, carneades.policy_analysis.web.views.pmt.questions.index_questions, latest__7406);
  return carneades.policy_analysis.web.dispatch.fire.call(null, "\ufdd0'questions-added", cljs.core.ObjMap.fromObject(["\ufdd0'latest-questions"], {"\ufdd0'latest-questions":latest__7406}))
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.questions.show_questions", carneades.policy_analysis.web.views.pmt.questions.show_questions);
carneades.policy_analysis.web.views.pmt.questions.show_ag = function show_ag(db) {
  IMPACT.db = db;
  cljs.core.reset_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, carneades.policy_analysis.web.views.pmt.questions.create_questions_map.call(null));
  return PM.set_arguments_url(db)
};
carneades.policy_analysis.web.views.pmt.questions.show_facts = function show_facts(questions_list) {
  cljs.core.reset_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.assoc.call(null, carneades.policy_analysis.web.views.pmt.questions.create_questions_map.call(null), "\ufdd0'submit-listener", carneades.policy_analysis.web.views.pmt.questions.send_answers_for_modification));
  return carneades.policy_analysis.web.views.pmt.questions.show_questions.call(null, questions_list)
};
carneades.policy_analysis.web.views.pmt.questions.show_questions_or_ag = function show_questions_or_ag(data) {
  var temp__3971__auto____7409 = data.questions;
  if(cljs.core.truth_(temp__3971__auto____7409)) {
    var questions_list__7410 = temp__3971__auto____7409;
    return carneades.policy_analysis.web.views.pmt.questions.show_questions.call(null, questions_list__7410)
  }else {
    return carneades.policy_analysis.web.views.pmt.questions.show_ag.call(null, data.db)
  }
};
carneades.policy_analysis.web.views.pmt.questions.init_show_questions = function init_show_questions() {
  cljs.core.swap_BANG_.call(null, carneades.policy_analysis.web.views.pmt.questions.questions, cljs.core.assoc, "\ufdd0'submit-listener", carneades.policy_analysis.web.views.pmt.questions.send_answers);
  return PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'request"], {"\ufdd0'request":IMPACT.question})), carneades.policy_analysis.web.views.pmt.questions.show_questions_or_ag, IMPACT.user, IMPACT.password, PM.on_error)
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.questions.init_show_questions", carneades.policy_analysis.web.views.pmt.questions.init_show_questions);
goog.provide("carneades.policy_analysis.web.views.sct.comparison");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("carneades.policy_analysis.web.views.core");
carneades.policy_analysis.web.views.sct.comparison.build_metadata = function build_metadata(sources, metadata) {
  return cljs.core.reduce.call(null, function(m, p__7073) {
    var vec__7074__7075 = p__7073;
    var k__7076 = cljs.core.nth.call(null, vec__7074__7075, 0, null);
    var v__7077 = cljs.core.nth.call(null, vec__7074__7075, 1, null);
    jayq.util.log.call(null, "v =");
    jayq.util.log.call(null, v__7077);
    var md__7078 = cljs.core.map.call(null, cljs.core.partial.call(null, carneades.policy_analysis.web.models.core.get_metadata, metadata), v__7077);
    var ___7079 = jayq.util.log.call(null, "md");
    var ___7080 = jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, md__7078));
    var md_data__7081 = cljs.core.map.call(null, function(m) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'metadata_text"], {"\ufdd0'metadata_text":AGB.format_linear_metadata(m)})
    }, md__7078);
    return cljs.core.assoc.call(null, m, k__7076, md_data__7081)
  }, cljs.core.ObjMap.EMPTY, sources)
};
carneades.policy_analysis.web.views.sct.comparison.add_has_metadata = function add_has_metadata(metadata) {
  return cljs.core.merge.call(null, metadata, cljs.core.ObjMap.fromObject(["\ufdd0'has-very-little", "\ufdd0'has-little", "\ufdd0'has-some", "\ufdd0'has-much", "\ufdd0'has-very-much"], {"\ufdd0'has-very-little":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'very-little"), "\ufdd0'has-little":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'little"), "\ufdd0'has-some":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'some"), "\ufdd0'has-much":cljs.core.contains_QMARK_.call(null, 
  metadata, "\ufdd0'much"), "\ufdd0'has-very-much":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'very-much")}))
};
carneades.policy_analysis.web.views.sct.comparison.Comparison = Backbone.View.extend({"render":function() {
  var this__7082 = this;
  var model__7083 = this__7082["model"];
  var statement_poll__7084 = model__7083.get("statement-poll");
  var statements__7085 = model__7083.get("statements");
  var arguments__7086 = model__7083.get("arguments");
  var issue__7087 = model__7083.get("issue");
  var metadata__7088 = model__7083.get("metadata");
  var votes__7089 = carneades.policy_analysis.web.backbone.core.get_in.call(null, statement_poll__7084, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var accepted_statements__7095 = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__7090) {
    var vec__7091__7092 = p__7090;
    var id__7093 = cljs.core.nth.call(null, vec__7091__7092, 0, null);
    var score__7094 = cljs.core.nth.call(null, vec__7091__7092, 1, null);
    return carneades.policy_analysis.web.views.core.score_agreed_QMARK_.call(null, score__7094)
  }, votes__7089)));
  var arguments_in_issue__7096 = carneades.policy_analysis.web.models.core.arguments_for_statement.call(null, issue__7087, arguments__7086);
  var statements__7097 = carneades.policy_analysis.web.models.core.statements_by_sources.call(null, cljs.core.map.call(null, carneades.policy_analysis.web.views.core.json, arguments_in_issue__7096));
  var sources__7098 = carneades.policy_analysis.web.models.core.sources_by_similarity.call(null, statements__7097, accepted_statements__7095);
  var variables__7099 = carneades.policy_analysis.web.views.sct.comparison.build_metadata.call(null, sources__7098, metadata__7088);
  var variables__7100 = carneades.policy_analysis.web.views.sct.comparison.add_has_metadata.call(null, variables__7099);
  jayq.util.log.call(null, "sources by similarity");
  jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, sources__7098));
  carneades.policy_analysis.web.views.core.template.call(null, this__7082, "\ufdd0'sct-comparison", variables__7100);
  return this__7082
}, "className":"sct-comparison"});
goog.provide("carneades.policy_analysis.web.views.sct.summary");
goog.require("cljs.core");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.views.sct.claim_editor");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.models.core");
goog.require("carneades.policy_analysis.web.views.core");
carneades.policy_analysis.web.views.sct.summary.assign_claim_ids = function assign_claim_ids(this$, claims) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(claim, p) {
    return jayq.core.$.call(null, p).data("id", claim.id)
  }, claims, this$.$(".change-score")))
};
carneades.policy_analysis.web.views.sct.summary.Summary = Backbone.View.extend({"render":function() {
  var this__7144 = this;
  var model__7145 = this__7144["model"];
  var statements__7146 = model__7145.get("statements");
  var votes__7147 = carneades.policy_analysis.web.backbone.core.get_in.call(null, model__7145, cljs.core.PersistentVector.fromArray(["\ufdd0'statement-poll", "\ufdd0'votes"], true));
  var votes__7148 = cljs.core.js__GT_clj.call(null, votes__7147);
  var claims_ids__7149 = cljs.core.keys.call(null, votes__7148);
  var claims__7150 = cljs.core.map.call(null, cljs.core.comp.call(null, carneades.policy_analysis.web.views.core.json, cljs.core.partial.call(null, carneades.policy_analysis.web.models.core.get_stmt, statements__7146)), claims_ids__7149);
  var claims__7151 = cljs.core.map.call(null, cljs.core.partial.call(null, carneades.policy_analysis.web.views.core.prepare_claim, votes__7148), claims__7150);
  carneades.policy_analysis.web.views.core.template.call(null, this__7144, "\ufdd0'sct-summary", cljs.core.ObjMap.fromObject(["\ufdd0'claims"], {"\ufdd0'claims":claims__7151}));
  carneades.policy_analysis.web.views.sct.summary.assign_claim_ids.call(null, this__7144, claims__7151);
  return this__7144
}, "jump_to_comparison":function() {
  var this__7152 = this;
  PM.set_sct_comparison_url();
  return this__7152
}, "edit_claim":function(event) {
  var this__7153 = this;
  var model__7154 = this__7153["model"];
  var statements__7155 = model__7154.get("statements");
  var arguments__7156 = model__7154.get("arguments");
  var statement_poll__7157 = model__7154.get("statement-poll");
  var argument_poll__7158 = model__7154.get("argument-poll");
  var target__7159 = event.target;
  var parent__7160 = jayq.core.$.call(null, target__7159).parents("li");
  var id__7161 = jayq.core.$.call(null, target__7159).data("id");
  var claim__7162 = carneades.policy_analysis.web.models.core.get_stmt.call(null, statements__7155, id__7161);
  var claim_editor__7163 = carneades.policy_analysis.web.backbone.core.new$.call(null, carneades.policy_analysis.web.views.sct.claim_editor.ClaimEditor, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":carneades.policy_analysis.web.backbone.core.new_model.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'claim", "\ufdd0'parent", "\ufdd0'arguments", "\ufdd0'argument-poll", "\ufdd0'statement-poll"], {"\ufdd0'claim":claim__7162, "\ufdd0'parent":this__7153, "\ufdd0'arguments":arguments__7156, 
  "\ufdd0'argument-poll":argument_poll__7158, "\ufdd0'statement-poll":statement_poll__7157}))}));
  jayq.core.inner.call(null, parent__7160, claim_editor__7163.$el);
  carneades.policy_analysis.web.backbone.core.render.call(null, claim_editor__7163);
  return this__7153
}, "className":"sct-summary", "events":{"click .compare":"jump_to_comparison", "click .change-score":"edit_claim"}});
goog.provide("carneades.policy_analysis.web.views.pmt.submitted_facts");
goog.require("cljs.core");
goog.require("carneades.policy_analysis.web.views.pmt.questions");
goog.require("jayq.util");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("cljs.reader");
goog.require("jayq.core");
goog.require("carneades.policy_analysis.web.template");
goog.require("carneades.policy_analysis.web.backbone.core");
goog.require("carneades.policy_analysis.web.views.pmt.questions");
goog.require("cljs.reader");
goog.require("carneades.policy_analysis.web.views.core");
goog.require("jayq.core");
goog.require("jayq.util");
carneades.policy_analysis.web.views.pmt.submitted_facts.show_facts_for_modification = function show_facts_for_modification(questions) {
  jayq.core.inner.call(null, jayq.core.$.call(null, "#pm"), carneades.policy_analysis.web.template.get.call(null, "submitted_facts", cljs.core.ObjMap.EMPTY));
  return carneades.policy_analysis.web.views.pmt.questions.show_facts.call(null, questions)
};
carneades.policy_analysis.web.views.pmt.submitted_facts.display_facts = function display_facts() {
  PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'modifiable-facts"], {"\ufdd0'modifiable-facts":cljs.core.ObjMap.fromObject(["\ufdd0'theory", "\ufdd0'db"], {"\ufdd0'theory":IMPACT.current_policy, "\ufdd0'db":IMPACT.db})})), carneades.policy_analysis.web.views.pmt.submitted_facts.show_facts_for_modification, IMPACT.user, IMPACT.password, PM.on_error);
  return false
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.submitted_facts.display_facts", carneades.policy_analysis.web.views.pmt.submitted_facts.display_facts);
goog.provide("carneades.policy_analysis.web.playground");
goog.require("cljs.core");
goog.require("carneades.policy_analysis.web.template");
goog.require("carneades.policy_analysis.web.icanhaz.core");
goog.require("carneades.policy_analysis.web.backbone.core");
carneades.policy_analysis.web.playground.$ = $;
carneades.policy_analysis.web.playground.SctSummary = Backbone.View.extend({"render":function() {
  var this__6451 = this;
  carneades.policy_analysis.web.backbone.core.html.call(null, this__6451, "<div>MY VIEW FROM CLOJURE</view>");
  return this__6451
}, "do_stuff":function() {
  var this__6452 = this;
  console.log(carneades.policy_analysis.web.backbone.core.get_html.call(null, this__6452));
  alert("hello");
  return this__6452
}, "className":"sct-summary", "events":{"click":"do_stuff"}});
carneades.policy_analysis.web.playground.test_icanhaz = function test_icanhaz() {
  return carneades.policy_analysis.web.template.get.call(null, "\ufdd0'sct_summary", cljs.core.ObjMap.fromObject(["\ufdd0'sct_summary_text"], {"\ufdd0'sct_summary_text":"Helloz"}))
};
goog.provide("carneades.policy_analysis.web.views.pmt.theory");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("clojure.string");
goog.require("jayq.util");
carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_ = function sliteral_QMARK_(sexp) {
  var or__3824__auto____7449 = cljs.core.symbol_QMARK_.call(null, sexp);
  if(or__3824__auto____7449) {
    return or__3824__auto____7449
  }else {
    var and__3822__auto____7450 = cljs.core.seq_QMARK_.call(null, sexp);
    if(and__3822__auto____7450) {
      var and__3822__auto____7451 = !cljs.core.empty_QMARK_.call(null, sexp);
      if(and__3822__auto____7451) {
        return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, sexp))
      }else {
        return and__3822__auto____7451
      }
    }else {
      return and__3822__auto____7450
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.sliteral_pos_QMARK_ = function sliteral_pos_QMARK_(literal) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'sliteral?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 20))))].join(""));
  }
  var or__3824__auto____7454 = !cljs.core.seq_QMARK_.call(null, literal);
  if(or__3824__auto____7454) {
    return or__3824__auto____7454
  }else {
    var and__3822__auto____7455 = !cljs.core.empty_QMARK_.call(null, literal);
    if(and__3822__auto____7455) {
      return cljs.core.not_EQ_.call(null, cljs.core.first.call(null, literal), "\ufdd1'not")
    }else {
      return and__3822__auto____7455
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.sliteral_atom = function sliteral_atom(literal) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'sliteral?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 27))))].join(""));
  }
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_pos_QMARK_.call(null, literal))) {
    return literal
  }else {
    return cljs.core.second.call(null, literal)
  }
};
carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_ = function statement_QMARK_(x) {
  return false
};
carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_ = function literal_QMARK_(x) {
  var or__3824__auto____7457 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, x);
  if(cljs.core.truth_(or__3824__auto____7457)) {
    return or__3824__auto____7457
  }else {
    return carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, x)
  }
};
carneades.policy_analysis.web.views.pmt.theory.variable_QMARK_ = function variable_QMARK_(x) {
  var and__3822__auto____7461 = cljs.core.symbol_QMARK_.call(null, x);
  if(and__3822__auto____7461) {
    var s__7462 = [cljs.core.str(x)].join("");
    var and__3822__auto____7463 = cljs.core.count.call(null, s__7462) > 0;
    if(and__3822__auto____7463) {
      return cljs.core._EQ_.call(null, s__7462[0], "?")
    }else {
      return and__3822__auto____7463
    }
  }else {
    return and__3822__auto____7461
  }
};
carneades.policy_analysis.web.views.pmt.theory.constant_QMARK_ = function constant_QMARK_(x) {
  var or__3824__auto____7469 = function() {
    var and__3822__auto____7468 = cljs.core.symbol_QMARK_.call(null, x);
    if(and__3822__auto____7468) {
      return cljs.core.not.call(null, carneades.policy_analysis.web.views.pmt.theory.variable_QMARK_.call(null, x))
    }else {
      return and__3822__auto____7468
    }
  }();
  if(cljs.core.truth_(or__3824__auto____7469)) {
    return or__3824__auto____7469
  }else {
    var or__3824__auto____7470 = cljs.core.number_QMARK_.call(null, x);
    if(or__3824__auto____7470) {
      return or__3824__auto____7470
    }else {
      var or__3824__auto____7471 = cljs.core.string_QMARK_.call(null, x);
      if(or__3824__auto____7471) {
        return or__3824__auto____7471
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_ = function compound_term_QMARK_(term) {
  var or__3824__auto____7480 = function() {
    var and__3822__auto____7477 = cljs.core.seq_QMARK_.call(null, term);
    if(and__3822__auto____7477) {
      var and__3822__auto____7478 = !cljs.core.empty_QMARK_.call(null, term);
      if(and__3822__auto____7478) {
        var and__3822__auto____7479 = cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, term));
        if(and__3822__auto____7479) {
          return cljs.core.not.call(null, carneades.policy_analysis.web.views.pmt.theory.variable_QMARK_.call(null, cljs.core.first.call(null, term)))
        }else {
          return and__3822__auto____7479
        }
      }else {
        return and__3822__auto____7478
      }
    }else {
      return and__3822__auto____7477
    }
  }();
  if(cljs.core.truth_(or__3824__auto____7480)) {
    return or__3824__auto____7480
  }else {
    var and__3822__auto____7481 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, term);
    if(cljs.core.truth_(and__3822__auto____7481)) {
      return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
    }else {
      return and__3822__auto____7481
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.termseq_QMARK_ = function termseq_QMARK_(term) {
  var or__3824__auto____7486 = cljs.core.vector_QMARK_.call(null, term);
  if(or__3824__auto____7486) {
    return or__3824__auto____7486
  }else {
    var or__3824__auto____7488 = function() {
      var and__3822__auto____7487 = cljs.core.seq_QMARK_.call(null, term);
      if(and__3822__auto____7487) {
        return cljs.core.not.call(null, carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, term))
      }else {
        return and__3822__auto____7487
      }
    }();
    if(cljs.core.truth_(or__3824__auto____7488)) {
      return or__3824__auto____7488
    }else {
      var and__3822__auto____7489 = cljs.core.map_QMARK_.call(null, term);
      if(and__3822__auto____7489) {
        return cljs.core.not.call(null, carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, term))
      }else {
        return and__3822__auto____7489
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.term_QMARK_ = function term_QMARK_(x) {
  var or__3824__auto____7494 = carneades.policy_analysis.web.views.pmt.theory.variable_QMARK_.call(null, x);
  if(cljs.core.truth_(or__3824__auto____7494)) {
    return or__3824__auto____7494
  }else {
    var or__3824__auto____7495 = carneades.policy_analysis.web.views.pmt.theory.constant_QMARK_.call(null, x);
    if(cljs.core.truth_(or__3824__auto____7495)) {
      return or__3824__auto____7495
    }else {
      var or__3824__auto____7496 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, x);
      if(cljs.core.truth_(or__3824__auto____7496)) {
        return or__3824__auto____7496
      }else {
        var or__3824__auto____7497 = carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, x);
        if(cljs.core.truth_(or__3824__auto____7497)) {
          return or__3824__auto____7497
        }else {
          return carneades.policy_analysis.web.views.pmt.theory.termseq_QMARK_.call(null, x)
        }
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.term_functor = function term_functor(term) {
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7504 = cljs.core.seq_QMARK_.call(null, term);
      if(and__3822__auto____7504) {
        var and__3822__auto____7505 = carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, term);
        if(cljs.core.truth_(and__3822__auto____7505)) {
          return!cljs.core.empty_QMARK_.call(null, term)
        }else {
          return and__3822__auto____7505
        }
      }else {
        return and__3822__auto____7504
      }
    }())) {
      return cljs.core.first.call(null, term)
    }else {
      if(cljs.core.truth_(function() {
        var and__3822__auto____7506 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, term);
        if(cljs.core.truth_(and__3822__auto____7506)) {
          var and__3822__auto____7507 = (new cljs.core.Keyword("\ufdd0'positive")).call(null, term);
          if(cljs.core.truth_(and__3822__auto____7507)) {
            return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
          }else {
            return and__3822__auto____7507
          }
        }else {
          return and__3822__auto____7506
        }
      }())) {
        var G__7510 = (new cljs.core.Keyword("\ufdd0'atom")).call(null, term);
        term = G__7510;
        continue
      }else {
        if(cljs.core.truth_(function() {
          var and__3822__auto____7508 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, term);
          if(cljs.core.truth_(and__3822__auto____7508)) {
            var and__3822__auto____7509 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'positive")).call(null, term));
            if(and__3822__auto____7509) {
              return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
            }else {
              return and__3822__auto____7509
            }
          }else {
            return and__3822__auto____7508
          }
        }())) {
          return"\ufdd1'not"
        }else {
          if("\ufdd0'else") {
            return null
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
carneades.policy_analysis.web.views.pmt.theory.term_args = function term_args(term) {
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7516 = cljs.core.seq_QMARK_.call(null, term);
      if(and__3822__auto____7516) {
        return carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, term)
      }else {
        return and__3822__auto____7516
      }
    }())) {
      return cljs.core.rest.call(null, term)
    }else {
      if(cljs.core.seq_QMARK_.call(null, term)) {
        return cljs.core.seq.call(null, term)
      }else {
        if(cljs.core.vector_QMARK_.call(null, term)) {
          return cljs.core.seq.call(null, term)
        }else {
          if(cljs.core.truth_(function() {
            var and__3822__auto____7517 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, term);
            if(cljs.core.truth_(and__3822__auto____7517)) {
              var and__3822__auto____7518 = (new cljs.core.Keyword("\ufdd0'positive")).call(null, term);
              if(cljs.core.truth_(and__3822__auto____7518)) {
                return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
              }else {
                return and__3822__auto____7518
              }
            }else {
              return and__3822__auto____7517
            }
          }())) {
            var G__7521 = (new cljs.core.Keyword("\ufdd0'atom")).call(null, term);
            term = G__7521;
            continue
          }else {
            if(cljs.core.truth_(function() {
              var and__3822__auto____7519 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, term);
              if(cljs.core.truth_(and__3822__auto____7519)) {
                var and__3822__auto____7520 = cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term));
                if(and__3822__auto____7520) {
                  return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'positive")).call(null, term))
                }else {
                  return and__3822__auto____7520
                }
              }else {
                return and__3822__auto____7519
              }
            }())) {
              return(new cljs.core.Keyword("\ufdd0'atom")).call(null, term)
            }else {
              if(cljs.core.map_QMARK_.call(null, term)) {
                return cljs.core.seq.call(null, term)
              }else {
                if("\ufdd0'else") {
                  return cljs.core.List.EMPTY
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
    break
  }
};
carneades.policy_analysis.web.views.pmt.theory.term_arity = function term_arity(term) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, term))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'compound-term?", "\ufdd1'term"), cljs.core.hash_map("\ufdd0'line", 122))))].join(""));
  }
  return cljs.core.count.call(null, term) - 1
};
carneades.policy_analysis.web.views.pmt.theory.atom_QMARK_ = function atom_QMARK_(sexp) {
  var or__3824__auto____7525 = cljs.core.symbol_QMARK_.call(null, sexp);
  if(or__3824__auto____7525) {
    return or__3824__auto____7525
  }else {
    var and__3822__auto____7526 = cljs.core.seq_QMARK_.call(null, sexp);
    if(and__3822__auto____7526) {
      var and__3822__auto____7527 = !cljs.core.empty_QMARK_.call(null, sexp);
      if(and__3822__auto____7527) {
        return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, sexp))
      }else {
        return and__3822__auto____7527
      }
    }else {
      return and__3822__auto____7526
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.literal_pos_QMARK_ = function literal_pos_QMARK_(literal) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 139))))].join(""));
  }
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
    var or__3824__auto____7530 = !cljs.core.seq_QMARK_.call(null, literal);
    if(or__3824__auto____7530) {
      return or__3824__auto____7530
    }else {
      var and__3822__auto____7531 = !cljs.core.empty_QMARK_.call(null, literal);
      if(and__3822__auto____7531) {
        return cljs.core.not_EQ_.call(null, cljs.core.first.call(null, literal), "\ufdd1'not")
      }else {
        return and__3822__auto____7531
      }
    }
  }else {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, literal))) {
      return(new cljs.core.Keyword("\ufdd0'positive")).call(null, literal)
    }else {
      return null
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.literal_neg_QMARK_ = function literal_neg_QMARK_(literal) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 147))))].join(""));
  }
  return cljs.core.not.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_pos_QMARK_.call(null, literal))
};
carneades.policy_analysis.web.views.pmt.theory.literal_atom = function literal_atom(literal) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 154))))].join(""));
  }
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_pos_QMARK_.call(null, literal))) {
      return literal
    }else {
      return cljs.core.second.call(null, literal)
    }
  }else {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, literal))) {
      var or__3824__auto____7533 = (new cljs.core.Keyword("\ufdd0'atom")).call(null, literal);
      if(cljs.core.truth_(or__3824__auto____7533)) {
        return or__3824__auto____7533
      }else {
        return(new cljs.core.Keyword("\ufdd0'id")).call(null, literal)
      }
    }else {
      return null
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.propositional_QMARK_ = function propositional_QMARK_(x) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, x))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'x"), cljs.core.hash_map("\ufdd0'line", 163))))].join(""));
  }
  return cljs.core.symbol_QMARK_.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, x))
};
carneades.policy_analysis.web.views.pmt.theory.literal_complement = function literal_complement(literal) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 168))))].join(""));
  }
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_pos_QMARK_.call(null, literal))) {
      return cljs.core.list.call(null, "\ufdd1'not", literal)
    }else {
      return carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, literal)
    }
  }else {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, literal))) {
      return cljs.core.assoc.call(null, literal, "\ufdd0'positive", cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_pos_QMARK_.call(null, literal)) ? false : true)
    }else {
      return null
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.statement_EQ_ = function statement_EQ_(s1, s2) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, s1))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'statement?", "\ufdd1's1"), cljs.core.hash_map("\ufdd0'line", 180))))].join(""));
  }
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, s2))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'statement?", "\ufdd1's2"), cljs.core.hash_map("\ufdd0'line", 180))))].join(""));
  }
  var and__3822__auto____7535 = cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'positive")).call(null, s1), (new cljs.core.Keyword("\ufdd0'positive")).call(null, s2));
  if(and__3822__auto____7535) {
    return carneades.policy_analysis.web.views.pmt.theory.term_EQ_.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, s1), carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, s2))
  }else {
    return and__3822__auto____7535
  }
};
carneades.policy_analysis.web.views.pmt.theory.term_EQ_ = function term_EQ_(t1, t2) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7540 = carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, t1);
    if(cljs.core.truth_(and__3822__auto____7540)) {
      return carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, t2)
    }else {
      return and__3822__auto____7540
    }
  }())) {
    var and__3822__auto____7541 = cljs.core._EQ_.call(null, carneades.policy_analysis.web.views.pmt.theory.term_functor.call(null, t1), carneades.policy_analysis.web.views.pmt.theory.term_functor.call(null, t2));
    if(and__3822__auto____7541) {
      var and__3822__auto____7542 = cljs.core._EQ_.call(null, cljs.core.count.call(null, carneades.policy_analysis.web.views.pmt.theory.term_args.call(null, t1)), cljs.core.count.call(null, carneades.policy_analysis.web.views.pmt.theory.term_args.call(null, t2)));
      if(and__3822__auto____7542) {
        return cljs.core.every_QMARK_.call(null, function(p) {
          return term_EQ_.call(null, cljs.core.first.call(null, p), cljs.core.second.call(null, p))
        }, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, carneades.policy_analysis.web.views.pmt.theory.term_args.call(null, t1), carneades.policy_analysis.web.views.pmt.theory.term_args.call(null, t2))))
      }else {
        return and__3822__auto____7542
      }
    }else {
      return and__3822__auto____7541
    }
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7543 = carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, t1);
      if(cljs.core.truth_(and__3822__auto____7543)) {
        return carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, t2)
      }else {
        return and__3822__auto____7543
      }
    }())) {
      return carneades.policy_analysis.web.views.pmt.theory.statement_EQ_.call(null, t1, t2)
    }else {
      if("\ufdd0'else") {
        return cljs.core._EQ_.call(null, t1, t2)
      }else {
        return null
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.ground_QMARK_ = function ground_QMARK_(t) {
  if(t == null) {
    return true
  }else {
    if(function() {
      var and__3822__auto____7546 = cljs.core.seq_QMARK_.call(null, t);
      if(and__3822__auto____7546) {
        return cljs.core.empty_QMARK_.call(null, t)
      }else {
        return and__3822__auto____7546
      }
    }()) {
      return true
    }else {
      if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.variable_QMARK_.call(null, t))) {
        return false
      }else {
        if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.constant_QMARK_.call(null, t))) {
          return true
        }else {
          if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, t))) {
            return ground_QMARK_.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, t))
          }else {
            if(cljs.core.coll_QMARK_.call(null, t)) {
              var and__3822__auto____7547 = ground_QMARK_.call(null, cljs.core.first.call(null, t));
              if(cljs.core.truth_(and__3822__auto____7547)) {
                return ground_QMARK_.call(null, cljs.core.rest.call(null, t))
              }else {
                return and__3822__auto____7547
              }
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.variables = function variables(t) {
  var vars__7555 = function vars(t) {
    while(true) {
      if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.variable_QMARK_.call(null, t))) {
        return cljs.core.list.call(null, t)
      }else {
        if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.constant_QMARK_.call(null, t))) {
          return cljs.core.List.EMPTY
        }else {
          if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.compound_term_QMARK_.call(null, t))) {
            var G__7562 = carneades.policy_analysis.web.views.pmt.theory.term_args.call(null, t);
            t = G__7562;
            continue
          }else {
            if(cljs.core.truth_(function() {
              var and__3822__auto____7561 = function() {
                var or__3824__auto____7559 = cljs.core.vector_QMARK_.call(null, t);
                if(or__3824__auto____7559) {
                  return or__3824__auto____7559
                }else {
                  var or__3824__auto____7560 = cljs.core.seq_QMARK_.call(null, t);
                  if(or__3824__auto____7560) {
                    return or__3824__auto____7560
                  }else {
                    return cljs.core.map_QMARK_.call(null, t)
                  }
                }
              }();
              if(cljs.core.truth_(and__3822__auto____7561)) {
                return!cljs.core.empty_QMARK_.call(null, t)
              }else {
                return and__3822__auto____7561
              }
            }())) {
              return cljs.core.concat.call(null, vars.call(null, cljs.core.first.call(null, t)), vars.call(null, cljs.core.rest.call(null, t)))
            }else {
              if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, t))) {
                return vars.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, t))
              }else {
                if("\ufdd0'else") {
                  return cljs.core.List.EMPTY
                }else {
                  return null
                }
              }
            }
          }
        }
      }
      break
    }
  };
  return cljs.core.distinct.call(null, vars__7555.call(null, t))
};
carneades.policy_analysis.web.views.pmt.theory.neg = function neg(literal) {
  return carneades.policy_analysis.web.views.pmt.theory.literal_complement.call(null, literal)
};
carneades.policy_analysis.web.views.pmt.theory.literal_predicate = function literal_predicate(s) {
  return carneades.policy_analysis.web.views.pmt.theory.term_functor.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, s))
};
carneades.policy_analysis.web.views.pmt.theory.atom_predicate = function atom_predicate(atom) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.atom_QMARK_.call(null, atom))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'atom?", "\ufdd1'atom"), cljs.core.hash_map("\ufdd0'line", 241))))].join(""));
  }
  return carneades.policy_analysis.web.views.pmt.theory.term_functor.call(null, atom)
};
carneades.policy_analysis.web.views.pmt.theory.literal__GT_sliteral = function literal__GT_sliteral(x) {
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, x))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'x"), cljs.core.hash_map("\ufdd0'line", 248))))].join(""));
  }
  if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, x))) {
    return x
  }else {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_pos_QMARK_.call(null, x))) {
      return carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, x)
    }else {
      return cljs.core.list.call(null, "\ufdd1'not", carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, x))
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.sliteral__GT_str = function sliteral__GT_str(s) {
  return[cljs.core.str(s)].join("")
};
carneades.policy_analysis.web.views.pmt.theory.statement__GT_str = function statement__GT_str(s, lang) {
  var temp__3971__auto____7565 = cljs.core.get_in.call(null, s, cljs.core.PersistentVector.fromArray(["\ufdd0'text", lang], true));
  if(cljs.core.truth_(temp__3971__auto____7565)) {
    var translated__7566 = temp__3971__auto____7565;
    return translated__7566
  }else {
    return carneades.policy_analysis.web.views.pmt.theory.sliteral__GT_str.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, s))
  }
};
carneades.policy_analysis.web.views.pmt.theory.literal__GT_str = function() {
  var literal__GT_str = null;
  var literal__GT_str__1 = function(l) {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, l))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'l"), cljs.core.hash_map("\ufdd0'line", 267))))].join(""));
    }
    return literal__GT_str.call(null, l, "\ufdd0'en")
  };
  var literal__GT_str__2 = function(l, lang) {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, l))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'l"), cljs.core.hash_map("\ufdd0'line", 270))))].join(""));
    }
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.sliteral_QMARK_.call(null, l))) {
      return carneades.policy_analysis.web.views.pmt.theory.sliteral__GT_str.call(null, l)
    }else {
      if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, l))) {
        return carneades.policy_analysis.web.views.pmt.theory.statement__GT_str.call(null, l, lang)
      }else {
        return null
      }
    }
  };
  literal__GT_str = function(l, lang) {
    switch(arguments.length) {
      case 1:
        return literal__GT_str__1.call(this, l);
      case 2:
        return literal__GT_str__2.call(this, l, lang)
    }
    throw"Invalid arity: " + arguments.length;
  };
  literal__GT_str.cljs$lang$arity$1 = literal__GT_str__1;
  literal__GT_str.cljs$lang$arity$2 = literal__GT_str__2;
  return literal__GT_str
}();
carneades.policy_analysis.web.views.pmt.theory.replace_var = function replace_var(from, to, stmt) {
  if(cljs.core.seq_QMARK_.call(null, stmt)) {
    return cljs.core.map.call(null, function(t) {
      return replace_var.call(null, from, to, t)
    }, stmt)
  }else {
    if(cljs.core.truth_(carneades.policy_analysis.web.views.pmt.theory.statement_QMARK_.call(null, stmt))) {
      return cljs.core.assoc.call(null, stmt, "\ufdd0'atom", replace_var.call(null, from, to, (new cljs.core.Keyword("\ufdd0'atom")).call(null, stmt)))
    }else {
      if("\ufdd0'else") {
        if(cljs.core._EQ_.call(null, stmt, from)) {
          return to
        }else {
          return stmt
        }
      }else {
        return null
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.sentence_QMARK_ = function sentence_QMARK_(s) {
  var s__7570 = str.trim.call(null, s);
  var and__3822__auto____7571 = cljs.core.not_EQ_.call(null, cljs.core.first.call(null, s__7570), "(");
  if(and__3822__auto____7571) {
    var and__3822__auto____7572 = cljs.core.not_EQ_.call(null, cljs.core.first.call(null, s__7570), '"');
    if(and__3822__auto____7572) {
      return cljs.core.count.call(null, str.split.call(null, s__7570, /\s+/)) > 1
    }else {
      return and__3822__auto____7572
    }
  }else {
    return and__3822__auto____7571
  }
};
carneades.policy_analysis.web.views.pmt.theory.stmt_str = function stmt_str(stmt) {
  return cljs.core.pr_str.call(null, stmt)
};
carneades.policy_analysis.web.views.pmt.theory.term_str = function term_str(term) {
  return cljs.core.pr_str.call(null, term)
};
carneades.policy_analysis.web.views.pmt.theory.format_literal_arg = function format_literal_arg(arg, language, lang) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7580 = cljs.core.symbol_QMARK_.call(null, arg);
    if(and__3822__auto____7580) {
      return language.call(null, cljs.core.keyword.call(null, arg))
    }else {
      return and__3822__auto____7580
    }
  }())) {
    var or__3824__auto____7581 = cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, arg), "\ufdd0'text", lang], true));
    if(cljs.core.truth_(or__3824__auto____7581)) {
      return or__3824__auto____7581
    }else {
      return cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, arg), "\ufdd0'text", "\ufdd0'en"], true))
    }
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7582 = carneades.policy_analysis.web.views.pmt.theory.literal_QMARK_.call(null, arg);
      if(cljs.core.truth_(and__3822__auto____7582)) {
        return language.call(null, cljs.core.keyword.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_predicate.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, arg))))
      }else {
        return and__3822__auto____7582
      }
    }())) {
      var pred__7583 = cljs.core.keyword.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_predicate.call(null, arg)));
      var fstring__7585 = function() {
        var or__3824__auto____7584 = cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7583, "\ufdd0'text", lang], true));
        if(cljs.core.truth_(or__3824__auto____7584)) {
          return or__3824__auto____7584
        }else {
          return cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7583, "\ufdd0'text", "\ufdd0'en"], true))
        }
      }();
      return cljs.core.apply.call(null, cljs.core.format, fstring__7585, carneades.policy_analysis.web.views.pmt.theory.format_literal_args.call(null, arg, language, lang))
    }else {
      if("\ufdd0'else") {
        return[cljs.core.str(arg)].join("")
      }else {
        return null
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.format_literal_args = function format_literal_args(literal, language, lang) {
  return cljs.core.map.call(null, function(p1__7573_SHARP_) {
    return carneades.policy_analysis.web.views.pmt.theory.format_literal_arg.call(null, p1__7573_SHARP_, language, lang)
  }, cljs.core.rest.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_atom.call(null, literal)))
};
carneades.policy_analysis.web.views.pmt.theory.array__GT_literal = function array__GT_literal(x) {
  var c__7587 = cljs.core.js__GT_clj.call(null, x);
  if(cljs.core.vector_QMARK_.call(null, c__7587)) {
    return cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, array__GT_literal, c__7587))
  }else {
    if(cljs.core.string_QMARK_.call(null, c__7587)) {
      return cljs.core.symbol.call(null, c__7587)
    }else {
      if("\ufdd0'else") {
        return c__7587
      }else {
        return null
      }
    }
  }
};
carneades.policy_analysis.web.views.pmt.theory.format_statement = function format_statement(literal, language, lang, selector) {
  var literal__7593 = carneades.policy_analysis.web.views.pmt.theory.array__GT_literal.call(null, literal);
  var pred__7594 = cljs.core.keyword.call(null, carneades.policy_analysis.web.views.pmt.theory.literal_predicate.call(null, literal__7593));
  var lang__7595 = cljs.core.keyword.call(null, lang);
  var selector__7596 = cljs.core.keyword.call(null, selector);
  if(cljs.core.string_QMARK_.call(null, literal__7593)) {
    return literal__7593
  }else {
    if(cljs.core.truth_(cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7594], true)))) {
      var fstring__7597 = cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7594, "\ufdd0'forms", lang__7595, selector__7596], true));
      return cljs.core.apply.call(null, cljs.core.format, fstring__7597, carneades.policy_analysis.web.views.pmt.theory.format_literal_args.call(null, literal__7593, language, lang__7595))
    }else {
      if("\ufdd0'else") {
        return[cljs.core.str(literal__7593)].join("")
      }else {
        return null
      }
    }
  }
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.theory.format_statement", carneades.policy_analysis.web.views.pmt.theory.format_statement);
carneades.policy_analysis.web.views.pmt.theory.convert_language = function convert_language(language) {
  return cljs.core.js__GT_clj.call(null, language, "\ufdd0'keywordize-keys", true)
};
goog.exportSymbol("carneades.policy_analysis.web.views.pmt.theory.convert_language", carneades.policy_analysis.web.views.pmt.theory.convert_language);
