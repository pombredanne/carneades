# Copyright (C) 2011 Fraunhofer Gesellschaft 
# Licensed under the EUPL V.1.1

# Carneades Argument Format (CAF), Version 1.0
# CAF is based on the argument graph part of 
# the Legal Knowledge Interchange Format (LKIF)

datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

grammar {
    start = element caf { 
        attribute version { xsd:string }?,  # version of the CAF schema
        MetaData, Sources, ArgumentGraph 
    }
    
    # Simple Dublin Core Elements
    # See: http://en.wikipedia.org/wiki/Dublin_Core
    
    Contributor = element contributor { text }
    Coverage = element coverage { text }
    Creator = element creator { text }
    Date = element date { text }
    
    Description = element description {
    	attribute lang { xsd:language },
    	text
    }
    
    Descriptions = element descriptions { Description+ }
    
    Format = element format { text }
    Identifier = element identifier { text }
    Language = element language { text }
    Publisher = element publisher { text }
    Relation = element relation { text }
    Rights = element rights { text }
    Subject = element subject { text }
   
    Title = element title { 
        attribute lang { xsd:language },
        text 
    }
    
    Titles = element titles { Title+ }
    
    Type = element type { text }
    
    DublinElement = ( Contributor | Coverage | Creator |
                      Date | Description | Format |
                      Identifier | Language | Publisher |
                      Relation | Rights | Subject | Title | Type )
                      
                       
    MetaData = element metadata { MetaDatum+ }
         
    MetaDatum = element metadum { 
    	attribute uri { xsd:anyURI }, # of a source
    	DublinElement+
    }
    
    Source = element source { 
        attribute uri { xsd:anyURI },     # of a source
    	attribute element { xsd:anyURI }  # of an element derived from the source 
    } 
    
    Sources = element sources { Source+ }                                           
        
    ArgumentGraph = element argument-graph { 
        attribute id { xsd:ID }?, 
        attribute main-issue { xsd:anyURI }?, 
        Titles?, Statements, Arguments
    }
    
    Statements = element statements { Statement+ }
    
    Statement = element statement { 
        attribute id { xsd:ID },
        attribute weight { xsd:float }?,  # range 0.0 to 1.0, default 0.5
        # weights can be interpreted as an ordinal scale, e.g.
        # 0.0=false, 0.25=assumed falsed, 0.5=questioned, 0.75=assumed true, 1.00=true
        attribute standard { "DV" | "PE" | "CCE" | "BRD" }?, # default: PE
        Atom?, Descriptions
    }
             
    Arguments = element arguments { Argument* }
    Argument = element argument { 
    	attribute id { xsd:ID },
        attribute direction { "pro" | "con" }?,
        attribute scheme { xsd:anyURI | xsd:string }?,
        attribute weight { xsd:float }?,  # range: 0.0 to 1.0; default: 0.5
        Titles?, Conclusion, Premises
    }
    
    Premises = element premises { Premise* }
    
    Premise = element premise { 
        attribute polarity { "positive" | "negative" }?, # default: positive
        attribute role { xsd:anyURI | xsd:string }?,
        attribute implicit { xsd:boolean}?,   # default: false
        attribute statement { xsd:anyURI },
     } 
                  
    Conclusion = element conclusion { 
        attribute statement { xsd:anyURI }, 
	}
	
	