<?xml version="1.0" encoding="UTF-8"?>

<project default ="full">
  <property environment="env"/>
  
  <property name="gui.target" value="1.5"/>
  <property name="gui.srcdir" value="gui/src"/>
  <property name="gui.basedir" value="gui/"/>
  <property name="distdir" value="dist"/>
  <property name="gui.distdir" value="dist"/>
  <property name="gui.deploydir" value="deployment"/>
  <property name="gui.manifestdir" value="gui/manifests"/>
  <property name="gui.builddir" value="gui/build"/>
  
  <property name="javafxc.home" value="${env.JAVAFXHOME}"/>
  <property name="javafxc.class.path" 
			value="${javafxc.home}/lib/javafxc.jar:
				   ${javafxc.home}/lib/javafxrt.jar:
				   ${javafxc.home}/lib/Scenario.jar"/>

  <path id="gui.class.path">
	<pathelement location="${gui.basedir}/lib/javafx-xml.jar"/>
	<pathelement location="${javafxc.home}/lib/javafxgui.jar"/>
	<pathelement location="${javafxc.home}/lib/javafx-swing.jar"/>
	<pathelement location="${javafxc.home}/lib/javafxrt.jar"/>
	<pathelement location="${javafxc.home}/lib/javafxc.jar"/>
	<pathelement location="${javafxc.home}/lib/jmc.jar"/>
	<Pathelement location="${javafxc.home}/lib/Scenario.jar"/>
	<pathelement location="${gui.basedir}/lib/nimbus.jar"/>
	<pathelement location="${gui.basedir}/lib/svnant.jar"/>
	<pathelement location="${gui.basedir}/lib/svnClientAdapter.jar"/>
  </path>

  <taskdef resource="javafxc-ant-task.properties" classpath="${javafxc.class.path}"/>
  
  <taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" 
		   classpath="${gui.basedir}/lib/jarbundler-2.0.0.jar" onerror="report"/>
  
  <property name="one-jar.version" value="0.96"/>
  <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" 
		   classpath="${gui.basedir}/lib/one-jar-ant-task-${one-jar.version}.jar" onerror="report"/>

  <import file="webstart.xml" optional="true"/>
  
  <!-- single build targets for individual files -->

  <target name="view">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="GraphView.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="cgraph">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="CarneadesGraph.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="file">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="ArgumentFile.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="commands">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="Commands.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="treelayout">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="TreeLayout.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="argument">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="Argument.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="control">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="GraphControl.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="elist">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="ElementList.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="elements">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="Elements.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="constants">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="GC.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="list">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="GraphList.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="main">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="CarneadesMain.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="edit">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="GraphEdit.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="frame">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="GraphFrame.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <target name="graph">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="Graph.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>

  <!-- targets affecting the full build -->

  <target name="version">
	<typedef resource="com/googlecode/svntask/svntask.xml">
	  <classpath>
		<fileset dir="${gui.basedir}/lib">
		  <include name="svnkit.jar"/>
		  <include name="svntask.jar"/>
		</fileset>
	  </classpath>
	</typedef>
	
	<echo message="Updating to latest revision version ..."/>
	<svn><update path="." force="true" recursive="true" /></svn>
	
	<svn><info path="." revisionProperty="revisionVersion" /></svn>
	<property name="version" value="${revisionVersion}" />

	<echo message="${version}" file="${gui.deploydir}/webstart/version.txt"/>
  </target>

  <target name="compile">
	<javafxc 
		srcdir="${gui.srcdir}"
		destdir="${gui.builddir}" 
		includes="**/*.fx"
		excludes="**/*_old.fx"
		target="${gui.target}"
		compilerclasspath="${javafxc.class.path}">
	  <classpath refid="gui.class.path"/>
	</javafxc>
  </target>
  
  <target name="corejar" depends="">
	<echo message="Copying images files into build directory tree ..." />
	<copy todir="${gui.builddir}">
	  <fileset dir="${gui.basedir}data/images"
			   includes="**/*"/>
	</copy>
	<echo message="Packing core jar ..." />
	<jar destfile="${gui.builddir}/CarneadesCore.jar"
		 basedir="${gui.builddir}"
		 includes="**/*.class, **/*.jpg, **/*.png, **/*.txt"
		 manifest="${gui.manifestdir}/coremanifest"
		 />
  </target>
  
  <target name="jar" depends="corejar">
	<one-jar destfile="${gui.deploydir}/lib/Carneades.jar" manifest="${gui.manifestdir}/packmanifest">
	  <main jar="${gui.builddir}/CarneadesCore.jar">
	  </main>
	  <lib>
		<fileset dir="${javafxc.home}/lib/"
				 includes="javafxc.jar, javafxrt.jar, Scenario.jar, jmc.jar, javafxgui.jar, javafx-swing.jar"/>
		<fileset dir="${gui.basedir}/lib/"
				 includes="javafx-xml.jar, nimbus.jar"/>
	  </lib>
	</one-jar> 
  </target>
  
  <!-- Run targets -->

  <target name="rjar" depends="jar">
	<echo message="Executing from all-in-one-jar ..." />
	<java jar="${gui.deploydir}/lib/Carneades.jar" fork="true"/>
  </target>

  <target name="rwebstart" depends="jar, webstart">
	<echo message="Executing from unsigned webstart jar ..." />
	<java jar="${gui.distdir}/webstart/Carneades.jar" fork="true"/>
  </target>

	  <target name="rwebstart_signed" depends="jar, webstart, websign">
	<echo message="Executing from signed webstart jar ..." />
	<java jar="${gui.distdir}/webstart/Carneades.jar" fork="true"/>
  </target>

  <target name="rclass">
        <echo message="Executing from class files ..." />
        <exec executable="javafx">
          <arg value="-cp"/>
          <arg value="${gui.builddir}"/>
          <arg value="Carneades.Control.CarneadesMain"/>
        </exec>
  </target>

  <target name="r" depends="rwebstart_signed"/>
  <target name="rp" depends="rwebstart"/>
  
  <!-- webstart deployment target -->
  
  <target name="webstart.fail" unless="webstartfile.loaded">
	<echo message="File webstart.xml not found. Modify the template and rename it."/>
  </target>

  <target name="webstart.run" depends="corejar" if="webstartfile.loaded">
	<delete dir="${gui.distdir}/webstart"/>
	<mkdir dir="${gui.distdir}/webstart"/>
	<mkdir dir="${gui.distdir}/webstart/lib"/>
	<copy todir="${gui.distdir}/webstart">
	  <fileset dir="${gui.deploydir}/webstart" includes="*/**"/>
	</copy>
	<copy file="${gui.builddir}/CarneadesCore.jar" tofile="${gui.distdir}/webstart/Carneades.jar"/>
	<copy todir="${gui.distdir}/webstart/lib/">
	  <fileset dir="${javafxc.home}/lib/"
			   includes="javafxc.jar, 
						 javafxrt.jar, 
						 Scenario.jar, 
						 jmc.jar, 
						 javafxgui.jar, 
						 javafx-swing.jar"/>
	  <fileset dir="${gui.basedir}/lib/" includes="javafx-xml.jar, nimbus.jar"/>
	</copy>
  </target>

  <target name="websign">
	<signjar alias="${webstart.alias}" storepass="${webstart.storepass}">
	  <fileset dir="${distdir}/webstart/">
		<include name="**/*.jar"/>
	  </fileset>
	</signjar>
  </target>

  <target name="webstart" depends="corejar, webstart.run, webstart.fail"/>

  <!-- platform distribution build targets -->

  <target name="deploywin" depends="jar, version">
	<echo message="Creating MS Windows package ..."/>
	<delete dir="${gui.distdir}/Carneades"/>
	<delete file="${gui.distdir}/carneades-win-${version}.zip"/>
	<mkdir dir="${gui.distdir}/Carneades"/>
	<copy todir="${gui.distdir}/Carneades">
	  <fileset dir="${gui.deploydir}/"
			   excludes="bin/deploymac.sh,
						 bin/deploywin.sh, 
						 **/webstart/**"/>
	</copy>
	<exec executable="sh" dir=".">
	  <arg value="${gui.deploydir}/bin/deploywin.sh"/>
	  <arg value="${version}"/>
	</exec>
	<delete dir="${gui.distdir}/Carneades"/>	
  </target>

  <target name="deploymac" depends="jar, version">
	<echo message="Deploying Mac OS package ..."/>
	<delete dir="${gui.distdir}/Carneades"/>
	<delete file="${gui.distdir}/carneades-mac-${version}.zip"/>
	<mkdir dir="${gui.distdir}/Carneades"/>
	<copy todir="${gui.distdir}/Carneades">
	  <fileset dir="${gui.deploydir}/"
			   excludes="${gui.basedir}bin/Carneades.bat, 
						 ${gui.basedir}lib/Carneades.jar, 
						 ${gui.basedir}bin/deploymac.sh, 
						 ${gui.basedir}bin/deploywin.sh, 
						 **/webstart/**"/>
	</copy>
	<jarbundler dir="${gui.distdir}/Carneades/bin"
				name="Carneades"
				mainclass="com.simontuffs.onejar.Boot" 
				Jar="${gui.deploydir}/lib/Carneades.jar"
				vmoptions=" -Xdock:name='Carneades'"/>
	<exec executable="sh" dir=".">
	  <arg value="${gui.deploydir}/bin/deploymac.sh"/>
	  <arg value="${version}"/>
	</exec>
	<delete dir="${gui.distdir}/Carneades"/>
  </target>
  
  <!-- additional targets -->

  <target name="doc">
	<echo message="Generating documentation ..."/>
	<exec executable="javafxdoc">
	  <arg value="gui/src/*"/>
	  <arg value="-quiet"/>
	  <arg value="-d dist/guidoc"/>
	</exec>
  </target>

  <target name="examples">
	<echo message="Updating example files ..."/>
	<copy todir="${gui.deploydir}/examples">
	  <fileset dir="${gui.deploydir}/examples/"/>
	</copy>
  </target>

  <target name="sources" depends="version">
	<delete file="${distdir}/carneades-src-${version}.zip"/>
	<jar destfile="${distdir}/carneades-src-${version}.zip" 
		 basedir="." 
		 excludes="webstart.xml, **/*.class, **/Carneades.jar, **/CarneadesCore.jar, **/dist/**"/>
  </target>
  
  <target name="deploy" depends="jar, version, examples, webstart, websign, sources"/>
  
  <target name="full" depends="compile, deploy, doc">
  </target>
  
</project>
	  
